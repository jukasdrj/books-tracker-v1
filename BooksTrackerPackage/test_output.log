warning: 'bookstrackerpackage': found 5 file(s) which are unhandled; explicitly declare them as resources or exclude from the target
    /Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportProgressIntegrationExample.swift.disabled
    /Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/IMPORT_LIVE_ACTIVITY_GUIDE.md
    /Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/VISUAL_DESIGN_SPECS.md
    /Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/README.md
    /Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfCameraView.swift.disabled
[0/1] Planning build
Building for debugging...
[0/4] Write sources
[1/4] Write swift-version-39B54973F684ADAB.txt
[3/59] Compiling BooksTrackerFeature EditionMetadataView.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/EditionMetadataView.swift:405:41: error: cannot find type 'UIImpactFeedbackGenerator' in scope
403 |     }
404 | 
405 |     private func triggerHaptic(_ style: UIImpactFeedbackGenerator.FeedbackStyle) {
    |                                         `- error: cannot find type 'UIImpactFeedbackGenerator' in scope
406 |         #if canImport(UIKit)
407 |         let impactFeedback = UIImpactFeedbackGenerator(style: style)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/EditionMetadataView.swift:444:41: error: cannot find type 'UIImpactFeedbackGenerator' in scope
442 |     }
443 | 
444 |     private func triggerHaptic(_ style: UIImpactFeedbackGenerator.FeedbackStyle) {
    |                                         `- error: cannot find type 'UIImpactFeedbackGenerator' in scope
445 |         #if canImport(UIKit)
446 |         let impactFeedback = UIImpactFeedbackGenerator(style: style)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:104:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
102 |             .themedBackground()
103 |             .navigationTitle("Scan ISBN")
104 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
105 |             .toolbar {
106 |                 ToolbarItem(placement: .navigationBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:106:41: error: 'navigationBarLeading' is unavailable in macOS
104 |             .navigationBarTitleDisplayMode(.inline)
105 |             .toolbar {
106 |                 ToolbarItem(placement: .navigationBarLeading) {
    |                                         `- error: 'navigationBarLeading' is unavailable in macOS
107 |                     Button("Cancel") {
108 |                         cleanup()

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:337:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
335 | 
336 |         // Haptic feedback
337 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
338 |         impactFeedback.impactOccurred()
339 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:337:64: error: cannot infer contextual base in reference to member 'medium'
335 | 
336 |         // Haptic feedback
337 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                                                                `- error: cannot infer contextual base in reference to member 'medium'
338 |         impactFeedback.impactOccurred()
339 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:362:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
360 |     private func toggleTorch() {
361 |         // Haptic feedback
362 |         let impactFeedback = UIImpactFeedbackGenerator(style: .light)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
363 |         impactFeedback.impactOccurred()
364 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:362:64: error: cannot infer contextual base in reference to member 'light'
360 |     private func toggleTorch() {
361 |         // Haptic feedback
362 |         let impactFeedback = UIImpactFeedbackGenerator(style: .light)
    |                                                                `- error: cannot infer contextual base in reference to member 'light'
363 |         impactFeedback.impactOccurred()
364 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:390:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
388 |     private func focusCamera() {
389 |         // Haptic feedback
390 |         let impactFeedback = UIImpactFeedbackGenerator(style: .light)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
391 |         impactFeedback.impactOccurred()
392 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:390:64: error: cannot infer contextual base in reference to member 'light'
388 |     private func focusCamera() {
389 |         // Haptic feedback
390 |         let impactFeedback = UIImpactFeedbackGenerator(style: .light)
    |                                                                `- error: cannot infer contextual base in reference to member 'light'
391 |         impactFeedback.impactOccurred()
392 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:436:42: error: cannot find 'UIApplication' in scope
434 | 
435 |     private func openSettings() {
436 |         if let settingsURL = URL(string: UIApplication.openSettingsURLString) {
    |                                          `- error: cannot find 'UIApplication' in scope
437 |             UIApplication.shared.open(settingsURL)
438 |         }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:437:13: error: cannot find 'UIApplication' in scope
435 |     private func openSettings() {
436 |         if let settingsURL = URL(string: UIApplication.openSettingsURLString) {
437 |             UIApplication.shared.open(settingsURL)
    |             `- error: cannot find 'UIApplication' in scope
438 |         }
439 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:264:30: error: cannot find type 'Context' in scope
262 |     @Binding var sessionState: CameraSessionState
263 | 
264 |     func makeUIView(context: Context) -> CameraPreviewUIView {
    |                              `- error: cannot find type 'Context' in scope
265 |         CameraPreviewUIView()
266 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:268:63: error: cannot find type 'Context' in scope
266 |     }
267 | 
268 |     func updateUIView(_ uiView: CameraPreviewUIView, context: Context) {
    |                                                               `- error: cannot find type 'Context' in scope
269 |         Task {
270 |             await uiView.updateSession(cameraManager: cameraManager)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:260:36: error: cannot find type 'UIViewRepresentable' in scope
258 | // MARK: - Camera Preview Layer
259 | 
260 | private struct CameraPreviewLayer: UIViewRepresentable {
    |                                    `- error: cannot find type 'UIViewRepresentable' in scope
261 |     let cameraManager: CameraManager
262 |     @Binding var sessionState: CameraSessionState

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:275:42: error: cannot find type 'UIView' in scope
273 | }
274 | 
275 | private final class CameraPreviewUIView: UIView {
    |                                          `- error: cannot find type 'UIView' in scope
276 |     private var previewLayer: AVCaptureVideoPreviewLayer?
277 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:296:19: error: method does not override any method from its superclass
294 |     }
295 | 
296 |     override func layoutSubviews() {
    |                   `- error: method does not override any method from its superclass
297 |         super.layoutSubviews()
298 |         previewLayer?.frame = bounds

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:84:18: error: value of type 'CameraPreviewLayer' has no member 'onTapGesture'
 82 |                     sessionState: $sessionState
 83 |                 )
 84 |                 .onTapGesture { location in
    |                  `- error: value of type 'CameraPreviewLayer' has no member 'onTapGesture'
 85 |                     if configuration.enableTapToFocus {
 86 |                         handleTapToFocus(at: location, in: geometry.size)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:287:34: error: cannot find 'bounds' in scope
285 |             let previewLayer = AVCaptureVideoPreviewLayer(session: session)
286 |             previewLayer.videoGravity = .resizeAspectFill
287 |             previewLayer.frame = bounds
    |                                  `- error: cannot find 'bounds' in scope
288 | 
289 |             layer.addSublayer(previewLayer)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:289:13: error: cannot find 'layer' in scope
287 |             previewLayer.frame = bounds
288 | 
289 |             layer.addSublayer(previewLayer)
    |             `- error: cannot find 'layer' in scope
290 |             self.previewLayer = previewLayer
291 |         } catch {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:297:9: error: 'super' cannot be used in class 'CameraPreviewUIView' because it has no superclass
295 | 
296 |     override func layoutSubviews() {
297 |         super.layoutSubviews()
    |         `- error: 'super' cannot be used in class 'CameraPreviewUIView' because it has no superclass
298 |         previewLayer?.frame = bounds
299 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:298:31: error: cannot find 'bounds' in scope
296 |     override func layoutSubviews() {
297 |         super.layoutSubviews()
298 |         previewLayer?.frame = bounds
    |                               `- error: cannot find 'bounds' in scope
299 |     }
300 | }
[4/59] Compiling BooksTrackerFeature String+TitleNormalization.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/EditionMetadataView.swift:405:41: error: cannot find type 'UIImpactFeedbackGenerator' in scope
403 |     }
404 | 
405 |     private func triggerHaptic(_ style: UIImpactFeedbackGenerator.FeedbackStyle) {
    |                                         `- error: cannot find type 'UIImpactFeedbackGenerator' in scope
406 |         #if canImport(UIKit)
407 |         let impactFeedback = UIImpactFeedbackGenerator(style: style)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/EditionMetadataView.swift:444:41: error: cannot find type 'UIImpactFeedbackGenerator' in scope
442 |     }
443 | 
444 |     private func triggerHaptic(_ style: UIImpactFeedbackGenerator.FeedbackStyle) {
    |                                         `- error: cannot find type 'UIImpactFeedbackGenerator' in scope
445 |         #if canImport(UIKit)
446 |         let impactFeedback = UIImpactFeedbackGenerator(style: style)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:104:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
102 |             .themedBackground()
103 |             .navigationTitle("Scan ISBN")
104 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
105 |             .toolbar {
106 |                 ToolbarItem(placement: .navigationBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:106:41: error: 'navigationBarLeading' is unavailable in macOS
104 |             .navigationBarTitleDisplayMode(.inline)
105 |             .toolbar {
106 |                 ToolbarItem(placement: .navigationBarLeading) {
    |                                         `- error: 'navigationBarLeading' is unavailable in macOS
107 |                     Button("Cancel") {
108 |                         cleanup()

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:337:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
335 | 
336 |         // Haptic feedback
337 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
338 |         impactFeedback.impactOccurred()
339 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:337:64: error: cannot infer contextual base in reference to member 'medium'
335 | 
336 |         // Haptic feedback
337 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                                                                `- error: cannot infer contextual base in reference to member 'medium'
338 |         impactFeedback.impactOccurred()
339 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:362:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
360 |     private func toggleTorch() {
361 |         // Haptic feedback
362 |         let impactFeedback = UIImpactFeedbackGenerator(style: .light)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
363 |         impactFeedback.impactOccurred()
364 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:362:64: error: cannot infer contextual base in reference to member 'light'
360 |     private func toggleTorch() {
361 |         // Haptic feedback
362 |         let impactFeedback = UIImpactFeedbackGenerator(style: .light)
    |                                                                `- error: cannot infer contextual base in reference to member 'light'
363 |         impactFeedback.impactOccurred()
364 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:390:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
388 |     private func focusCamera() {
389 |         // Haptic feedback
390 |         let impactFeedback = UIImpactFeedbackGenerator(style: .light)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
391 |         impactFeedback.impactOccurred()
392 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:390:64: error: cannot infer contextual base in reference to member 'light'
388 |     private func focusCamera() {
389 |         // Haptic feedback
390 |         let impactFeedback = UIImpactFeedbackGenerator(style: .light)
    |                                                                `- error: cannot infer contextual base in reference to member 'light'
391 |         impactFeedback.impactOccurred()
392 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:436:42: error: cannot find 'UIApplication' in scope
434 | 
435 |     private func openSettings() {
436 |         if let settingsURL = URL(string: UIApplication.openSettingsURLString) {
    |                                          `- error: cannot find 'UIApplication' in scope
437 |             UIApplication.shared.open(settingsURL)
438 |         }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:437:13: error: cannot find 'UIApplication' in scope
435 |     private func openSettings() {
436 |         if let settingsURL = URL(string: UIApplication.openSettingsURLString) {
437 |             UIApplication.shared.open(settingsURL)
    |             `- error: cannot find 'UIApplication' in scope
438 |         }
439 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:264:30: error: cannot find type 'Context' in scope
262 |     @Binding var sessionState: CameraSessionState
263 | 
264 |     func makeUIView(context: Context) -> CameraPreviewUIView {
    |                              `- error: cannot find type 'Context' in scope
265 |         CameraPreviewUIView()
266 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:268:63: error: cannot find type 'Context' in scope
266 |     }
267 | 
268 |     func updateUIView(_ uiView: CameraPreviewUIView, context: Context) {
    |                                                               `- error: cannot find type 'Context' in scope
269 |         Task {
270 |             await uiView.updateSession(cameraManager: cameraManager)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:260:36: error: cannot find type 'UIViewRepresentable' in scope
258 | // MARK: - Camera Preview Layer
259 | 
260 | private struct CameraPreviewLayer: UIViewRepresentable {
    |                                    `- error: cannot find type 'UIViewRepresentable' in scope
261 |     let cameraManager: CameraManager
262 |     @Binding var sessionState: CameraSessionState

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:275:42: error: cannot find type 'UIView' in scope
273 | }
274 | 
275 | private final class CameraPreviewUIView: UIView {
    |                                          `- error: cannot find type 'UIView' in scope
276 |     private var previewLayer: AVCaptureVideoPreviewLayer?
277 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:296:19: error: method does not override any method from its superclass
294 |     }
295 | 
296 |     override func layoutSubviews() {
    |                   `- error: method does not override any method from its superclass
297 |         super.layoutSubviews()
298 |         previewLayer?.frame = bounds

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:84:18: error: value of type 'CameraPreviewLayer' has no member 'onTapGesture'
 82 |                     sessionState: $sessionState
 83 |                 )
 84 |                 .onTapGesture { location in
    |                  `- error: value of type 'CameraPreviewLayer' has no member 'onTapGesture'
 85 |                     if configuration.enableTapToFocus {
 86 |                         handleTapToFocus(at: location, in: geometry.size)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:287:34: error: cannot find 'bounds' in scope
285 |             let previewLayer = AVCaptureVideoPreviewLayer(session: session)
286 |             previewLayer.videoGravity = .resizeAspectFill
287 |             previewLayer.frame = bounds
    |                                  `- error: cannot find 'bounds' in scope
288 | 
289 |             layer.addSublayer(previewLayer)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:289:13: error: cannot find 'layer' in scope
287 |             previewLayer.frame = bounds
288 | 
289 |             layer.addSublayer(previewLayer)
    |             `- error: cannot find 'layer' in scope
290 |             self.previewLayer = previewLayer
291 |         } catch {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:297:9: error: 'super' cannot be used in class 'CameraPreviewUIView' because it has no superclass
295 | 
296 |     override func layoutSubviews() {
297 |         super.layoutSubviews()
    |         `- error: 'super' cannot be used in class 'CameraPreviewUIView' because it has no superclass
298 |         previewLayer?.frame = bounds
299 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:298:31: error: cannot find 'bounds' in scope
296 |     override func layoutSubviews() {
297 |         super.layoutSubviews()
298 |         previewLayer?.frame = bounds
    |                               `- error: cannot find 'bounds' in scope
299 |     }
300 | }
[5/59] Compiling BooksTrackerFeature ISBNValidator.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/EditionMetadataView.swift:405:41: error: cannot find type 'UIImpactFeedbackGenerator' in scope
403 |     }
404 | 
405 |     private func triggerHaptic(_ style: UIImpactFeedbackGenerator.FeedbackStyle) {
    |                                         `- error: cannot find type 'UIImpactFeedbackGenerator' in scope
406 |         #if canImport(UIKit)
407 |         let impactFeedback = UIImpactFeedbackGenerator(style: style)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/EditionMetadataView.swift:444:41: error: cannot find type 'UIImpactFeedbackGenerator' in scope
442 |     }
443 | 
444 |     private func triggerHaptic(_ style: UIImpactFeedbackGenerator.FeedbackStyle) {
    |                                         `- error: cannot find type 'UIImpactFeedbackGenerator' in scope
445 |         #if canImport(UIKit)
446 |         let impactFeedback = UIImpactFeedbackGenerator(style: style)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:104:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
102 |             .themedBackground()
103 |             .navigationTitle("Scan ISBN")
104 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
105 |             .toolbar {
106 |                 ToolbarItem(placement: .navigationBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:106:41: error: 'navigationBarLeading' is unavailable in macOS
104 |             .navigationBarTitleDisplayMode(.inline)
105 |             .toolbar {
106 |                 ToolbarItem(placement: .navigationBarLeading) {
    |                                         `- error: 'navigationBarLeading' is unavailable in macOS
107 |                     Button("Cancel") {
108 |                         cleanup()

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:337:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
335 | 
336 |         // Haptic feedback
337 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
338 |         impactFeedback.impactOccurred()
339 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:337:64: error: cannot infer contextual base in reference to member 'medium'
335 | 
336 |         // Haptic feedback
337 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                                                                `- error: cannot infer contextual base in reference to member 'medium'
338 |         impactFeedback.impactOccurred()
339 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:362:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
360 |     private func toggleTorch() {
361 |         // Haptic feedback
362 |         let impactFeedback = UIImpactFeedbackGenerator(style: .light)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
363 |         impactFeedback.impactOccurred()
364 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:362:64: error: cannot infer contextual base in reference to member 'light'
360 |     private func toggleTorch() {
361 |         // Haptic feedback
362 |         let impactFeedback = UIImpactFeedbackGenerator(style: .light)
    |                                                                `- error: cannot infer contextual base in reference to member 'light'
363 |         impactFeedback.impactOccurred()
364 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:390:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
388 |     private func focusCamera() {
389 |         // Haptic feedback
390 |         let impactFeedback = UIImpactFeedbackGenerator(style: .light)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
391 |         impactFeedback.impactOccurred()
392 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:390:64: error: cannot infer contextual base in reference to member 'light'
388 |     private func focusCamera() {
389 |         // Haptic feedback
390 |         let impactFeedback = UIImpactFeedbackGenerator(style: .light)
    |                                                                `- error: cannot infer contextual base in reference to member 'light'
391 |         impactFeedback.impactOccurred()
392 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:436:42: error: cannot find 'UIApplication' in scope
434 | 
435 |     private func openSettings() {
436 |         if let settingsURL = URL(string: UIApplication.openSettingsURLString) {
    |                                          `- error: cannot find 'UIApplication' in scope
437 |             UIApplication.shared.open(settingsURL)
438 |         }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:437:13: error: cannot find 'UIApplication' in scope
435 |     private func openSettings() {
436 |         if let settingsURL = URL(string: UIApplication.openSettingsURLString) {
437 |             UIApplication.shared.open(settingsURL)
    |             `- error: cannot find 'UIApplication' in scope
438 |         }
439 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:264:30: error: cannot find type 'Context' in scope
262 |     @Binding var sessionState: CameraSessionState
263 | 
264 |     func makeUIView(context: Context) -> CameraPreviewUIView {
    |                              `- error: cannot find type 'Context' in scope
265 |         CameraPreviewUIView()
266 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:268:63: error: cannot find type 'Context' in scope
266 |     }
267 | 
268 |     func updateUIView(_ uiView: CameraPreviewUIView, context: Context) {
    |                                                               `- error: cannot find type 'Context' in scope
269 |         Task {
270 |             await uiView.updateSession(cameraManager: cameraManager)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:260:36: error: cannot find type 'UIViewRepresentable' in scope
258 | // MARK: - Camera Preview Layer
259 | 
260 | private struct CameraPreviewLayer: UIViewRepresentable {
    |                                    `- error: cannot find type 'UIViewRepresentable' in scope
261 |     let cameraManager: CameraManager
262 |     @Binding var sessionState: CameraSessionState

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:275:42: error: cannot find type 'UIView' in scope
273 | }
274 | 
275 | private final class CameraPreviewUIView: UIView {
    |                                          `- error: cannot find type 'UIView' in scope
276 |     private var previewLayer: AVCaptureVideoPreviewLayer?
277 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:296:19: error: method does not override any method from its superclass
294 |     }
295 | 
296 |     override func layoutSubviews() {
    |                   `- error: method does not override any method from its superclass
297 |         super.layoutSubviews()
298 |         previewLayer?.frame = bounds

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:84:18: error: value of type 'CameraPreviewLayer' has no member 'onTapGesture'
 82 |                     sessionState: $sessionState
 83 |                 )
 84 |                 .onTapGesture { location in
    |                  `- error: value of type 'CameraPreviewLayer' has no member 'onTapGesture'
 85 |                     if configuration.enableTapToFocus {
 86 |                         handleTapToFocus(at: location, in: geometry.size)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:287:34: error: cannot find 'bounds' in scope
285 |             let previewLayer = AVCaptureVideoPreviewLayer(session: session)
286 |             previewLayer.videoGravity = .resizeAspectFill
287 |             previewLayer.frame = bounds
    |                                  `- error: cannot find 'bounds' in scope
288 | 
289 |             layer.addSublayer(previewLayer)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:289:13: error: cannot find 'layer' in scope
287 |             previewLayer.frame = bounds
288 | 
289 |             layer.addSublayer(previewLayer)
    |             `- error: cannot find 'layer' in scope
290 |             self.previewLayer = previewLayer
291 |         } catch {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:297:9: error: 'super' cannot be used in class 'CameraPreviewUIView' because it has no superclass
295 | 
296 |     override func layoutSubviews() {
297 |         super.layoutSubviews()
    |         `- error: 'super' cannot be used in class 'CameraPreviewUIView' because it has no superclass
298 |         previewLayer?.frame = bounds
299 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:298:31: error: cannot find 'bounds' in scope
296 |     override func layoutSubviews() {
297 |         super.layoutSubviews()
298 |         previewLayer?.frame = bounds
    |                               `- error: cannot find 'bounds' in scope
299 |     }
300 | }
[6/59] Compiling BooksTrackerFeature ModelTypes.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/EditionMetadataView.swift:405:41: error: cannot find type 'UIImpactFeedbackGenerator' in scope
403 |     }
404 | 
405 |     private func triggerHaptic(_ style: UIImpactFeedbackGenerator.FeedbackStyle) {
    |                                         `- error: cannot find type 'UIImpactFeedbackGenerator' in scope
406 |         #if canImport(UIKit)
407 |         let impactFeedback = UIImpactFeedbackGenerator(style: style)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/EditionMetadataView.swift:444:41: error: cannot find type 'UIImpactFeedbackGenerator' in scope
442 |     }
443 | 
444 |     private func triggerHaptic(_ style: UIImpactFeedbackGenerator.FeedbackStyle) {
    |                                         `- error: cannot find type 'UIImpactFeedbackGenerator' in scope
445 |         #if canImport(UIKit)
446 |         let impactFeedback = UIImpactFeedbackGenerator(style: style)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:104:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
102 |             .themedBackground()
103 |             .navigationTitle("Scan ISBN")
104 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
105 |             .toolbar {
106 |                 ToolbarItem(placement: .navigationBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:106:41: error: 'navigationBarLeading' is unavailable in macOS
104 |             .navigationBarTitleDisplayMode(.inline)
105 |             .toolbar {
106 |                 ToolbarItem(placement: .navigationBarLeading) {
    |                                         `- error: 'navigationBarLeading' is unavailable in macOS
107 |                     Button("Cancel") {
108 |                         cleanup()

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:337:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
335 | 
336 |         // Haptic feedback
337 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
338 |         impactFeedback.impactOccurred()
339 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:337:64: error: cannot infer contextual base in reference to member 'medium'
335 | 
336 |         // Haptic feedback
337 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                                                                `- error: cannot infer contextual base in reference to member 'medium'
338 |         impactFeedback.impactOccurred()
339 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:362:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
360 |     private func toggleTorch() {
361 |         // Haptic feedback
362 |         let impactFeedback = UIImpactFeedbackGenerator(style: .light)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
363 |         impactFeedback.impactOccurred()
364 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:362:64: error: cannot infer contextual base in reference to member 'light'
360 |     private func toggleTorch() {
361 |         // Haptic feedback
362 |         let impactFeedback = UIImpactFeedbackGenerator(style: .light)
    |                                                                `- error: cannot infer contextual base in reference to member 'light'
363 |         impactFeedback.impactOccurred()
364 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:390:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
388 |     private func focusCamera() {
389 |         // Haptic feedback
390 |         let impactFeedback = UIImpactFeedbackGenerator(style: .light)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
391 |         impactFeedback.impactOccurred()
392 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:390:64: error: cannot infer contextual base in reference to member 'light'
388 |     private func focusCamera() {
389 |         // Haptic feedback
390 |         let impactFeedback = UIImpactFeedbackGenerator(style: .light)
    |                                                                `- error: cannot infer contextual base in reference to member 'light'
391 |         impactFeedback.impactOccurred()
392 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:436:42: error: cannot find 'UIApplication' in scope
434 | 
435 |     private func openSettings() {
436 |         if let settingsURL = URL(string: UIApplication.openSettingsURLString) {
    |                                          `- error: cannot find 'UIApplication' in scope
437 |             UIApplication.shared.open(settingsURL)
438 |         }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:437:13: error: cannot find 'UIApplication' in scope
435 |     private func openSettings() {
436 |         if let settingsURL = URL(string: UIApplication.openSettingsURLString) {
437 |             UIApplication.shared.open(settingsURL)
    |             `- error: cannot find 'UIApplication' in scope
438 |         }
439 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:264:30: error: cannot find type 'Context' in scope
262 |     @Binding var sessionState: CameraSessionState
263 | 
264 |     func makeUIView(context: Context) -> CameraPreviewUIView {
    |                              `- error: cannot find type 'Context' in scope
265 |         CameraPreviewUIView()
266 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:268:63: error: cannot find type 'Context' in scope
266 |     }
267 | 
268 |     func updateUIView(_ uiView: CameraPreviewUIView, context: Context) {
    |                                                               `- error: cannot find type 'Context' in scope
269 |         Task {
270 |             await uiView.updateSession(cameraManager: cameraManager)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:260:36: error: cannot find type 'UIViewRepresentable' in scope
258 | // MARK: - Camera Preview Layer
259 | 
260 | private struct CameraPreviewLayer: UIViewRepresentable {
    |                                    `- error: cannot find type 'UIViewRepresentable' in scope
261 |     let cameraManager: CameraManager
262 |     @Binding var sessionState: CameraSessionState

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:275:42: error: cannot find type 'UIView' in scope
273 | }
274 | 
275 | private final class CameraPreviewUIView: UIView {
    |                                          `- error: cannot find type 'UIView' in scope
276 |     private var previewLayer: AVCaptureVideoPreviewLayer?
277 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:296:19: error: method does not override any method from its superclass
294 |     }
295 | 
296 |     override func layoutSubviews() {
    |                   `- error: method does not override any method from its superclass
297 |         super.layoutSubviews()
298 |         previewLayer?.frame = bounds

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:84:18: error: value of type 'CameraPreviewLayer' has no member 'onTapGesture'
 82 |                     sessionState: $sessionState
 83 |                 )
 84 |                 .onTapGesture { location in
    |                  `- error: value of type 'CameraPreviewLayer' has no member 'onTapGesture'
 85 |                     if configuration.enableTapToFocus {
 86 |                         handleTapToFocus(at: location, in: geometry.size)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:287:34: error: cannot find 'bounds' in scope
285 |             let previewLayer = AVCaptureVideoPreviewLayer(session: session)
286 |             previewLayer.videoGravity = .resizeAspectFill
287 |             previewLayer.frame = bounds
    |                                  `- error: cannot find 'bounds' in scope
288 | 
289 |             layer.addSublayer(previewLayer)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:289:13: error: cannot find 'layer' in scope
287 |             previewLayer.frame = bounds
288 | 
289 |             layer.addSublayer(previewLayer)
    |             `- error: cannot find 'layer' in scope
290 |             self.previewLayer = previewLayer
291 |         } catch {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:297:9: error: 'super' cannot be used in class 'CameraPreviewUIView' because it has no superclass
295 | 
296 |     override func layoutSubviews() {
297 |         super.layoutSubviews()
    |         `- error: 'super' cannot be used in class 'CameraPreviewUIView' because it has no superclass
298 |         previewLayer?.frame = bounds
299 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:298:31: error: cannot find 'bounds' in scope
296 |     override func layoutSubviews() {
297 |         super.layoutSubviews()
298 |         previewLayer?.frame = bounds
    |                               `- error: cannot find 'bounds' in scope
299 |     }
300 | }
[7/59] Compiling BooksTrackerFeature ModernBarcodeScannerView.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/EditionMetadataView.swift:405:41: error: cannot find type 'UIImpactFeedbackGenerator' in scope
403 |     }
404 | 
405 |     private func triggerHaptic(_ style: UIImpactFeedbackGenerator.FeedbackStyle) {
    |                                         `- error: cannot find type 'UIImpactFeedbackGenerator' in scope
406 |         #if canImport(UIKit)
407 |         let impactFeedback = UIImpactFeedbackGenerator(style: style)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/EditionMetadataView.swift:444:41: error: cannot find type 'UIImpactFeedbackGenerator' in scope
442 |     }
443 | 
444 |     private func triggerHaptic(_ style: UIImpactFeedbackGenerator.FeedbackStyle) {
    |                                         `- error: cannot find type 'UIImpactFeedbackGenerator' in scope
445 |         #if canImport(UIKit)
446 |         let impactFeedback = UIImpactFeedbackGenerator(style: style)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:104:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
102 |             .themedBackground()
103 |             .navigationTitle("Scan ISBN")
104 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
105 |             .toolbar {
106 |                 ToolbarItem(placement: .navigationBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:106:41: error: 'navigationBarLeading' is unavailable in macOS
104 |             .navigationBarTitleDisplayMode(.inline)
105 |             .toolbar {
106 |                 ToolbarItem(placement: .navigationBarLeading) {
    |                                         `- error: 'navigationBarLeading' is unavailable in macOS
107 |                     Button("Cancel") {
108 |                         cleanup()

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:337:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
335 | 
336 |         // Haptic feedback
337 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
338 |         impactFeedback.impactOccurred()
339 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:337:64: error: cannot infer contextual base in reference to member 'medium'
335 | 
336 |         // Haptic feedback
337 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                                                                `- error: cannot infer contextual base in reference to member 'medium'
338 |         impactFeedback.impactOccurred()
339 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:362:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
360 |     private func toggleTorch() {
361 |         // Haptic feedback
362 |         let impactFeedback = UIImpactFeedbackGenerator(style: .light)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
363 |         impactFeedback.impactOccurred()
364 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:362:64: error: cannot infer contextual base in reference to member 'light'
360 |     private func toggleTorch() {
361 |         // Haptic feedback
362 |         let impactFeedback = UIImpactFeedbackGenerator(style: .light)
    |                                                                `- error: cannot infer contextual base in reference to member 'light'
363 |         impactFeedback.impactOccurred()
364 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:390:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
388 |     private func focusCamera() {
389 |         // Haptic feedback
390 |         let impactFeedback = UIImpactFeedbackGenerator(style: .light)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
391 |         impactFeedback.impactOccurred()
392 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:390:64: error: cannot infer contextual base in reference to member 'light'
388 |     private func focusCamera() {
389 |         // Haptic feedback
390 |         let impactFeedback = UIImpactFeedbackGenerator(style: .light)
    |                                                                `- error: cannot infer contextual base in reference to member 'light'
391 |         impactFeedback.impactOccurred()
392 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:436:42: error: cannot find 'UIApplication' in scope
434 | 
435 |     private func openSettings() {
436 |         if let settingsURL = URL(string: UIApplication.openSettingsURLString) {
    |                                          `- error: cannot find 'UIApplication' in scope
437 |             UIApplication.shared.open(settingsURL)
438 |         }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:437:13: error: cannot find 'UIApplication' in scope
435 |     private func openSettings() {
436 |         if let settingsURL = URL(string: UIApplication.openSettingsURLString) {
437 |             UIApplication.shared.open(settingsURL)
    |             `- error: cannot find 'UIApplication' in scope
438 |         }
439 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:264:30: error: cannot find type 'Context' in scope
262 |     @Binding var sessionState: CameraSessionState
263 | 
264 |     func makeUIView(context: Context) -> CameraPreviewUIView {
    |                              `- error: cannot find type 'Context' in scope
265 |         CameraPreviewUIView()
266 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:268:63: error: cannot find type 'Context' in scope
266 |     }
267 | 
268 |     func updateUIView(_ uiView: CameraPreviewUIView, context: Context) {
    |                                                               `- error: cannot find type 'Context' in scope
269 |         Task {
270 |             await uiView.updateSession(cameraManager: cameraManager)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:260:36: error: cannot find type 'UIViewRepresentable' in scope
258 | // MARK: - Camera Preview Layer
259 | 
260 | private struct CameraPreviewLayer: UIViewRepresentable {
    |                                    `- error: cannot find type 'UIViewRepresentable' in scope
261 |     let cameraManager: CameraManager
262 |     @Binding var sessionState: CameraSessionState

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:275:42: error: cannot find type 'UIView' in scope
273 | }
274 | 
275 | private final class CameraPreviewUIView: UIView {
    |                                          `- error: cannot find type 'UIView' in scope
276 |     private var previewLayer: AVCaptureVideoPreviewLayer?
277 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:296:19: error: method does not override any method from its superclass
294 |     }
295 | 
296 |     override func layoutSubviews() {
    |                   `- error: method does not override any method from its superclass
297 |         super.layoutSubviews()
298 |         previewLayer?.frame = bounds

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:84:18: error: value of type 'CameraPreviewLayer' has no member 'onTapGesture'
 82 |                     sessionState: $sessionState
 83 |                 )
 84 |                 .onTapGesture { location in
    |                  `- error: value of type 'CameraPreviewLayer' has no member 'onTapGesture'
 85 |                     if configuration.enableTapToFocus {
 86 |                         handleTapToFocus(at: location, in: geometry.size)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:287:34: error: cannot find 'bounds' in scope
285 |             let previewLayer = AVCaptureVideoPreviewLayer(session: session)
286 |             previewLayer.videoGravity = .resizeAspectFill
287 |             previewLayer.frame = bounds
    |                                  `- error: cannot find 'bounds' in scope
288 | 
289 |             layer.addSublayer(previewLayer)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:289:13: error: cannot find 'layer' in scope
287 |             previewLayer.frame = bounds
288 | 
289 |             layer.addSublayer(previewLayer)
    |             `- error: cannot find 'layer' in scope
290 |             self.previewLayer = previewLayer
291 |         } catch {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:297:9: error: 'super' cannot be used in class 'CameraPreviewUIView' because it has no superclass
295 | 
296 |     override func layoutSubviews() {
297 |         super.layoutSubviews()
    |         `- error: 'super' cannot be used in class 'CameraPreviewUIView' because it has no superclass
298 |         previewLayer?.frame = bounds
299 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:298:31: error: cannot find 'bounds' in scope
296 |     override func layoutSubviews() {
297 |         super.layoutSubviews()
298 |         previewLayer?.frame = bounds
    |                               `- error: cannot find 'bounds' in scope
299 |     }
300 | }
[8/59] Compiling BooksTrackerFeature ModernCameraPreview.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/EditionMetadataView.swift:405:41: error: cannot find type 'UIImpactFeedbackGenerator' in scope
403 |     }
404 | 
405 |     private func triggerHaptic(_ style: UIImpactFeedbackGenerator.FeedbackStyle) {
    |                                         `- error: cannot find type 'UIImpactFeedbackGenerator' in scope
406 |         #if canImport(UIKit)
407 |         let impactFeedback = UIImpactFeedbackGenerator(style: style)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/EditionMetadataView.swift:444:41: error: cannot find type 'UIImpactFeedbackGenerator' in scope
442 |     }
443 | 
444 |     private func triggerHaptic(_ style: UIImpactFeedbackGenerator.FeedbackStyle) {
    |                                         `- error: cannot find type 'UIImpactFeedbackGenerator' in scope
445 |         #if canImport(UIKit)
446 |         let impactFeedback = UIImpactFeedbackGenerator(style: style)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:104:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
102 |             .themedBackground()
103 |             .navigationTitle("Scan ISBN")
104 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
105 |             .toolbar {
106 |                 ToolbarItem(placement: .navigationBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:106:41: error: 'navigationBarLeading' is unavailable in macOS
104 |             .navigationBarTitleDisplayMode(.inline)
105 |             .toolbar {
106 |                 ToolbarItem(placement: .navigationBarLeading) {
    |                                         `- error: 'navigationBarLeading' is unavailable in macOS
107 |                     Button("Cancel") {
108 |                         cleanup()

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:337:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
335 | 
336 |         // Haptic feedback
337 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
338 |         impactFeedback.impactOccurred()
339 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:337:64: error: cannot infer contextual base in reference to member 'medium'
335 | 
336 |         // Haptic feedback
337 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                                                                `- error: cannot infer contextual base in reference to member 'medium'
338 |         impactFeedback.impactOccurred()
339 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:362:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
360 |     private func toggleTorch() {
361 |         // Haptic feedback
362 |         let impactFeedback = UIImpactFeedbackGenerator(style: .light)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
363 |         impactFeedback.impactOccurred()
364 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:362:64: error: cannot infer contextual base in reference to member 'light'
360 |     private func toggleTorch() {
361 |         // Haptic feedback
362 |         let impactFeedback = UIImpactFeedbackGenerator(style: .light)
    |                                                                `- error: cannot infer contextual base in reference to member 'light'
363 |         impactFeedback.impactOccurred()
364 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:390:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
388 |     private func focusCamera() {
389 |         // Haptic feedback
390 |         let impactFeedback = UIImpactFeedbackGenerator(style: .light)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
391 |         impactFeedback.impactOccurred()
392 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:390:64: error: cannot infer contextual base in reference to member 'light'
388 |     private func focusCamera() {
389 |         // Haptic feedback
390 |         let impactFeedback = UIImpactFeedbackGenerator(style: .light)
    |                                                                `- error: cannot infer contextual base in reference to member 'light'
391 |         impactFeedback.impactOccurred()
392 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:436:42: error: cannot find 'UIApplication' in scope
434 | 
435 |     private func openSettings() {
436 |         if let settingsURL = URL(string: UIApplication.openSettingsURLString) {
    |                                          `- error: cannot find 'UIApplication' in scope
437 |             UIApplication.shared.open(settingsURL)
438 |         }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernBarcodeScannerView.swift:437:13: error: cannot find 'UIApplication' in scope
435 |     private func openSettings() {
436 |         if let settingsURL = URL(string: UIApplication.openSettingsURLString) {
437 |             UIApplication.shared.open(settingsURL)
    |             `- error: cannot find 'UIApplication' in scope
438 |         }
439 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:264:30: error: cannot find type 'Context' in scope
262 |     @Binding var sessionState: CameraSessionState
263 | 
264 |     func makeUIView(context: Context) -> CameraPreviewUIView {
    |                              `- error: cannot find type 'Context' in scope
265 |         CameraPreviewUIView()
266 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:268:63: error: cannot find type 'Context' in scope
266 |     }
267 | 
268 |     func updateUIView(_ uiView: CameraPreviewUIView, context: Context) {
    |                                                               `- error: cannot find type 'Context' in scope
269 |         Task {
270 |             await uiView.updateSession(cameraManager: cameraManager)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:260:36: error: cannot find type 'UIViewRepresentable' in scope
258 | // MARK: - Camera Preview Layer
259 | 
260 | private struct CameraPreviewLayer: UIViewRepresentable {
    |                                    `- error: cannot find type 'UIViewRepresentable' in scope
261 |     let cameraManager: CameraManager
262 |     @Binding var sessionState: CameraSessionState

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:275:42: error: cannot find type 'UIView' in scope
273 | }
274 | 
275 | private final class CameraPreviewUIView: UIView {
    |                                          `- error: cannot find type 'UIView' in scope
276 |     private var previewLayer: AVCaptureVideoPreviewLayer?
277 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:296:19: error: method does not override any method from its superclass
294 |     }
295 | 
296 |     override func layoutSubviews() {
    |                   `- error: method does not override any method from its superclass
297 |         super.layoutSubviews()
298 |         previewLayer?.frame = bounds

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:84:18: error: value of type 'CameraPreviewLayer' has no member 'onTapGesture'
 82 |                     sessionState: $sessionState
 83 |                 )
 84 |                 .onTapGesture { location in
    |                  `- error: value of type 'CameraPreviewLayer' has no member 'onTapGesture'
 85 |                     if configuration.enableTapToFocus {
 86 |                         handleTapToFocus(at: location, in: geometry.size)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:287:34: error: cannot find 'bounds' in scope
285 |             let previewLayer = AVCaptureVideoPreviewLayer(session: session)
286 |             previewLayer.videoGravity = .resizeAspectFill
287 |             previewLayer.frame = bounds
    |                                  `- error: cannot find 'bounds' in scope
288 | 
289 |             layer.addSublayer(previewLayer)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:289:13: error: cannot find 'layer' in scope
287 |             previewLayer.frame = bounds
288 | 
289 |             layer.addSublayer(previewLayer)
    |             `- error: cannot find 'layer' in scope
290 |             self.previewLayer = previewLayer
291 |         } catch {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:297:9: error: 'super' cannot be used in class 'CameraPreviewUIView' because it has no superclass
295 | 
296 |     override func layoutSubviews() {
297 |         super.layoutSubviews()
    |         `- error: 'super' cannot be used in class 'CameraPreviewUIView' because it has no superclass
298 |         previewLayer?.frame = bounds
299 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:298:31: error: cannot find 'bounds' in scope
296 |     override func layoutSubviews() {
297 |         super.layoutSubviews()
298 |         previewLayer?.frame = bounds
    |                               `- error: cannot find 'bounds' in scope
299 |     }
300 | }
[9/59] Compiling BooksTrackerFeature ImportProgressAccessibility.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImportView.swift:149:41: error: 'navigationBarTrailing' is unavailable in macOS
147 |             #endif
148 |             .toolbar {
149 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
150 |                     Button("Done") {
151 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:11:47: error: cannot find type 'UIImage' in scope
  9 | 
 10 |     /// Shared NSCache instance with intelligent memory management
 11 |     private let imageCache: NSCache<NSString, UIImage> = {
    |                                               `- error: cannot find type 'UIImage' in scope
 12 |         let cache = NSCache<NSString, UIImage>()
 13 |         cache.countLimit = 100 // Maximum 100 images

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:34:46: error: cannot find type 'UIImage' in scope
 32 |     }
 33 | 
 34 |     public func getImage(for key: String) -> UIImage? {
    |                                              `- error: cannot find type 'UIImage' in scope
 35 |         return cacheQueue.sync {
 36 |             imageCache.object(forKey: NSString(string: key))

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:40:35: error: cannot find type 'UIImage' in scope
 38 |     }
 39 | 
 40 |     public func setImage(_ image: UIImage, for key: String, cost: Int) {
    |                                   `- error: cannot find type 'UIImage' in scope
 41 |         cacheQueue.async(flags: .barrier) { [weak self] in
 42 |             self?.imageCache.setObject(image, forKey: NSString(string: key), cost: cost)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:72:21: error: cannot find type 'UIImage' in scope
 70 |     private enum ImageState: Equatable {
 71 |         case loading
 72 |         case loaded(UIImage)
    |                     `- error: cannot find type 'UIImage' in scope
 73 |         case failed
 74 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:25:19: error: cannot find 'UIApplication' in scope
 23 |             self,
 24 |             selector: #selector(handleMemoryWarning),
 25 |             name: UIApplication.didReceiveMemoryWarningNotification,
    |                   `- error: cannot find 'UIApplication' in scope
 26 |             object: nil
 27 |         )

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:104:9: error: generic parameter 'R' could not be inferred
102 | 
103 |     public var body: some View {
104 |         Group {
    |         `- error: generic parameter 'R' could not be inferred
105 |             switch imageState {
106 |             case .loading:

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:104:9: error: generic parameter 'C' could not be inferred
102 | 
103 |     public var body: some View {
104 |         Group {
    |         `- error: generic parameter 'C' could not be inferred
105 |             switch imageState {
106 |             case .loading:

SwiftUI.Group.init:2:31: note: in call to initializer
1 | generic struct Group {
2 | @inlinable nonisolated public init<R, C>(@TableColumnBuilder<R, C> content: () -> Content) where R == Content.TableRowValue, C == Content.TableColumnSortComparator}
  |                               `- note: in call to initializer
3 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:108:22: error: cannot convert value of type 'some View' to expected argument type 'TableColumn<R, C, Content, Label>'
106 |             case .loading:
107 |                 placeholder()
108 |                     .transition(.opacity)
    |                      `- error: cannot convert value of type 'some View' to expected argument type 'TableColumn<R, C, Content, Label>'
109 | 
110 |             case .loaded(let uiImage):

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:107:17: error: generic parameter 'Content' could not be inferred
105 |             switch imageState {
106 |             case .loading:
107 |                 placeholder()
    |                 `- error: generic parameter 'Content' could not be inferred
108 |                     .transition(.opacity)
109 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:107:17: error: generic parameter 'Label' could not be inferred
105 |             switch imageState {
106 |             case .loading:
107 |                 placeholder()
    |                 `- error: generic parameter 'Label' could not be inferred
108 |                     .transition(.opacity)
109 | 

SwiftUI.TableColumnBuilder.buildExpression:2:20: note: in call to function 'buildExpression'
1 | generic struct TableColumnBuilder {
2 | public static func buildExpression<Content, Label>(_ column: TableColumn<RowValue, Sort, Content, Label>) -> TableColumn<RowValue, Sort, Content, Label> where Content : View, Label : View}
  |                    `- note: in call to function 'buildExpression'
3 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:156:33: error: cannot find 'UIImage' in scope
154 |             guard let httpResponse = response as? HTTPURLResponse,
155 |                   httpResponse.statusCode == 200,
156 |                   let uiImage = UIImage(data: data) else {
    |                                 `- error: cannot find 'UIImage' in scope
157 |                 withTransaction(transaction) {
158 |                     imageState = .failed

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:351:40: error: 'isVideoHDRSupported' is unavailable in macOS
349 | 
350 |                 // Optimize for barcode scanning (disable HDR for speed)
351 |                 if device.activeFormat.isVideoHDRSupported {
    |                                        `- error: 'isVideoHDRSupported' is unavailable in macOS
352 |                     device.automaticallyAdjustsVideoHDREnabled = false
353 |                     device.isVideoHDREnabled = false

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCaptureDevice.h:3353:65: note: 'isVideoHDRSupported' has been explicitly marked unavailable here
3351 |     videoHDRSupported is a BOOL indicating whether the format supports high dynamic range streaming, also known as Extended Dynamic Range (EDR). When enabled, the device streams at twice the published frame rate, capturing an under-exposed frame and correctly exposed frame for each frame time at the published rate. Portions of the under-exposed frame are combined with the correctly exposed frame to recover detail in darker areas of the scene. EDR is a separate and distinct feature from 10-bit HDR video (first seen in 2020 iPhones). 10-bit formats with HLG BT2020 color space have greater dynamic range by virtue of their expanded bit depth and HLG transfer function, and when captured in movies, contain Dolby Vision metadata. They are, in effect, "always on" HDR. And thus the videoHDRSupported property is always NO for 10-bit formats only supporting HLG BT2020 colorspace, since HDR cannot be enabled or disabled. To enable videoHDR (EDR), set the AVCaptureDevice.videoHDREnabled property.
3352 |  */
3353 | @property(nonatomic, readonly, getter=isVideoHDRSupported) BOOL videoHDRSupported API_AVAILABLE(ios(8.0), macCatalyst(14.0), tvos(17.0)) API_UNAVAILABLE(macos, visionos);
     |                                                                 `- note: 'isVideoHDRSupported' has been explicitly marked unavailable here
3354 | 
3355 | /*!

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:352:28: error: 'automaticallyAdjustsVideoHDREnabled' is unavailable in macOS
350 |                 // Optimize for barcode scanning (disable HDR for speed)
351 |                 if device.activeFormat.isVideoHDRSupported {
352 |                     device.automaticallyAdjustsVideoHDREnabled = false
    |                            `- error: 'automaticallyAdjustsVideoHDREnabled' is unavailable in macOS
353 |                     device.isVideoHDREnabled = false
354 |                 }

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCaptureDevice.h:2151:27: note: 'automaticallyAdjustsVideoHDREnabled' has been explicitly marked unavailable here
2149 |     The value of this property is a BOOL indicating whether the receiver is free to turn high dynamic range streaming on or off. This property defaults to YES. When automaticallyAdjustsVideoHDREnabled, the AVCaptureDevice turns videoHDR on automatically if it's a good fit for the activeFormat. -setAutomaticallyAdjustsVideoHDREnabled: throws an NSGenericException if called without first obtaining exclusive access to the receiver using -lockForConfiguration:. Clients can key-value observe videoHDREnabled to know when the receiver has automatically changed the value.
2150 |  */
2151 | @property(nonatomic) BOOL automaticallyAdjustsVideoHDREnabled API_AVAILABLE(ios(8.0), macCatalyst(14.0), tvos(17.0)) API_UNAVAILABLE(macos, visionos);
     |                           `- note: 'automaticallyAdjustsVideoHDREnabled' has been explicitly marked unavailable here
2152 | 
2153 | /*!

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:353:28: error: 'isVideoHDREnabled' is unavailable in macOS
351 |                 if device.activeFormat.isVideoHDRSupported {
352 |                     device.automaticallyAdjustsVideoHDREnabled = false
353 |                     device.isVideoHDREnabled = false
    |                            `- error: 'isVideoHDREnabled' is unavailable in macOS
354 |                 }
355 | 

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCaptureDevice.h:2163:53: note: 'isVideoHDREnabled' has been explicitly marked unavailable here
2161 |     Note that setting this property may cause a lengthy reconfiguration of the receiver, similar to setting a new active format or AVCaptureSession sessionPreset. If you are setting either the active format or the AVCaptureSession's sessionPreset AND this property, you should bracket these operations with [session beginConfiguration] and [session commitConfiguration] to minimize reconfiguration time.
2162 |  */
2163 | @property(nonatomic, getter=isVideoHDREnabled) BOOL videoHDREnabled API_AVAILABLE(ios(8.0), macCatalyst(14.0), tvos(17.0)) API_UNAVAILABLE(macos, visionos);
     |                                                     `- note: 'isVideoHDREnabled' has been explicitly marked unavailable here
2164 | 
2165 | @end

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:420:22: error: cannot find 'UIApplication' in scope
418 |     nonisolated private func setupAppLifecycleObservers() {
419 |         NotificationCenter.default.addObserver(
420 |             forName: UIApplication.willEnterForegroundNotification,
    |                      `- error: cannot find 'UIApplication' in scope
421 |             object: nil,
422 |             queue: .main

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:430:22: error: cannot find 'UIApplication' in scope
428 | 
429 |         NotificationCenter.default.addObserver(
430 |             forName: UIApplication.didEnterBackgroundNotification,
    |                      `- error: cannot find 'UIApplication' in scope
431 |             object: nil,
432 |             queue: .main

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CloudKitHelpView.swift:182:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
180 |             }
181 |             .navigationTitle("iCloud Sync")
182 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
183 |             .toolbar {
184 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CloudKitHelpView.swift:184:41: error: 'navigationBarTrailing' is unavailable in macOS
182 |             .navigationBarTitleDisplayMode(.inline)
183 |             .toolbar {
184 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
185 |                     Button("Done") {
186 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 
[10/59] Compiling BooksTrackerFeature CSVImportView.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImportView.swift:149:41: error: 'navigationBarTrailing' is unavailable in macOS
147 |             #endif
148 |             .toolbar {
149 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
150 |                     Button("Done") {
151 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:11:47: error: cannot find type 'UIImage' in scope
  9 | 
 10 |     /// Shared NSCache instance with intelligent memory management
 11 |     private let imageCache: NSCache<NSString, UIImage> = {
    |                                               `- error: cannot find type 'UIImage' in scope
 12 |         let cache = NSCache<NSString, UIImage>()
 13 |         cache.countLimit = 100 // Maximum 100 images

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:34:46: error: cannot find type 'UIImage' in scope
 32 |     }
 33 | 
 34 |     public func getImage(for key: String) -> UIImage? {
    |                                              `- error: cannot find type 'UIImage' in scope
 35 |         return cacheQueue.sync {
 36 |             imageCache.object(forKey: NSString(string: key))

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:40:35: error: cannot find type 'UIImage' in scope
 38 |     }
 39 | 
 40 |     public func setImage(_ image: UIImage, for key: String, cost: Int) {
    |                                   `- error: cannot find type 'UIImage' in scope
 41 |         cacheQueue.async(flags: .barrier) { [weak self] in
 42 |             self?.imageCache.setObject(image, forKey: NSString(string: key), cost: cost)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:72:21: error: cannot find type 'UIImage' in scope
 70 |     private enum ImageState: Equatable {
 71 |         case loading
 72 |         case loaded(UIImage)
    |                     `- error: cannot find type 'UIImage' in scope
 73 |         case failed
 74 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:25:19: error: cannot find 'UIApplication' in scope
 23 |             self,
 24 |             selector: #selector(handleMemoryWarning),
 25 |             name: UIApplication.didReceiveMemoryWarningNotification,
    |                   `- error: cannot find 'UIApplication' in scope
 26 |             object: nil
 27 |         )

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:104:9: error: generic parameter 'R' could not be inferred
102 | 
103 |     public var body: some View {
104 |         Group {
    |         `- error: generic parameter 'R' could not be inferred
105 |             switch imageState {
106 |             case .loading:

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:104:9: error: generic parameter 'C' could not be inferred
102 | 
103 |     public var body: some View {
104 |         Group {
    |         `- error: generic parameter 'C' could not be inferred
105 |             switch imageState {
106 |             case .loading:

SwiftUI.Group.init:2:31: note: in call to initializer
1 | generic struct Group {
2 | @inlinable nonisolated public init<R, C>(@TableColumnBuilder<R, C> content: () -> Content) where R == Content.TableRowValue, C == Content.TableColumnSortComparator}
  |                               `- note: in call to initializer
3 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:108:22: error: cannot convert value of type 'some View' to expected argument type 'TableColumn<R, C, Content, Label>'
106 |             case .loading:
107 |                 placeholder()
108 |                     .transition(.opacity)
    |                      `- error: cannot convert value of type 'some View' to expected argument type 'TableColumn<R, C, Content, Label>'
109 | 
110 |             case .loaded(let uiImage):

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:107:17: error: generic parameter 'Content' could not be inferred
105 |             switch imageState {
106 |             case .loading:
107 |                 placeholder()
    |                 `- error: generic parameter 'Content' could not be inferred
108 |                     .transition(.opacity)
109 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:107:17: error: generic parameter 'Label' could not be inferred
105 |             switch imageState {
106 |             case .loading:
107 |                 placeholder()
    |                 `- error: generic parameter 'Label' could not be inferred
108 |                     .transition(.opacity)
109 | 

SwiftUI.TableColumnBuilder.buildExpression:2:20: note: in call to function 'buildExpression'
1 | generic struct TableColumnBuilder {
2 | public static func buildExpression<Content, Label>(_ column: TableColumn<RowValue, Sort, Content, Label>) -> TableColumn<RowValue, Sort, Content, Label> where Content : View, Label : View}
  |                    `- note: in call to function 'buildExpression'
3 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:156:33: error: cannot find 'UIImage' in scope
154 |             guard let httpResponse = response as? HTTPURLResponse,
155 |                   httpResponse.statusCode == 200,
156 |                   let uiImage = UIImage(data: data) else {
    |                                 `- error: cannot find 'UIImage' in scope
157 |                 withTransaction(transaction) {
158 |                     imageState = .failed

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:351:40: error: 'isVideoHDRSupported' is unavailable in macOS
349 | 
350 |                 // Optimize for barcode scanning (disable HDR for speed)
351 |                 if device.activeFormat.isVideoHDRSupported {
    |                                        `- error: 'isVideoHDRSupported' is unavailable in macOS
352 |                     device.automaticallyAdjustsVideoHDREnabled = false
353 |                     device.isVideoHDREnabled = false

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCaptureDevice.h:3353:65: note: 'isVideoHDRSupported' has been explicitly marked unavailable here
3351 |     videoHDRSupported is a BOOL indicating whether the format supports high dynamic range streaming, also known as Extended Dynamic Range (EDR). When enabled, the device streams at twice the published frame rate, capturing an under-exposed frame and correctly exposed frame for each frame time at the published rate. Portions of the under-exposed frame are combined with the correctly exposed frame to recover detail in darker areas of the scene. EDR is a separate and distinct feature from 10-bit HDR video (first seen in 2020 iPhones). 10-bit formats with HLG BT2020 color space have greater dynamic range by virtue of their expanded bit depth and HLG transfer function, and when captured in movies, contain Dolby Vision metadata. They are, in effect, "always on" HDR. And thus the videoHDRSupported property is always NO for 10-bit formats only supporting HLG BT2020 colorspace, since HDR cannot be enabled or disabled. To enable videoHDR (EDR), set the AVCaptureDevice.videoHDREnabled property.
3352 |  */
3353 | @property(nonatomic, readonly, getter=isVideoHDRSupported) BOOL videoHDRSupported API_AVAILABLE(ios(8.0), macCatalyst(14.0), tvos(17.0)) API_UNAVAILABLE(macos, visionos);
     |                                                                 `- note: 'isVideoHDRSupported' has been explicitly marked unavailable here
3354 | 
3355 | /*!

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:352:28: error: 'automaticallyAdjustsVideoHDREnabled' is unavailable in macOS
350 |                 // Optimize for barcode scanning (disable HDR for speed)
351 |                 if device.activeFormat.isVideoHDRSupported {
352 |                     device.automaticallyAdjustsVideoHDREnabled = false
    |                            `- error: 'automaticallyAdjustsVideoHDREnabled' is unavailable in macOS
353 |                     device.isVideoHDREnabled = false
354 |                 }

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCaptureDevice.h:2151:27: note: 'automaticallyAdjustsVideoHDREnabled' has been explicitly marked unavailable here
2149 |     The value of this property is a BOOL indicating whether the receiver is free to turn high dynamic range streaming on or off. This property defaults to YES. When automaticallyAdjustsVideoHDREnabled, the AVCaptureDevice turns videoHDR on automatically if it's a good fit for the activeFormat. -setAutomaticallyAdjustsVideoHDREnabled: throws an NSGenericException if called without first obtaining exclusive access to the receiver using -lockForConfiguration:. Clients can key-value observe videoHDREnabled to know when the receiver has automatically changed the value.
2150 |  */
2151 | @property(nonatomic) BOOL automaticallyAdjustsVideoHDREnabled API_AVAILABLE(ios(8.0), macCatalyst(14.0), tvos(17.0)) API_UNAVAILABLE(macos, visionos);
     |                           `- note: 'automaticallyAdjustsVideoHDREnabled' has been explicitly marked unavailable here
2152 | 
2153 | /*!

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:353:28: error: 'isVideoHDREnabled' is unavailable in macOS
351 |                 if device.activeFormat.isVideoHDRSupported {
352 |                     device.automaticallyAdjustsVideoHDREnabled = false
353 |                     device.isVideoHDREnabled = false
    |                            `- error: 'isVideoHDREnabled' is unavailable in macOS
354 |                 }
355 | 

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCaptureDevice.h:2163:53: note: 'isVideoHDREnabled' has been explicitly marked unavailable here
2161 |     Note that setting this property may cause a lengthy reconfiguration of the receiver, similar to setting a new active format or AVCaptureSession sessionPreset. If you are setting either the active format or the AVCaptureSession's sessionPreset AND this property, you should bracket these operations with [session beginConfiguration] and [session commitConfiguration] to minimize reconfiguration time.
2162 |  */
2163 | @property(nonatomic, getter=isVideoHDREnabled) BOOL videoHDREnabled API_AVAILABLE(ios(8.0), macCatalyst(14.0), tvos(17.0)) API_UNAVAILABLE(macos, visionos);
     |                                                     `- note: 'isVideoHDREnabled' has been explicitly marked unavailable here
2164 | 
2165 | @end

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:420:22: error: cannot find 'UIApplication' in scope
418 |     nonisolated private func setupAppLifecycleObservers() {
419 |         NotificationCenter.default.addObserver(
420 |             forName: UIApplication.willEnterForegroundNotification,
    |                      `- error: cannot find 'UIApplication' in scope
421 |             object: nil,
422 |             queue: .main

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:430:22: error: cannot find 'UIApplication' in scope
428 | 
429 |         NotificationCenter.default.addObserver(
430 |             forName: UIApplication.didEnterBackgroundNotification,
    |                      `- error: cannot find 'UIApplication' in scope
431 |             object: nil,
432 |             queue: .main

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CloudKitHelpView.swift:182:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
180 |             }
181 |             .navigationTitle("iCloud Sync")
182 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
183 |             .toolbar {
184 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CloudKitHelpView.swift:184:41: error: 'navigationBarTrailing' is unavailable in macOS
182 |             .navigationBarTitleDisplayMode(.inline)
183 |             .toolbar {
184 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
185 |                     Button("Done") {
186 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 
[11/59] Compiling BooksTrackerFeature CachedAsyncImage.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImportView.swift:149:41: error: 'navigationBarTrailing' is unavailable in macOS
147 |             #endif
148 |             .toolbar {
149 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
150 |                     Button("Done") {
151 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:11:47: error: cannot find type 'UIImage' in scope
  9 | 
 10 |     /// Shared NSCache instance with intelligent memory management
 11 |     private let imageCache: NSCache<NSString, UIImage> = {
    |                                               `- error: cannot find type 'UIImage' in scope
 12 |         let cache = NSCache<NSString, UIImage>()
 13 |         cache.countLimit = 100 // Maximum 100 images

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:34:46: error: cannot find type 'UIImage' in scope
 32 |     }
 33 | 
 34 |     public func getImage(for key: String) -> UIImage? {
    |                                              `- error: cannot find type 'UIImage' in scope
 35 |         return cacheQueue.sync {
 36 |             imageCache.object(forKey: NSString(string: key))

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:40:35: error: cannot find type 'UIImage' in scope
 38 |     }
 39 | 
 40 |     public func setImage(_ image: UIImage, for key: String, cost: Int) {
    |                                   `- error: cannot find type 'UIImage' in scope
 41 |         cacheQueue.async(flags: .barrier) { [weak self] in
 42 |             self?.imageCache.setObject(image, forKey: NSString(string: key), cost: cost)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:72:21: error: cannot find type 'UIImage' in scope
 70 |     private enum ImageState: Equatable {
 71 |         case loading
 72 |         case loaded(UIImage)
    |                     `- error: cannot find type 'UIImage' in scope
 73 |         case failed
 74 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:25:19: error: cannot find 'UIApplication' in scope
 23 |             self,
 24 |             selector: #selector(handleMemoryWarning),
 25 |             name: UIApplication.didReceiveMemoryWarningNotification,
    |                   `- error: cannot find 'UIApplication' in scope
 26 |             object: nil
 27 |         )

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:104:9: error: generic parameter 'R' could not be inferred
102 | 
103 |     public var body: some View {
104 |         Group {
    |         `- error: generic parameter 'R' could not be inferred
105 |             switch imageState {
106 |             case .loading:

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:104:9: error: generic parameter 'C' could not be inferred
102 | 
103 |     public var body: some View {
104 |         Group {
    |         `- error: generic parameter 'C' could not be inferred
105 |             switch imageState {
106 |             case .loading:

SwiftUI.Group.init:2:31: note: in call to initializer
1 | generic struct Group {
2 | @inlinable nonisolated public init<R, C>(@TableColumnBuilder<R, C> content: () -> Content) where R == Content.TableRowValue, C == Content.TableColumnSortComparator}
  |                               `- note: in call to initializer
3 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:108:22: error: cannot convert value of type 'some View' to expected argument type 'TableColumn<R, C, Content, Label>'
106 |             case .loading:
107 |                 placeholder()
108 |                     .transition(.opacity)
    |                      `- error: cannot convert value of type 'some View' to expected argument type 'TableColumn<R, C, Content, Label>'
109 | 
110 |             case .loaded(let uiImage):

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:107:17: error: generic parameter 'Content' could not be inferred
105 |             switch imageState {
106 |             case .loading:
107 |                 placeholder()
    |                 `- error: generic parameter 'Content' could not be inferred
108 |                     .transition(.opacity)
109 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:107:17: error: generic parameter 'Label' could not be inferred
105 |             switch imageState {
106 |             case .loading:
107 |                 placeholder()
    |                 `- error: generic parameter 'Label' could not be inferred
108 |                     .transition(.opacity)
109 | 

SwiftUI.TableColumnBuilder.buildExpression:2:20: note: in call to function 'buildExpression'
1 | generic struct TableColumnBuilder {
2 | public static func buildExpression<Content, Label>(_ column: TableColumn<RowValue, Sort, Content, Label>) -> TableColumn<RowValue, Sort, Content, Label> where Content : View, Label : View}
  |                    `- note: in call to function 'buildExpression'
3 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:156:33: error: cannot find 'UIImage' in scope
154 |             guard let httpResponse = response as? HTTPURLResponse,
155 |                   httpResponse.statusCode == 200,
156 |                   let uiImage = UIImage(data: data) else {
    |                                 `- error: cannot find 'UIImage' in scope
157 |                 withTransaction(transaction) {
158 |                     imageState = .failed

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:351:40: error: 'isVideoHDRSupported' is unavailable in macOS
349 | 
350 |                 // Optimize for barcode scanning (disable HDR for speed)
351 |                 if device.activeFormat.isVideoHDRSupported {
    |                                        `- error: 'isVideoHDRSupported' is unavailable in macOS
352 |                     device.automaticallyAdjustsVideoHDREnabled = false
353 |                     device.isVideoHDREnabled = false

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCaptureDevice.h:3353:65: note: 'isVideoHDRSupported' has been explicitly marked unavailable here
3351 |     videoHDRSupported is a BOOL indicating whether the format supports high dynamic range streaming, also known as Extended Dynamic Range (EDR). When enabled, the device streams at twice the published frame rate, capturing an under-exposed frame and correctly exposed frame for each frame time at the published rate. Portions of the under-exposed frame are combined with the correctly exposed frame to recover detail in darker areas of the scene. EDR is a separate and distinct feature from 10-bit HDR video (first seen in 2020 iPhones). 10-bit formats with HLG BT2020 color space have greater dynamic range by virtue of their expanded bit depth and HLG transfer function, and when captured in movies, contain Dolby Vision metadata. They are, in effect, "always on" HDR. And thus the videoHDRSupported property is always NO for 10-bit formats only supporting HLG BT2020 colorspace, since HDR cannot be enabled or disabled. To enable videoHDR (EDR), set the AVCaptureDevice.videoHDREnabled property.
3352 |  */
3353 | @property(nonatomic, readonly, getter=isVideoHDRSupported) BOOL videoHDRSupported API_AVAILABLE(ios(8.0), macCatalyst(14.0), tvos(17.0)) API_UNAVAILABLE(macos, visionos);
     |                                                                 `- note: 'isVideoHDRSupported' has been explicitly marked unavailable here
3354 | 
3355 | /*!

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:352:28: error: 'automaticallyAdjustsVideoHDREnabled' is unavailable in macOS
350 |                 // Optimize for barcode scanning (disable HDR for speed)
351 |                 if device.activeFormat.isVideoHDRSupported {
352 |                     device.automaticallyAdjustsVideoHDREnabled = false
    |                            `- error: 'automaticallyAdjustsVideoHDREnabled' is unavailable in macOS
353 |                     device.isVideoHDREnabled = false
354 |                 }

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCaptureDevice.h:2151:27: note: 'automaticallyAdjustsVideoHDREnabled' has been explicitly marked unavailable here
2149 |     The value of this property is a BOOL indicating whether the receiver is free to turn high dynamic range streaming on or off. This property defaults to YES. When automaticallyAdjustsVideoHDREnabled, the AVCaptureDevice turns videoHDR on automatically if it's a good fit for the activeFormat. -setAutomaticallyAdjustsVideoHDREnabled: throws an NSGenericException if called without first obtaining exclusive access to the receiver using -lockForConfiguration:. Clients can key-value observe videoHDREnabled to know when the receiver has automatically changed the value.
2150 |  */
2151 | @property(nonatomic) BOOL automaticallyAdjustsVideoHDREnabled API_AVAILABLE(ios(8.0), macCatalyst(14.0), tvos(17.0)) API_UNAVAILABLE(macos, visionos);
     |                           `- note: 'automaticallyAdjustsVideoHDREnabled' has been explicitly marked unavailable here
2152 | 
2153 | /*!

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:353:28: error: 'isVideoHDREnabled' is unavailable in macOS
351 |                 if device.activeFormat.isVideoHDRSupported {
352 |                     device.automaticallyAdjustsVideoHDREnabled = false
353 |                     device.isVideoHDREnabled = false
    |                            `- error: 'isVideoHDREnabled' is unavailable in macOS
354 |                 }
355 | 

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCaptureDevice.h:2163:53: note: 'isVideoHDREnabled' has been explicitly marked unavailable here
2161 |     Note that setting this property may cause a lengthy reconfiguration of the receiver, similar to setting a new active format or AVCaptureSession sessionPreset. If you are setting either the active format or the AVCaptureSession's sessionPreset AND this property, you should bracket these operations with [session beginConfiguration] and [session commitConfiguration] to minimize reconfiguration time.
2162 |  */
2163 | @property(nonatomic, getter=isVideoHDREnabled) BOOL videoHDREnabled API_AVAILABLE(ios(8.0), macCatalyst(14.0), tvos(17.0)) API_UNAVAILABLE(macos, visionos);
     |                                                     `- note: 'isVideoHDREnabled' has been explicitly marked unavailable here
2164 | 
2165 | @end

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:420:22: error: cannot find 'UIApplication' in scope
418 |     nonisolated private func setupAppLifecycleObservers() {
419 |         NotificationCenter.default.addObserver(
420 |             forName: UIApplication.willEnterForegroundNotification,
    |                      `- error: cannot find 'UIApplication' in scope
421 |             object: nil,
422 |             queue: .main

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:430:22: error: cannot find 'UIApplication' in scope
428 | 
429 |         NotificationCenter.default.addObserver(
430 |             forName: UIApplication.didEnterBackgroundNotification,
    |                      `- error: cannot find 'UIApplication' in scope
431 |             object: nil,
432 |             queue: .main

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CloudKitHelpView.swift:182:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
180 |             }
181 |             .navigationTitle("iCloud Sync")
182 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
183 |             .toolbar {
184 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CloudKitHelpView.swift:184:41: error: 'navigationBarTrailing' is unavailable in macOS
182 |             .navigationBarTitleDisplayMode(.inline)
183 |             .toolbar {
184 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
185 |                     Button("Done") {
186 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 
[12/59] Compiling BooksTrackerFeature CameraManager.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImportView.swift:149:41: error: 'navigationBarTrailing' is unavailable in macOS
147 |             #endif
148 |             .toolbar {
149 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
150 |                     Button("Done") {
151 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:11:47: error: cannot find type 'UIImage' in scope
  9 | 
 10 |     /// Shared NSCache instance with intelligent memory management
 11 |     private let imageCache: NSCache<NSString, UIImage> = {
    |                                               `- error: cannot find type 'UIImage' in scope
 12 |         let cache = NSCache<NSString, UIImage>()
 13 |         cache.countLimit = 100 // Maximum 100 images

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:34:46: error: cannot find type 'UIImage' in scope
 32 |     }
 33 | 
 34 |     public func getImage(for key: String) -> UIImage? {
    |                                              `- error: cannot find type 'UIImage' in scope
 35 |         return cacheQueue.sync {
 36 |             imageCache.object(forKey: NSString(string: key))

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:40:35: error: cannot find type 'UIImage' in scope
 38 |     }
 39 | 
 40 |     public func setImage(_ image: UIImage, for key: String, cost: Int) {
    |                                   `- error: cannot find type 'UIImage' in scope
 41 |         cacheQueue.async(flags: .barrier) { [weak self] in
 42 |             self?.imageCache.setObject(image, forKey: NSString(string: key), cost: cost)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:72:21: error: cannot find type 'UIImage' in scope
 70 |     private enum ImageState: Equatable {
 71 |         case loading
 72 |         case loaded(UIImage)
    |                     `- error: cannot find type 'UIImage' in scope
 73 |         case failed
 74 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:25:19: error: cannot find 'UIApplication' in scope
 23 |             self,
 24 |             selector: #selector(handleMemoryWarning),
 25 |             name: UIApplication.didReceiveMemoryWarningNotification,
    |                   `- error: cannot find 'UIApplication' in scope
 26 |             object: nil
 27 |         )

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:104:9: error: generic parameter 'R' could not be inferred
102 | 
103 |     public var body: some View {
104 |         Group {
    |         `- error: generic parameter 'R' could not be inferred
105 |             switch imageState {
106 |             case .loading:

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:104:9: error: generic parameter 'C' could not be inferred
102 | 
103 |     public var body: some View {
104 |         Group {
    |         `- error: generic parameter 'C' could not be inferred
105 |             switch imageState {
106 |             case .loading:

SwiftUI.Group.init:2:31: note: in call to initializer
1 | generic struct Group {
2 | @inlinable nonisolated public init<R, C>(@TableColumnBuilder<R, C> content: () -> Content) where R == Content.TableRowValue, C == Content.TableColumnSortComparator}
  |                               `- note: in call to initializer
3 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:108:22: error: cannot convert value of type 'some View' to expected argument type 'TableColumn<R, C, Content, Label>'
106 |             case .loading:
107 |                 placeholder()
108 |                     .transition(.opacity)
    |                      `- error: cannot convert value of type 'some View' to expected argument type 'TableColumn<R, C, Content, Label>'
109 | 
110 |             case .loaded(let uiImage):

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:107:17: error: generic parameter 'Content' could not be inferred
105 |             switch imageState {
106 |             case .loading:
107 |                 placeholder()
    |                 `- error: generic parameter 'Content' could not be inferred
108 |                     .transition(.opacity)
109 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:107:17: error: generic parameter 'Label' could not be inferred
105 |             switch imageState {
106 |             case .loading:
107 |                 placeholder()
    |                 `- error: generic parameter 'Label' could not be inferred
108 |                     .transition(.opacity)
109 | 

SwiftUI.TableColumnBuilder.buildExpression:2:20: note: in call to function 'buildExpression'
1 | generic struct TableColumnBuilder {
2 | public static func buildExpression<Content, Label>(_ column: TableColumn<RowValue, Sort, Content, Label>) -> TableColumn<RowValue, Sort, Content, Label> where Content : View, Label : View}
  |                    `- note: in call to function 'buildExpression'
3 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:156:33: error: cannot find 'UIImage' in scope
154 |             guard let httpResponse = response as? HTTPURLResponse,
155 |                   httpResponse.statusCode == 200,
156 |                   let uiImage = UIImage(data: data) else {
    |                                 `- error: cannot find 'UIImage' in scope
157 |                 withTransaction(transaction) {
158 |                     imageState = .failed

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:351:40: error: 'isVideoHDRSupported' is unavailable in macOS
349 | 
350 |                 // Optimize for barcode scanning (disable HDR for speed)
351 |                 if device.activeFormat.isVideoHDRSupported {
    |                                        `- error: 'isVideoHDRSupported' is unavailable in macOS
352 |                     device.automaticallyAdjustsVideoHDREnabled = false
353 |                     device.isVideoHDREnabled = false

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCaptureDevice.h:3353:65: note: 'isVideoHDRSupported' has been explicitly marked unavailable here
3351 |     videoHDRSupported is a BOOL indicating whether the format supports high dynamic range streaming, also known as Extended Dynamic Range (EDR). When enabled, the device streams at twice the published frame rate, capturing an under-exposed frame and correctly exposed frame for each frame time at the published rate. Portions of the under-exposed frame are combined with the correctly exposed frame to recover detail in darker areas of the scene. EDR is a separate and distinct feature from 10-bit HDR video (first seen in 2020 iPhones). 10-bit formats with HLG BT2020 color space have greater dynamic range by virtue of their expanded bit depth and HLG transfer function, and when captured in movies, contain Dolby Vision metadata. They are, in effect, "always on" HDR. And thus the videoHDRSupported property is always NO for 10-bit formats only supporting HLG BT2020 colorspace, since HDR cannot be enabled or disabled. To enable videoHDR (EDR), set the AVCaptureDevice.videoHDREnabled property.
3352 |  */
3353 | @property(nonatomic, readonly, getter=isVideoHDRSupported) BOOL videoHDRSupported API_AVAILABLE(ios(8.0), macCatalyst(14.0), tvos(17.0)) API_UNAVAILABLE(macos, visionos);
     |                                                                 `- note: 'isVideoHDRSupported' has been explicitly marked unavailable here
3354 | 
3355 | /*!

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:352:28: error: 'automaticallyAdjustsVideoHDREnabled' is unavailable in macOS
350 |                 // Optimize for barcode scanning (disable HDR for speed)
351 |                 if device.activeFormat.isVideoHDRSupported {
352 |                     device.automaticallyAdjustsVideoHDREnabled = false
    |                            `- error: 'automaticallyAdjustsVideoHDREnabled' is unavailable in macOS
353 |                     device.isVideoHDREnabled = false
354 |                 }

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCaptureDevice.h:2151:27: note: 'automaticallyAdjustsVideoHDREnabled' has been explicitly marked unavailable here
2149 |     The value of this property is a BOOL indicating whether the receiver is free to turn high dynamic range streaming on or off. This property defaults to YES. When automaticallyAdjustsVideoHDREnabled, the AVCaptureDevice turns videoHDR on automatically if it's a good fit for the activeFormat. -setAutomaticallyAdjustsVideoHDREnabled: throws an NSGenericException if called without first obtaining exclusive access to the receiver using -lockForConfiguration:. Clients can key-value observe videoHDREnabled to know when the receiver has automatically changed the value.
2150 |  */
2151 | @property(nonatomic) BOOL automaticallyAdjustsVideoHDREnabled API_AVAILABLE(ios(8.0), macCatalyst(14.0), tvos(17.0)) API_UNAVAILABLE(macos, visionos);
     |                           `- note: 'automaticallyAdjustsVideoHDREnabled' has been explicitly marked unavailable here
2152 | 
2153 | /*!

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:353:28: error: 'isVideoHDREnabled' is unavailable in macOS
351 |                 if device.activeFormat.isVideoHDRSupported {
352 |                     device.automaticallyAdjustsVideoHDREnabled = false
353 |                     device.isVideoHDREnabled = false
    |                            `- error: 'isVideoHDREnabled' is unavailable in macOS
354 |                 }
355 | 

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCaptureDevice.h:2163:53: note: 'isVideoHDREnabled' has been explicitly marked unavailable here
2161 |     Note that setting this property may cause a lengthy reconfiguration of the receiver, similar to setting a new active format or AVCaptureSession sessionPreset. If you are setting either the active format or the AVCaptureSession's sessionPreset AND this property, you should bracket these operations with [session beginConfiguration] and [session commitConfiguration] to minimize reconfiguration time.
2162 |  */
2163 | @property(nonatomic, getter=isVideoHDREnabled) BOOL videoHDREnabled API_AVAILABLE(ios(8.0), macCatalyst(14.0), tvos(17.0)) API_UNAVAILABLE(macos, visionos);
     |                                                     `- note: 'isVideoHDREnabled' has been explicitly marked unavailable here
2164 | 
2165 | @end

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:420:22: error: cannot find 'UIApplication' in scope
418 |     nonisolated private func setupAppLifecycleObservers() {
419 |         NotificationCenter.default.addObserver(
420 |             forName: UIApplication.willEnterForegroundNotification,
    |                      `- error: cannot find 'UIApplication' in scope
421 |             object: nil,
422 |             queue: .main

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:430:22: error: cannot find 'UIApplication' in scope
428 | 
429 |         NotificationCenter.default.addObserver(
430 |             forName: UIApplication.didEnterBackgroundNotification,
    |                      `- error: cannot find 'UIApplication' in scope
431 |             object: nil,
432 |             queue: .main

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CloudKitHelpView.swift:182:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
180 |             }
181 |             .navigationTitle("iCloud Sync")
182 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
183 |             .toolbar {
184 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CloudKitHelpView.swift:184:41: error: 'navigationBarTrailing' is unavailable in macOS
182 |             .navigationBarTitleDisplayMode(.inline)
183 |             .toolbar {
184 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
185 |                     Button("Done") {
186 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 
[13/59] Compiling BooksTrackerFeature CloudKitHelpView.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImportView.swift:149:41: error: 'navigationBarTrailing' is unavailable in macOS
147 |             #endif
148 |             .toolbar {
149 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
150 |                     Button("Done") {
151 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:11:47: error: cannot find type 'UIImage' in scope
  9 | 
 10 |     /// Shared NSCache instance with intelligent memory management
 11 |     private let imageCache: NSCache<NSString, UIImage> = {
    |                                               `- error: cannot find type 'UIImage' in scope
 12 |         let cache = NSCache<NSString, UIImage>()
 13 |         cache.countLimit = 100 // Maximum 100 images

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:34:46: error: cannot find type 'UIImage' in scope
 32 |     }
 33 | 
 34 |     public func getImage(for key: String) -> UIImage? {
    |                                              `- error: cannot find type 'UIImage' in scope
 35 |         return cacheQueue.sync {
 36 |             imageCache.object(forKey: NSString(string: key))

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:40:35: error: cannot find type 'UIImage' in scope
 38 |     }
 39 | 
 40 |     public func setImage(_ image: UIImage, for key: String, cost: Int) {
    |                                   `- error: cannot find type 'UIImage' in scope
 41 |         cacheQueue.async(flags: .barrier) { [weak self] in
 42 |             self?.imageCache.setObject(image, forKey: NSString(string: key), cost: cost)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:72:21: error: cannot find type 'UIImage' in scope
 70 |     private enum ImageState: Equatable {
 71 |         case loading
 72 |         case loaded(UIImage)
    |                     `- error: cannot find type 'UIImage' in scope
 73 |         case failed
 74 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:25:19: error: cannot find 'UIApplication' in scope
 23 |             self,
 24 |             selector: #selector(handleMemoryWarning),
 25 |             name: UIApplication.didReceiveMemoryWarningNotification,
    |                   `- error: cannot find 'UIApplication' in scope
 26 |             object: nil
 27 |         )

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:104:9: error: generic parameter 'R' could not be inferred
102 | 
103 |     public var body: some View {
104 |         Group {
    |         `- error: generic parameter 'R' could not be inferred
105 |             switch imageState {
106 |             case .loading:

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:104:9: error: generic parameter 'C' could not be inferred
102 | 
103 |     public var body: some View {
104 |         Group {
    |         `- error: generic parameter 'C' could not be inferred
105 |             switch imageState {
106 |             case .loading:

SwiftUI.Group.init:2:31: note: in call to initializer
1 | generic struct Group {
2 | @inlinable nonisolated public init<R, C>(@TableColumnBuilder<R, C> content: () -> Content) where R == Content.TableRowValue, C == Content.TableColumnSortComparator}
  |                               `- note: in call to initializer
3 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:108:22: error: cannot convert value of type 'some View' to expected argument type 'TableColumn<R, C, Content, Label>'
106 |             case .loading:
107 |                 placeholder()
108 |                     .transition(.opacity)
    |                      `- error: cannot convert value of type 'some View' to expected argument type 'TableColumn<R, C, Content, Label>'
109 | 
110 |             case .loaded(let uiImage):

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:107:17: error: generic parameter 'Content' could not be inferred
105 |             switch imageState {
106 |             case .loading:
107 |                 placeholder()
    |                 `- error: generic parameter 'Content' could not be inferred
108 |                     .transition(.opacity)
109 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:107:17: error: generic parameter 'Label' could not be inferred
105 |             switch imageState {
106 |             case .loading:
107 |                 placeholder()
    |                 `- error: generic parameter 'Label' could not be inferred
108 |                     .transition(.opacity)
109 | 

SwiftUI.TableColumnBuilder.buildExpression:2:20: note: in call to function 'buildExpression'
1 | generic struct TableColumnBuilder {
2 | public static func buildExpression<Content, Label>(_ column: TableColumn<RowValue, Sort, Content, Label>) -> TableColumn<RowValue, Sort, Content, Label> where Content : View, Label : View}
  |                    `- note: in call to function 'buildExpression'
3 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:156:33: error: cannot find 'UIImage' in scope
154 |             guard let httpResponse = response as? HTTPURLResponse,
155 |                   httpResponse.statusCode == 200,
156 |                   let uiImage = UIImage(data: data) else {
    |                                 `- error: cannot find 'UIImage' in scope
157 |                 withTransaction(transaction) {
158 |                     imageState = .failed

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:351:40: error: 'isVideoHDRSupported' is unavailable in macOS
349 | 
350 |                 // Optimize for barcode scanning (disable HDR for speed)
351 |                 if device.activeFormat.isVideoHDRSupported {
    |                                        `- error: 'isVideoHDRSupported' is unavailable in macOS
352 |                     device.automaticallyAdjustsVideoHDREnabled = false
353 |                     device.isVideoHDREnabled = false

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCaptureDevice.h:3353:65: note: 'isVideoHDRSupported' has been explicitly marked unavailable here
3351 |     videoHDRSupported is a BOOL indicating whether the format supports high dynamic range streaming, also known as Extended Dynamic Range (EDR). When enabled, the device streams at twice the published frame rate, capturing an under-exposed frame and correctly exposed frame for each frame time at the published rate. Portions of the under-exposed frame are combined with the correctly exposed frame to recover detail in darker areas of the scene. EDR is a separate and distinct feature from 10-bit HDR video (first seen in 2020 iPhones). 10-bit formats with HLG BT2020 color space have greater dynamic range by virtue of their expanded bit depth and HLG transfer function, and when captured in movies, contain Dolby Vision metadata. They are, in effect, "always on" HDR. And thus the videoHDRSupported property is always NO for 10-bit formats only supporting HLG BT2020 colorspace, since HDR cannot be enabled or disabled. To enable videoHDR (EDR), set the AVCaptureDevice.videoHDREnabled property.
3352 |  */
3353 | @property(nonatomic, readonly, getter=isVideoHDRSupported) BOOL videoHDRSupported API_AVAILABLE(ios(8.0), macCatalyst(14.0), tvos(17.0)) API_UNAVAILABLE(macos, visionos);
     |                                                                 `- note: 'isVideoHDRSupported' has been explicitly marked unavailable here
3354 | 
3355 | /*!

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:352:28: error: 'automaticallyAdjustsVideoHDREnabled' is unavailable in macOS
350 |                 // Optimize for barcode scanning (disable HDR for speed)
351 |                 if device.activeFormat.isVideoHDRSupported {
352 |                     device.automaticallyAdjustsVideoHDREnabled = false
    |                            `- error: 'automaticallyAdjustsVideoHDREnabled' is unavailable in macOS
353 |                     device.isVideoHDREnabled = false
354 |                 }

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCaptureDevice.h:2151:27: note: 'automaticallyAdjustsVideoHDREnabled' has been explicitly marked unavailable here
2149 |     The value of this property is a BOOL indicating whether the receiver is free to turn high dynamic range streaming on or off. This property defaults to YES. When automaticallyAdjustsVideoHDREnabled, the AVCaptureDevice turns videoHDR on automatically if it's a good fit for the activeFormat. -setAutomaticallyAdjustsVideoHDREnabled: throws an NSGenericException if called without first obtaining exclusive access to the receiver using -lockForConfiguration:. Clients can key-value observe videoHDREnabled to know when the receiver has automatically changed the value.
2150 |  */
2151 | @property(nonatomic) BOOL automaticallyAdjustsVideoHDREnabled API_AVAILABLE(ios(8.0), macCatalyst(14.0), tvos(17.0)) API_UNAVAILABLE(macos, visionos);
     |                           `- note: 'automaticallyAdjustsVideoHDREnabled' has been explicitly marked unavailable here
2152 | 
2153 | /*!

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:353:28: error: 'isVideoHDREnabled' is unavailable in macOS
351 |                 if device.activeFormat.isVideoHDRSupported {
352 |                     device.automaticallyAdjustsVideoHDREnabled = false
353 |                     device.isVideoHDREnabled = false
    |                            `- error: 'isVideoHDREnabled' is unavailable in macOS
354 |                 }
355 | 

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCaptureDevice.h:2163:53: note: 'isVideoHDREnabled' has been explicitly marked unavailable here
2161 |     Note that setting this property may cause a lengthy reconfiguration of the receiver, similar to setting a new active format or AVCaptureSession sessionPreset. If you are setting either the active format or the AVCaptureSession's sessionPreset AND this property, you should bracket these operations with [session beginConfiguration] and [session commitConfiguration] to minimize reconfiguration time.
2162 |  */
2163 | @property(nonatomic, getter=isVideoHDREnabled) BOOL videoHDREnabled API_AVAILABLE(ios(8.0), macCatalyst(14.0), tvos(17.0)) API_UNAVAILABLE(macos, visionos);
     |                                                     `- note: 'isVideoHDREnabled' has been explicitly marked unavailable here
2164 | 
2165 | @end

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:420:22: error: cannot find 'UIApplication' in scope
418 |     nonisolated private func setupAppLifecycleObservers() {
419 |         NotificationCenter.default.addObserver(
420 |             forName: UIApplication.willEnterForegroundNotification,
    |                      `- error: cannot find 'UIApplication' in scope
421 |             object: nil,
422 |             queue: .main

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:430:22: error: cannot find 'UIApplication' in scope
428 | 
429 |         NotificationCenter.default.addObserver(
430 |             forName: UIApplication.didEnterBackgroundNotification,
    |                      `- error: cannot find 'UIApplication' in scope
431 |             object: nil,
432 |             queue: .main

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CloudKitHelpView.swift:182:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
180 |             }
181 |             .navigationTitle("iCloud Sync")
182 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
183 |             .toolbar {
184 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CloudKitHelpView.swift:184:41: error: 'navigationBarTrailing' is unavailable in macOS
182 |             .navigationBarTitleDisplayMode(.inline)
183 |             .toolbar {
184 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
185 |                     Button("Done") {
186 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 
[14/59] Compiling BooksTrackerFeature EnrichmentAPIClient.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImportView.swift:149:41: error: 'navigationBarTrailing' is unavailable in macOS
147 |             #endif
148 |             .toolbar {
149 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
150 |                     Button("Done") {
151 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:11:47: error: cannot find type 'UIImage' in scope
  9 | 
 10 |     /// Shared NSCache instance with intelligent memory management
 11 |     private let imageCache: NSCache<NSString, UIImage> = {
    |                                               `- error: cannot find type 'UIImage' in scope
 12 |         let cache = NSCache<NSString, UIImage>()
 13 |         cache.countLimit = 100 // Maximum 100 images

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:34:46: error: cannot find type 'UIImage' in scope
 32 |     }
 33 | 
 34 |     public func getImage(for key: String) -> UIImage? {
    |                                              `- error: cannot find type 'UIImage' in scope
 35 |         return cacheQueue.sync {
 36 |             imageCache.object(forKey: NSString(string: key))

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:40:35: error: cannot find type 'UIImage' in scope
 38 |     }
 39 | 
 40 |     public func setImage(_ image: UIImage, for key: String, cost: Int) {
    |                                   `- error: cannot find type 'UIImage' in scope
 41 |         cacheQueue.async(flags: .barrier) { [weak self] in
 42 |             self?.imageCache.setObject(image, forKey: NSString(string: key), cost: cost)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:72:21: error: cannot find type 'UIImage' in scope
 70 |     private enum ImageState: Equatable {
 71 |         case loading
 72 |         case loaded(UIImage)
    |                     `- error: cannot find type 'UIImage' in scope
 73 |         case failed
 74 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:25:19: error: cannot find 'UIApplication' in scope
 23 |             self,
 24 |             selector: #selector(handleMemoryWarning),
 25 |             name: UIApplication.didReceiveMemoryWarningNotification,
    |                   `- error: cannot find 'UIApplication' in scope
 26 |             object: nil
 27 |         )

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:104:9: error: generic parameter 'R' could not be inferred
102 | 
103 |     public var body: some View {
104 |         Group {
    |         `- error: generic parameter 'R' could not be inferred
105 |             switch imageState {
106 |             case .loading:

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:104:9: error: generic parameter 'C' could not be inferred
102 | 
103 |     public var body: some View {
104 |         Group {
    |         `- error: generic parameter 'C' could not be inferred
105 |             switch imageState {
106 |             case .loading:

SwiftUI.Group.init:2:31: note: in call to initializer
1 | generic struct Group {
2 | @inlinable nonisolated public init<R, C>(@TableColumnBuilder<R, C> content: () -> Content) where R == Content.TableRowValue, C == Content.TableColumnSortComparator}
  |                               `- note: in call to initializer
3 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:108:22: error: cannot convert value of type 'some View' to expected argument type 'TableColumn<R, C, Content, Label>'
106 |             case .loading:
107 |                 placeholder()
108 |                     .transition(.opacity)
    |                      `- error: cannot convert value of type 'some View' to expected argument type 'TableColumn<R, C, Content, Label>'
109 | 
110 |             case .loaded(let uiImage):

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:107:17: error: generic parameter 'Content' could not be inferred
105 |             switch imageState {
106 |             case .loading:
107 |                 placeholder()
    |                 `- error: generic parameter 'Content' could not be inferred
108 |                     .transition(.opacity)
109 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:107:17: error: generic parameter 'Label' could not be inferred
105 |             switch imageState {
106 |             case .loading:
107 |                 placeholder()
    |                 `- error: generic parameter 'Label' could not be inferred
108 |                     .transition(.opacity)
109 | 

SwiftUI.TableColumnBuilder.buildExpression:2:20: note: in call to function 'buildExpression'
1 | generic struct TableColumnBuilder {
2 | public static func buildExpression<Content, Label>(_ column: TableColumn<RowValue, Sort, Content, Label>) -> TableColumn<RowValue, Sort, Content, Label> where Content : View, Label : View}
  |                    `- note: in call to function 'buildExpression'
3 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:156:33: error: cannot find 'UIImage' in scope
154 |             guard let httpResponse = response as? HTTPURLResponse,
155 |                   httpResponse.statusCode == 200,
156 |                   let uiImage = UIImage(data: data) else {
    |                                 `- error: cannot find 'UIImage' in scope
157 |                 withTransaction(transaction) {
158 |                     imageState = .failed

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:351:40: error: 'isVideoHDRSupported' is unavailable in macOS
349 | 
350 |                 // Optimize for barcode scanning (disable HDR for speed)
351 |                 if device.activeFormat.isVideoHDRSupported {
    |                                        `- error: 'isVideoHDRSupported' is unavailable in macOS
352 |                     device.automaticallyAdjustsVideoHDREnabled = false
353 |                     device.isVideoHDREnabled = false

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCaptureDevice.h:3353:65: note: 'isVideoHDRSupported' has been explicitly marked unavailable here
3351 |     videoHDRSupported is a BOOL indicating whether the format supports high dynamic range streaming, also known as Extended Dynamic Range (EDR). When enabled, the device streams at twice the published frame rate, capturing an under-exposed frame and correctly exposed frame for each frame time at the published rate. Portions of the under-exposed frame are combined with the correctly exposed frame to recover detail in darker areas of the scene. EDR is a separate and distinct feature from 10-bit HDR video (first seen in 2020 iPhones). 10-bit formats with HLG BT2020 color space have greater dynamic range by virtue of their expanded bit depth and HLG transfer function, and when captured in movies, contain Dolby Vision metadata. They are, in effect, "always on" HDR. And thus the videoHDRSupported property is always NO for 10-bit formats only supporting HLG BT2020 colorspace, since HDR cannot be enabled or disabled. To enable videoHDR (EDR), set the AVCaptureDevice.videoHDREnabled property.
3352 |  */
3353 | @property(nonatomic, readonly, getter=isVideoHDRSupported) BOOL videoHDRSupported API_AVAILABLE(ios(8.0), macCatalyst(14.0), tvos(17.0)) API_UNAVAILABLE(macos, visionos);
     |                                                                 `- note: 'isVideoHDRSupported' has been explicitly marked unavailable here
3354 | 
3355 | /*!

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:352:28: error: 'automaticallyAdjustsVideoHDREnabled' is unavailable in macOS
350 |                 // Optimize for barcode scanning (disable HDR for speed)
351 |                 if device.activeFormat.isVideoHDRSupported {
352 |                     device.automaticallyAdjustsVideoHDREnabled = false
    |                            `- error: 'automaticallyAdjustsVideoHDREnabled' is unavailable in macOS
353 |                     device.isVideoHDREnabled = false
354 |                 }

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCaptureDevice.h:2151:27: note: 'automaticallyAdjustsVideoHDREnabled' has been explicitly marked unavailable here
2149 |     The value of this property is a BOOL indicating whether the receiver is free to turn high dynamic range streaming on or off. This property defaults to YES. When automaticallyAdjustsVideoHDREnabled, the AVCaptureDevice turns videoHDR on automatically if it's a good fit for the activeFormat. -setAutomaticallyAdjustsVideoHDREnabled: throws an NSGenericException if called without first obtaining exclusive access to the receiver using -lockForConfiguration:. Clients can key-value observe videoHDREnabled to know when the receiver has automatically changed the value.
2150 |  */
2151 | @property(nonatomic) BOOL automaticallyAdjustsVideoHDREnabled API_AVAILABLE(ios(8.0), macCatalyst(14.0), tvos(17.0)) API_UNAVAILABLE(macos, visionos);
     |                           `- note: 'automaticallyAdjustsVideoHDREnabled' has been explicitly marked unavailable here
2152 | 
2153 | /*!

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:353:28: error: 'isVideoHDREnabled' is unavailable in macOS
351 |                 if device.activeFormat.isVideoHDRSupported {
352 |                     device.automaticallyAdjustsVideoHDREnabled = false
353 |                     device.isVideoHDREnabled = false
    |                            `- error: 'isVideoHDREnabled' is unavailable in macOS
354 |                 }
355 | 

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCaptureDevice.h:2163:53: note: 'isVideoHDREnabled' has been explicitly marked unavailable here
2161 |     Note that setting this property may cause a lengthy reconfiguration of the receiver, similar to setting a new active format or AVCaptureSession sessionPreset. If you are setting either the active format or the AVCaptureSession's sessionPreset AND this property, you should bracket these operations with [session beginConfiguration] and [session commitConfiguration] to minimize reconfiguration time.
2162 |  */
2163 | @property(nonatomic, getter=isVideoHDREnabled) BOOL videoHDREnabled API_AVAILABLE(ios(8.0), macCatalyst(14.0), tvos(17.0)) API_UNAVAILABLE(macos, visionos);
     |                                                     `- note: 'isVideoHDREnabled' has been explicitly marked unavailable here
2164 | 
2165 | @end

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:420:22: error: cannot find 'UIApplication' in scope
418 |     nonisolated private func setupAppLifecycleObservers() {
419 |         NotificationCenter.default.addObserver(
420 |             forName: UIApplication.willEnterForegroundNotification,
    |                      `- error: cannot find 'UIApplication' in scope
421 |             object: nil,
422 |             queue: .main

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CameraManager.swift:430:22: error: cannot find 'UIApplication' in scope
428 | 
429 |         NotificationCenter.default.addObserver(
430 |             forName: UIApplication.didEnterBackgroundNotification,
    |                      `- error: cannot find 'UIApplication' in scope
431 |             object: nil,
432 |             queue: .main

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CloudKitHelpView.swift:182:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
180 |             }
181 |             .navigationTitle("iCloud Sync")
182 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
183 |             .toolbar {
184 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CloudKitHelpView.swift:184:41: error: 'navigationBarTrailing' is unavailable in macOS
182 |             .navigationBarTitleDisplayMode(.inline)
183 |             .toolbar {
184 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
185 |                     Button("Done") {
186 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 
[15/59] Compiling BooksTrackerFeature JobModels.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:57:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
  55 | 
  56 |     @Namespace private var layoutTransition
  57 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
  58 |     @Environment(\.iOS26ThemeStore) private var themeStore
  59 |     @Environment(\.modelContext) private var modelContext

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:57:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
  55 | 
  56 |     @Namespace private var layoutTransition
  57 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
  58 |     @Environment(\.iOS26ThemeStore) private var themeStore
  59 |     @Environment(\.modelContext) private var modelContext

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:71:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 69 | 
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
    |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
 72 |     @State private var scrollPhase: ScrollPhase = .idle
 73 |     @State private var showBackToTop = false

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:71:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 69 | 
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
    |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
 72 |     @State private var scrollPhase: ScrollPhase = .idle
 73 |     @State private var showBackToTop = false
[16/59] Compiling BooksTrackerFeature PollingUtility.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:57:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
  55 | 
  56 |     @Namespace private var layoutTransition
  57 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
  58 |     @Environment(\.iOS26ThemeStore) private var themeStore
  59 |     @Environment(\.modelContext) private var modelContext

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:57:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
  55 | 
  56 |     @Namespace private var layoutTransition
  57 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
  58 |     @Environment(\.iOS26ThemeStore) private var themeStore
  59 |     @Environment(\.modelContext) private var modelContext

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:71:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 69 | 
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
    |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
 72 |     @State private var scrollPhase: ScrollPhase = .idle
 73 |     @State private var showBackToTop = false

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:71:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 69 | 
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
    |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
 72 |     @State private var scrollPhase: ScrollPhase = .idle
 73 |     @State private var showBackToTop = false
[17/59] Compiling BooksTrackerFeature SyncCoordinator.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:57:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
  55 | 
  56 |     @Namespace private var layoutTransition
  57 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
  58 |     @Environment(\.iOS26ThemeStore) private var themeStore
  59 |     @Environment(\.modelContext) private var modelContext

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:57:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
  55 | 
  56 |     @Namespace private var layoutTransition
  57 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
  58 |     @Environment(\.iOS26ThemeStore) private var themeStore
  59 |     @Environment(\.modelContext) private var modelContext

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:71:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 69 | 
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
    |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
 72 |     @State private var scrollPhase: ScrollPhase = .idle
 73 |     @State private var showBackToTop = false

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:71:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 69 | 
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
    |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
 72 |     @State private var scrollPhase: ScrollPhase = .idle
 73 |     @State private var showBackToTop = false
[18/59] Compiling BooksTrackerFeature WebSocketProgressManager.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:57:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
  55 | 
  56 |     @Namespace private var layoutTransition
  57 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
  58 |     @Environment(\.iOS26ThemeStore) private var themeStore
  59 |     @Environment(\.modelContext) private var modelContext

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:57:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
  55 | 
  56 |     @Namespace private var layoutTransition
  57 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
  58 |     @Environment(\.iOS26ThemeStore) private var themeStore
  59 |     @Environment(\.modelContext) private var modelContext

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:71:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 69 | 
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
    |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
 72 |     @State private var scrollPhase: ScrollPhase = .idle
 73 |     @State private var showBackToTop = false

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:71:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 69 | 
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
    |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
 72 |     @State private var scrollPhase: ScrollPhase = .idle
 73 |     @State private var showBackToTop = false
[19/59] Compiling BooksTrackerFeature ContentView.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:57:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
  55 | 
  56 |     @Namespace private var layoutTransition
  57 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
  58 |     @Environment(\.iOS26ThemeStore) private var themeStore
  59 |     @Environment(\.modelContext) private var modelContext

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:57:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
  55 | 
  56 |     @Namespace private var layoutTransition
  57 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
  58 |     @Environment(\.iOS26ThemeStore) private var themeStore
  59 |     @Environment(\.modelContext) private var modelContext

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:71:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 69 | 
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
    |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
 72 |     @State private var scrollPhase: ScrollPhase = .idle
 73 |     @State private var showBackToTop = false

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:71:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 69 | 
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
    |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
 72 |     @State private var scrollPhase: ScrollPhase = .idle
 73 |     @State private var showBackToTop = false
[20/59] Compiling BooksTrackerFeature Edition.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:57:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
  55 | 
  56 |     @Namespace private var layoutTransition
  57 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
  58 |     @Environment(\.iOS26ThemeStore) private var themeStore
  59 |     @Environment(\.modelContext) private var modelContext

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:57:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
  55 | 
  56 |     @Namespace private var layoutTransition
  57 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
  58 |     @Environment(\.iOS26ThemeStore) private var themeStore
  59 |     @Environment(\.modelContext) private var modelContext

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:71:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 69 | 
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
    |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
 72 |     @State private var scrollPhase: ScrollPhase = .idle
 73 |     @State private var showBackToTop = false

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:71:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 69 | 
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
    |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
 72 |     @State private var scrollPhase: ScrollPhase = .idle
 73 |     @State private var showBackToTop = false
error: emit-module command failed with exit code 1 (use -v to see invocation)
[21/65] Emitting module BooksTrackerFeature
macro expansion @ObservationTracked:1:47: error: cannot find type 'ScanResult' in scope
`- /Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:367:32: note: expanded code originates here
365 |     var confirmedCount: Int = 0
366 |     var uncertainCount: Int = 0
367 |     var scanResult: ScanResult?
    +--- macro expansion @ObservationTracked ---------------------------
    |1 | @ObservationIgnored private  var _scanResult: ScanResult?
    |  |                                               `- error: cannot find type 'ScanResult' in scope
    +-------------------------------------------------------------------
368 | 
369 |     // Real-time progress tracking

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:367:21: error: cannot find type 'ScanResult' in scope
365 |     var confirmedCount: Int = 0
366 |     var uncertainCount: Int = 0
367 |     var scanResult: ScanResult?
    |                     `- error: cannot find type 'ScanResult' in scope
368 | 
369 |     // Real-time progress tracking

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:396:32: error: cannot find type 'UIImage' in scope
394 | 
395 |     /// Process captured image with WebSocket real-time progress tracking
396 |     func processImage(_ image: UIImage) async {
    |                                `- error: cannot find type 'UIImage' in scope
397 |         scanState = .processing
398 |         currentProgress = 0.0

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:25:29: error: cannot find type 'UIImage' in scope
 23 |     // MARK: - Callbacks
 24 | 
 25 |     let onCaptureComplete: (UIImage) -> Void
    |                             `- error: cannot find type 'UIImage' in scope
 26 | 
 27 |     // MARK: - Initialization

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:29:47: error: cannot find type 'UIImage' in scope
 27 |     // MARK: - Initialization
 28 | 
 29 |     public init(onCaptureComplete: @escaping (UIImage) -> Void) {
    |                                               `- error: cannot find type 'UIImage' in scope
 30 |         self.onCaptureComplete = onCaptureComplete
 31 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:308:16: error: cannot find type 'UIImage' in scope
306 |     // MARK: - Properties
307 | 
308 |     let image: UIImage
    |                `- error: cannot find type 'UIImage' in scope
309 |     let onUsePhoto: (UIImage) -> Void
310 |     let onRetake: () -> Void

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:309:22: error: cannot find type 'UIImage' in scope
307 | 
308 |     let image: UIImage
309 |     let onUsePhoto: (UIImage) -> Void
    |                      `- error: cannot find type 'UIImage' in scope
310 |     let onRetake: () -> Void
311 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:30:24: error: cannot find type 'UIImage' in scope
 28 | 
 29 |     var cameraState: CameraState = .idle
 30 |     var capturedImage: UIImage?
    |                        `- error: cannot find type 'UIImage' in scope
 31 |     var showReviewSheet = false
 32 |     var flashMode: AVCaptureDevice.FlashMode = .auto

macro expansion @ObservationTracked:1:50: error: cannot find type 'UIImage' in scope
`- /Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:30:32: note: expanded code originates here
 28 | 
 29 |     var cameraState: CameraState = .idle
 30 |     var capturedImage: UIImage?
    +--- macro expansion @ObservationTracked ---------------------------
    |1 | @ObservationIgnored private  var _capturedImage: UIImage?
    |  |                                                  `- error: cannot find type 'UIImage' in scope
    +-------------------------------------------------------------------
 31 |     var showReviewSheet = false
 32 |     var flashMode: AVCaptureDevice.FlashMode = .auto

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/VisionProcessingActor.swift:195:10: error: cannot find type 'DetectedBook' in scope
193 |         boundingBox: CGRect,
194 |         index: Int
195 |     ) -> DetectedBook {
    |          `- error: cannot find type 'DetectedBook' in scope
196 |         // Extract ISBN (13-digit or 10-digit)
197 |         let isbn = extractISBN(from: text)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:12:44: error: 'ActivityAttributes' is unavailable in macOS
 10 | /// Displays on Lock Screen and Dynamic Island during long imports
 11 | @available(iOS 16.2, *)
 12 | public struct CSVImportActivityAttributes: ActivityAttributes, Sendable {
    |                                            `- error: 'ActivityAttributes' is unavailable in macOS
 13 | 
 14 |     // MARK: - Static Content

ActivityKit.ActivityAttributes:6:17: note: 'ActivityAttributes' has been explicitly marked unavailable here
4 | @available(tvOS, unavailable)
5 | @available(watchOS, unavailable)
6 | public protocol ActivityAttributes : Decodable, Encodable {
  |                 `- note: 'ActivityAttributes' has been explicitly marked unavailable here
7 |     associatedtype ContentState : Decodable, Encodable, Hashable
8 | }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:176:34: error: 'Activity' is unavailable in macOS
174 |     // MARK: - Properties
175 | 
176 |     private var currentActivity: Activity<CSVImportActivityAttributes>?
    |                                  `- error: 'Activity' is unavailable in macOS
177 |     private let updateThrottle: TimeInterval = 1.0 // Update every 1 second minimum
178 |     private var lastUpdateTime: Date?

ActivityKit.Activity:6:14: note: 'Activity' has been explicitly marked unavailable here
  4 | @available(tvOS, unavailable)
  5 | @available(watchOS, unavailable)
  6 | public class Activity<Attributes> : Identifiable where Attributes : ActivityAttributes {
    |              `- note: 'Activity' has been explicitly marked unavailable here
  7 |     public typealias ContentState = Attributes.ContentState
  8 |     @available(iOS, deprecated: 16.2, message: "Use request(attributes:content:pushType:) instead")

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:55:18: error: 'ActivityViewContext' is unavailable in macOS
 53 | @available(iOS 16.2, *)
 54 | struct LockScreenLiveActivityView: View {
 55 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
 56 | 
 57 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:216:18: error: 'ActivityViewContext' is unavailable in macOS
214 | @available(iOS 16.2, *)
215 | struct ExpandedLeadingView: View {
216 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
217 | 
218 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:245:18: error: 'ActivityViewContext' is unavailable in macOS
243 | @available(iOS 16.2, *)
244 | struct ExpandedTrailingView: View {
245 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
246 | 
247 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:268:18: error: 'ActivityViewContext' is unavailable in macOS
266 | @available(iOS 16.2, *)
267 | struct ExpandedCenterView: View {
268 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
269 | 
270 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:286:18: error: 'ActivityViewContext' is unavailable in macOS
284 | @available(iOS 16.2, *)
285 | struct ExpandedBottomView: View {
286 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
287 | 
288 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:361:18: error: 'ActivityViewContext' is unavailable in macOS
359 | @available(iOS 16.2, *)
360 | struct CompactLeadingView: View {
361 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
362 | 
363 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:372:18: error: 'ActivityViewContext' is unavailable in macOS
370 | @available(iOS 16.2, *)
371 | struct CompactTrailingView: View {
372 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
373 | 
374 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:394:18: error: 'ActivityViewContext' is unavailable in macOS
392 | @available(iOS 16.2, *)
393 | struct MinimalView: View {
394 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
395 | 
396 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:11:47: error: cannot find type 'UIImage' in scope
  9 | 
 10 |     /// Shared NSCache instance with intelligent memory management
 11 |     private let imageCache: NSCache<NSString, UIImage> = {
    |                                               `- error: cannot find type 'UIImage' in scope
 12 |         let cache = NSCache<NSString, UIImage>()
 13 |         cache.countLimit = 100 // Maximum 100 images

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:34:46: error: cannot find type 'UIImage' in scope
 32 |     }
 33 | 
 34 |     public func getImage(for key: String) -> UIImage? {
    |                                              `- error: cannot find type 'UIImage' in scope
 35 |         return cacheQueue.sync {
 36 |             imageCache.object(forKey: NSString(string: key))

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:40:35: error: cannot find type 'UIImage' in scope
 38 |     }
 39 | 
 40 |     public func setImage(_ image: UIImage, for key: String, cost: Int) {
    |                                   `- error: cannot find type 'UIImage' in scope
 41 |         cacheQueue.async(flags: .barrier) { [weak self] in
 42 |             self?.imageCache.setObject(image, forKey: NSString(string: key), cost: cost)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CachedAsyncImage.swift:72:21: error: cannot find type 'UIImage' in scope
 70 |     private enum ImageState: Equatable {
 71 |         case loading
 72 |         case loaded(UIImage)
    |                     `- error: cannot find type 'UIImage' in scope
 73 |         case failed
 74 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/EditionMetadataView.swift:405:41: error: cannot find type 'UIImpactFeedbackGenerator' in scope
403 |     }
404 | 
405 |     private func triggerHaptic(_ style: UIImpactFeedbackGenerator.FeedbackStyle) {
    |                                         `- error: cannot find type 'UIImpactFeedbackGenerator' in scope
406 |         #if canImport(UIKit)
407 |         let impactFeedback = UIImpactFeedbackGenerator(style: style)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/EditionMetadataView.swift:444:41: error: cannot find type 'UIImpactFeedbackGenerator' in scope
442 |     }
443 | 
444 |     private func triggerHaptic(_ style: UIImpactFeedbackGenerator.FeedbackStyle) {
    |                                         `- error: cannot find type 'UIImpactFeedbackGenerator' in scope
445 |         #if canImport(UIKit)
446 |         let impactFeedback = UIImpactFeedbackGenerator(style: style)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:264:30: error: cannot find type 'Context' in scope
262 |     @Binding var sessionState: CameraSessionState
263 | 
264 |     func makeUIView(context: Context) -> CameraPreviewUIView {
    |                              `- error: cannot find type 'Context' in scope
265 |         CameraPreviewUIView()
266 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:268:63: error: cannot find type 'Context' in scope
266 |     }
267 | 
268 |     func updateUIView(_ uiView: CameraPreviewUIView, context: Context) {
    |                                                               `- error: cannot find type 'Context' in scope
269 |         Task {
270 |             await uiView.updateSession(cameraManager: cameraManager)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:260:36: error: cannot find type 'UIViewRepresentable' in scope
258 | // MARK: - Camera Preview Layer
259 | 
260 | private struct CameraPreviewLayer: UIViewRepresentable {
    |                                    `- error: cannot find type 'UIViewRepresentable' in scope
261 |     let cameraManager: CameraManager
262 |     @Binding var sessionState: CameraSessionState

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:275:42: error: cannot find type 'UIView' in scope
273 | }
274 | 
275 | private final class CameraPreviewUIView: UIView {
    |                                          `- error: cannot find type 'UIView' in scope
276 |     private var previewLayer: AVCaptureVideoPreviewLayer?
277 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ModernCameraPreview.swift:296:19: error: method does not override any method from its superclass
294 |     }
295 | 
296 |     override func layoutSubviews() {
    |                   `- error: method does not override any method from its superclass
297 |         super.layoutSubviews()
298 |         previewLayer?.frame = bounds

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:71:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 69 | 
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
    |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
 72 |     @State private var scrollPhase: ScrollPhase = .idle
 73 |     @State private var showBackToTop = false

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:71:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 69 | 
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
    |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
 72 |     @State private var scrollPhase: ScrollPhase = .idle
 73 |     @State private var showBackToTop = false

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:72:37: error: 'ScrollPhase' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
 72 |     @State private var scrollPhase: ScrollPhase = .idle
    |                                     `- error: 'ScrollPhase' is only available in macOS 15.0 or newer
 73 |     @State private var showBackToTop = false
 74 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:333:48: error: cannot find type 'UINotificationFeedbackGenerator' in scope
331 | 
332 |     @MainActor
333 |     private func triggerHapticFeedback(_ type: UINotificationFeedbackGenerator.FeedbackType) {
    |                                                `- error: cannot find type 'UINotificationFeedbackGenerator' in scope
334 |         let notificationFeedback = UINotificationFeedbackGenerator()
335 |         notificationFeedback.notificationOccurred(type)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:662:48: error: cannot find type 'UINotificationFeedbackGenerator' in scope
660 |     
661 |     @MainActor
662 |     private func triggerHapticFeedback(_ type: UINotificationFeedbackGenerator.FeedbackType) {
    |                                                `- error: cannot find type 'UINotificationFeedbackGenerator' in scope
663 |         let notificationFeedback = UINotificationFeedbackGenerator()
664 |         notificationFeedback.notificationOccurred(type)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:57:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
  55 | 
  56 |     @Namespace private var layoutTransition
  57 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
  58 |     @Environment(\.iOS26ThemeStore) private var themeStore
  59 |     @Environment(\.modelContext) private var modelContext

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:57:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
  55 | 
  56 |     @Namespace private var layoutTransition
  57 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
  58 |     @Environment(\.iOS26ThemeStore) private var themeStore
  59 |     @Environment(\.modelContext) private var modelContext

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:399:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
 376 | /// ✅ CRITICAL FIXES: This version addresses all the major iOS UX issues
 377 | @MainActor
 378 | public struct UltraOptimizedLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
 379 |     // ✅ FIX 1: Highly optimized SwiftData query - only loads library entries
 380 |     @Query(
     :
 397 |     
 398 |     @Namespace private var layoutTransition
 399 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
 400 |     @Environment(\.iOS26ThemeStore) private var themeStore
 401 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:399:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
 376 | /// ✅ CRITICAL FIXES: This version addresses all the major iOS UX issues
 377 | @MainActor
 378 | public struct UltraOptimizedLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
 379 |     // ✅ FIX 1: Highly optimized SwiftData query - only loads library entries
 380 |     @Query(
     :
 397 |     
 398 |     @Namespace private var layoutTransition
 399 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
 400 |     @Environment(\.iOS26ThemeStore) private var themeStore
 401 | 
[22/65] Compiling BooksTrackerFeature ScanProgressModels.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/VisionProcessingActor.swift:195:10: error: cannot find type 'DetectedBook' in scope
193 |         boundingBox: CGRect,
194 |         index: Int
195 |     ) -> DetectedBook {
    |          `- error: cannot find type 'DetectedBook' in scope
196 |         // Extract ISBN (13-digit or 10-digit)
197 |         let isbn = extractISBN(from: text)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/VisionProcessingActor.swift:206:21: error: cannot find type 'DetectionStatus' in scope
204 | 
205 |         // Determine status based on confidence and extracted data
206 |         let status: DetectionStatus
    |                     `- error: cannot find type 'DetectionStatus' in scope
207 |         if confidence < 0.5 {
208 |             status = .uncertain
[23/65] Compiling BooksTrackerFeature SuggestionGenerator.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/VisionProcessingActor.swift:195:10: error: cannot find type 'DetectedBook' in scope
193 |         boundingBox: CGRect,
194 |         index: Int
195 |     ) -> DetectedBook {
    |          `- error: cannot find type 'DetectedBook' in scope
196 |         // Extract ISBN (13-digit or 10-digit)
197 |         let isbn = extractISBN(from: text)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/VisionProcessingActor.swift:206:21: error: cannot find type 'DetectionStatus' in scope
204 | 
205 |         // Determine status based on confidence and extracted data
206 |         let status: DetectionStatus
    |                     `- error: cannot find type 'DetectionStatus' in scope
207 |         if confidence < 0.5 {
208 |             status = .uncertain
[24/65] Compiling BooksTrackerFeature VisionProcessingActor.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/VisionProcessingActor.swift:195:10: error: cannot find type 'DetectedBook' in scope
193 |         boundingBox: CGRect,
194 |         index: Int
195 |     ) -> DetectedBook {
    |          `- error: cannot find type 'DetectedBook' in scope
196 |         // Extract ISBN (13-digit or 10-digit)
197 |         let isbn = extractISBN(from: text)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/VisionProcessingActor.swift:206:21: error: cannot find type 'DetectionStatus' in scope
204 | 
205 |         // Determine status based on confidence and extracted data
206 |         let status: DetectionStatus
    |                     `- error: cannot find type 'DetectionStatus' in scope
207 |         if confidence < 0.5 {
208 |             status = .uncertain
[25/65] Compiling BooksTrackerFeature BackgroundImportBanner.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/VisionProcessingActor.swift:195:10: error: cannot find type 'DetectedBook' in scope
193 |         boundingBox: CGRect,
194 |         index: Int
195 |     ) -> DetectedBook {
    |          `- error: cannot find type 'DetectedBook' in scope
196 |         // Extract ISBN (13-digit or 10-digit)
197 |         let isbn = extractISBN(from: text)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/VisionProcessingActor.swift:206:21: error: cannot find type 'DetectionStatus' in scope
204 | 
205 |         // Determine status based on confidence and extracted data
206 |         let status: DetectionStatus
    |                     `- error: cannot find type 'DetectionStatus' in scope
207 |         if confidence < 0.5 {
208 |             status = .uncertain
[26/65] Compiling BooksTrackerFeature CSVImportFlowView.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/VisionProcessingActor.swift:195:10: error: cannot find type 'DetectedBook' in scope
193 |         boundingBox: CGRect,
194 |         index: Int
195 |     ) -> DetectedBook {
    |          `- error: cannot find type 'DetectedBook' in scope
196 |         // Extract ISBN (13-digit or 10-digit)
197 |         let isbn = extractISBN(from: text)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/VisionProcessingActor.swift:206:21: error: cannot find type 'DetectionStatus' in scope
204 | 
205 |         // Determine status based on confidence and extracted data
206 |         let status: DetectionStatus
    |                     `- error: cannot find type 'DetectionStatus' in scope
207 |         if confidence < 0.5 {
208 |             status = .uncertain
[27/65] Compiling BooksTrackerFeature CSVImportService.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/VisionProcessingActor.swift:195:10: error: cannot find type 'DetectedBook' in scope
193 |         boundingBox: CGRect,
194 |         index: Int
195 |     ) -> DetectedBook {
    |          `- error: cannot find type 'DetectedBook' in scope
196 |         // Extract ISBN (13-digit or 10-digit)
197 |         let isbn = extractISBN(from: text)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/VisionProcessingActor.swift:206:21: error: cannot find type 'DetectionStatus' in scope
204 | 
205 |         // Determine status based on confidence and extracted data
206 |         let status: DetectionStatus
    |                     `- error: cannot find type 'DetectionStatus' in scope
207 |         if confidence < 0.5 {
208 |             status = .uncertain
[28/65] Compiling BooksTrackerFeature UserLibraryEntry.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:35:37: error: 'navigationBarLeading' is unavailable in macOS
 33 |         .navigationBarBackButtonHidden(true)
 34 |         .toolbar {
 35 |             ToolbarItem(placement: .navigationBarLeading) {
    |                                     `- error: 'navigationBarLeading' is unavailable in macOS
 36 |                 Button(action: { dismiss() }) {
 37 |                     Image(systemName: "chevron.left")

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:51:37: error: 'navigationBarTrailing' is unavailable in macOS
 49 |             }
 50 | 
 51 |             ToolbarItem(placement: .navigationBarTrailing) {
    |                                     `- error: 'navigationBarTrailing' is unavailable in macOS
 52 |                 if work.availableEditions.count > 1 {
 53 |                     Button("Editions") {

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:281:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
279 |             }
280 |             .navigationTitle("Choose Edition")
281 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
282 |             .toolbar {
283 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:283:41: error: 'navigationBarTrailing' is unavailable in macOS
281 |             .navigationBarTitleDisplayMode(.inline)
282 |             .toolbar {
283 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
284 |                     Button("Done") {
285 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:328:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
326 |             }
327 |             .navigationTitle("Books by \(author.name)")
328 |             .navigationBarTitleDisplayMode(.large)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
329 |             .toolbar {
330 |                 ToolbarItem(placement: .navigationBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:330:41: error: 'navigationBarLeading' is unavailable in macOS
328 |             .navigationBarTitleDisplayMode(.large)
329 |             .toolbar {
330 |                 ToolbarItem(placement: .navigationBarLeading) {
    |                                         `- error: 'navigationBarLeading' is unavailable in macOS
331 |                     Button("Done") {
332 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDiscoveryView.swift:76:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 74 |             }
 75 |             .navigationTitle("Book Details")
 76 |             .navigationBarTitleDisplayMode(.large)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 77 |             .toolbar {
 78 |                 ToolbarItem(placement: .navigationBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDiscoveryView.swift:78:41: error: 'navigationBarLeading' is unavailable in macOS
 76 |             .navigationBarTitleDisplayMode(.large)
 77 |             .toolbar {
 78 |                 ToolbarItem(placement: .navigationBarLeading) {
    |                                         `- error: 'navigationBarLeading' is unavailable in macOS
 79 |                     Button("Cancel") {
 80 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26AdaptiveBookCard.swift:488:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
486 | 
487 |     private func triggerHapticFeedback() {
488 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
489 |         impactFeedback.impactOccurred()
490 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26AdaptiveBookCard.swift:488:64: error: cannot infer contextual base in reference to member 'medium'
486 | 
487 |     private func triggerHapticFeedback() {
488 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                                                                `- error: cannot infer contextual base in reference to member 'medium'
489 |         impactFeedback.impactOccurred()
490 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26AdaptiveBookCard.swift:503:36: error: cannot find 'UINotificationFeedbackGenerator' in scope
501 |         userEntry.touch()
502 | 
503 |         let notificationFeedback = UINotificationFeedbackGenerator()
    |                                    `- error: cannot find 'UINotificationFeedbackGenerator' in scope
504 |         notificationFeedback.notificationOccurred(.success)
505 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26AdaptiveBookCard.swift:504:52: error: cannot infer contextual base in reference to member 'success'
502 | 
503 |         let notificationFeedback = UINotificationFeedbackGenerator()
504 |         notificationFeedback.notificationOccurred(.success)
    |                                                    `- error: cannot infer contextual base in reference to member 'success'
505 |     }
506 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:333:48: error: cannot find type 'UINotificationFeedbackGenerator' in scope
331 | 
332 |     @MainActor
333 |     private func triggerHapticFeedback(_ type: UINotificationFeedbackGenerator.FeedbackType) {
    |                                                `- error: cannot find type 'UINotificationFeedbackGenerator' in scope
334 |         let notificationFeedback = UINotificationFeedbackGenerator()
335 |         notificationFeedback.notificationOccurred(type)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:662:48: error: cannot find type 'UINotificationFeedbackGenerator' in scope
660 |     
661 |     @MainActor
662 |     private func triggerHapticFeedback(_ type: UINotificationFeedbackGenerator.FeedbackType) {
    |                                                `- error: cannot find type 'UINotificationFeedbackGenerator' in scope
663 |         let notificationFeedback = UINotificationFeedbackGenerator()
664 |         notificationFeedback.notificationOccurred(type)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:284:32: error: cannot infer contextual base in reference to member 'success'
282 | 
283 |         // Haptic feedback
284 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
285 |     }
286 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:295:32: error: cannot infer contextual base in reference to member 'success'
293 | 
294 |         // Haptic feedback
295 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
296 |     }
297 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:310:32: error: cannot infer contextual base in reference to member 'success'
308 |         }
309 |         work.userLibraryEntries?.append(entry)
310 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
311 |     }
312 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:319:32: error: cannot infer contextual base in reference to member 'success'
317 |         }
318 |         work.userLibraryEntries?.append(entry)
319 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
320 |     }
321 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:329:32: error: cannot infer contextual base in reference to member 'warning'
327 |         }
328 | 
329 |         triggerHapticFeedback(.warning)
    |                                `- error: cannot infer contextual base in reference to member 'warning'
330 |     }
331 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:334:36: error: cannot find 'UINotificationFeedbackGenerator' in scope
332 |     @MainActor
333 |     private func triggerHapticFeedback(_ type: UINotificationFeedbackGenerator.FeedbackType) {
334 |         let notificationFeedback = UINotificationFeedbackGenerator()
    |                                    `- error: cannot find 'UINotificationFeedbackGenerator' in scope
335 |         notificationFeedback.notificationOccurred(type)
336 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:610:32: error: cannot infer contextual base in reference to member 'success'
608 |         updateCachedProperties()
609 |         
610 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
611 |     }
612 |     

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:621:32: error: cannot infer contextual base in reference to member 'success'
619 |         updateCachedProperties()
620 |         
621 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
622 |     }
623 |     

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:637:32: error: cannot infer contextual base in reference to member 'success'
635 |         work.userLibraryEntries?.append(entry)
636 |         updateCachedProperties()
637 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
638 |     }
639 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:647:32: error: cannot infer contextual base in reference to member 'success'
645 |         work.userLibraryEntries?.append(entry)
646 |         updateCachedProperties()
647 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
648 |     }
649 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:658:32: error: cannot infer contextual base in reference to member 'warning'
656 | 
657 |         updateCachedProperties()
658 |         triggerHapticFeedback(.warning)
    |                                `- error: cannot infer contextual base in reference to member 'warning'
659 |     }
660 |     

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:663:36: error: cannot find 'UINotificationFeedbackGenerator' in scope
661 |     @MainActor
662 |     private func triggerHapticFeedback(_ type: UINotificationFeedbackGenerator.FeedbackType) {
663 |         let notificationFeedback = UINotificationFeedbackGenerator()
    |                                    `- error: cannot find 'UINotificationFeedbackGenerator' in scope
664 |         notificationFeedback.notificationOccurred(type)
665 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:773:22: error: cannot find 'UIApplication' in scope
771 |         // Listen for memory warnings
772 |         NotificationCenter.default.addObserver(
773 |             forName: UIApplication.didReceiveMemoryWarningNotification,
    |                      `- error: cannot find 'UIApplication' in scope
774 |             object: nil,
775 |             queue: .main

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:891:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
889 |             .padding()
890 |             .navigationTitle("Quick Actions")
891 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
892 |             .toolbar {
893 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:893:41: error: 'navigationBarTrailing' is unavailable in macOS
891 |             .navigationBarTitleDisplayMode(.inline)
892 |             .toolbar {
893 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
894 |                     Button("Done") {
895 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 
[29/65] Compiling BooksTrackerFeature Work.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:35:37: error: 'navigationBarLeading' is unavailable in macOS
 33 |         .navigationBarBackButtonHidden(true)
 34 |         .toolbar {
 35 |             ToolbarItem(placement: .navigationBarLeading) {
    |                                     `- error: 'navigationBarLeading' is unavailable in macOS
 36 |                 Button(action: { dismiss() }) {
 37 |                     Image(systemName: "chevron.left")

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:51:37: error: 'navigationBarTrailing' is unavailable in macOS
 49 |             }
 50 | 
 51 |             ToolbarItem(placement: .navigationBarTrailing) {
    |                                     `- error: 'navigationBarTrailing' is unavailable in macOS
 52 |                 if work.availableEditions.count > 1 {
 53 |                     Button("Editions") {

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:281:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
279 |             }
280 |             .navigationTitle("Choose Edition")
281 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
282 |             .toolbar {
283 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:283:41: error: 'navigationBarTrailing' is unavailable in macOS
281 |             .navigationBarTitleDisplayMode(.inline)
282 |             .toolbar {
283 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
284 |                     Button("Done") {
285 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:328:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
326 |             }
327 |             .navigationTitle("Books by \(author.name)")
328 |             .navigationBarTitleDisplayMode(.large)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
329 |             .toolbar {
330 |                 ToolbarItem(placement: .navigationBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:330:41: error: 'navigationBarLeading' is unavailable in macOS
328 |             .navigationBarTitleDisplayMode(.large)
329 |             .toolbar {
330 |                 ToolbarItem(placement: .navigationBarLeading) {
    |                                         `- error: 'navigationBarLeading' is unavailable in macOS
331 |                     Button("Done") {
332 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDiscoveryView.swift:76:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 74 |             }
 75 |             .navigationTitle("Book Details")
 76 |             .navigationBarTitleDisplayMode(.large)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 77 |             .toolbar {
 78 |                 ToolbarItem(placement: .navigationBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDiscoveryView.swift:78:41: error: 'navigationBarLeading' is unavailable in macOS
 76 |             .navigationBarTitleDisplayMode(.large)
 77 |             .toolbar {
 78 |                 ToolbarItem(placement: .navigationBarLeading) {
    |                                         `- error: 'navigationBarLeading' is unavailable in macOS
 79 |                     Button("Cancel") {
 80 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26AdaptiveBookCard.swift:488:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
486 | 
487 |     private func triggerHapticFeedback() {
488 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
489 |         impactFeedback.impactOccurred()
490 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26AdaptiveBookCard.swift:488:64: error: cannot infer contextual base in reference to member 'medium'
486 | 
487 |     private func triggerHapticFeedback() {
488 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                                                                `- error: cannot infer contextual base in reference to member 'medium'
489 |         impactFeedback.impactOccurred()
490 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26AdaptiveBookCard.swift:503:36: error: cannot find 'UINotificationFeedbackGenerator' in scope
501 |         userEntry.touch()
502 | 
503 |         let notificationFeedback = UINotificationFeedbackGenerator()
    |                                    `- error: cannot find 'UINotificationFeedbackGenerator' in scope
504 |         notificationFeedback.notificationOccurred(.success)
505 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26AdaptiveBookCard.swift:504:52: error: cannot infer contextual base in reference to member 'success'
502 | 
503 |         let notificationFeedback = UINotificationFeedbackGenerator()
504 |         notificationFeedback.notificationOccurred(.success)
    |                                                    `- error: cannot infer contextual base in reference to member 'success'
505 |     }
506 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:333:48: error: cannot find type 'UINotificationFeedbackGenerator' in scope
331 | 
332 |     @MainActor
333 |     private func triggerHapticFeedback(_ type: UINotificationFeedbackGenerator.FeedbackType) {
    |                                                `- error: cannot find type 'UINotificationFeedbackGenerator' in scope
334 |         let notificationFeedback = UINotificationFeedbackGenerator()
335 |         notificationFeedback.notificationOccurred(type)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:662:48: error: cannot find type 'UINotificationFeedbackGenerator' in scope
660 |     
661 |     @MainActor
662 |     private func triggerHapticFeedback(_ type: UINotificationFeedbackGenerator.FeedbackType) {
    |                                                `- error: cannot find type 'UINotificationFeedbackGenerator' in scope
663 |         let notificationFeedback = UINotificationFeedbackGenerator()
664 |         notificationFeedback.notificationOccurred(type)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:284:32: error: cannot infer contextual base in reference to member 'success'
282 | 
283 |         // Haptic feedback
284 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
285 |     }
286 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:295:32: error: cannot infer contextual base in reference to member 'success'
293 | 
294 |         // Haptic feedback
295 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
296 |     }
297 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:310:32: error: cannot infer contextual base in reference to member 'success'
308 |         }
309 |         work.userLibraryEntries?.append(entry)
310 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
311 |     }
312 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:319:32: error: cannot infer contextual base in reference to member 'success'
317 |         }
318 |         work.userLibraryEntries?.append(entry)
319 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
320 |     }
321 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:329:32: error: cannot infer contextual base in reference to member 'warning'
327 |         }
328 | 
329 |         triggerHapticFeedback(.warning)
    |                                `- error: cannot infer contextual base in reference to member 'warning'
330 |     }
331 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:334:36: error: cannot find 'UINotificationFeedbackGenerator' in scope
332 |     @MainActor
333 |     private func triggerHapticFeedback(_ type: UINotificationFeedbackGenerator.FeedbackType) {
334 |         let notificationFeedback = UINotificationFeedbackGenerator()
    |                                    `- error: cannot find 'UINotificationFeedbackGenerator' in scope
335 |         notificationFeedback.notificationOccurred(type)
336 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:610:32: error: cannot infer contextual base in reference to member 'success'
608 |         updateCachedProperties()
609 |         
610 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
611 |     }
612 |     

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:621:32: error: cannot infer contextual base in reference to member 'success'
619 |         updateCachedProperties()
620 |         
621 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
622 |     }
623 |     

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:637:32: error: cannot infer contextual base in reference to member 'success'
635 |         work.userLibraryEntries?.append(entry)
636 |         updateCachedProperties()
637 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
638 |     }
639 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:647:32: error: cannot infer contextual base in reference to member 'success'
645 |         work.userLibraryEntries?.append(entry)
646 |         updateCachedProperties()
647 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
648 |     }
649 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:658:32: error: cannot infer contextual base in reference to member 'warning'
656 | 
657 |         updateCachedProperties()
658 |         triggerHapticFeedback(.warning)
    |                                `- error: cannot infer contextual base in reference to member 'warning'
659 |     }
660 |     

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:663:36: error: cannot find 'UINotificationFeedbackGenerator' in scope
661 |     @MainActor
662 |     private func triggerHapticFeedback(_ type: UINotificationFeedbackGenerator.FeedbackType) {
663 |         let notificationFeedback = UINotificationFeedbackGenerator()
    |                                    `- error: cannot find 'UINotificationFeedbackGenerator' in scope
664 |         notificationFeedback.notificationOccurred(type)
665 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:773:22: error: cannot find 'UIApplication' in scope
771 |         // Listen for memory warnings
772 |         NotificationCenter.default.addObserver(
773 |             forName: UIApplication.didReceiveMemoryWarningNotification,
    |                      `- error: cannot find 'UIApplication' in scope
774 |             object: nil,
775 |             queue: .main

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:891:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
889 |             .padding()
890 |             .navigationTitle("Quick Actions")
891 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
892 |             .toolbar {
893 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:893:41: error: 'navigationBarTrailing' is unavailable in macOS
891 |             .navigationBarTitleDisplayMode(.inline)
892 |             .toolbar {
893 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
894 |                     Button("Done") {
895 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 
[30/65] Compiling BooksTrackerFeature WorkDetailView.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:35:37: error: 'navigationBarLeading' is unavailable in macOS
 33 |         .navigationBarBackButtonHidden(true)
 34 |         .toolbar {
 35 |             ToolbarItem(placement: .navigationBarLeading) {
    |                                     `- error: 'navigationBarLeading' is unavailable in macOS
 36 |                 Button(action: { dismiss() }) {
 37 |                     Image(systemName: "chevron.left")

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:51:37: error: 'navigationBarTrailing' is unavailable in macOS
 49 |             }
 50 | 
 51 |             ToolbarItem(placement: .navigationBarTrailing) {
    |                                     `- error: 'navigationBarTrailing' is unavailable in macOS
 52 |                 if work.availableEditions.count > 1 {
 53 |                     Button("Editions") {

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:281:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
279 |             }
280 |             .navigationTitle("Choose Edition")
281 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
282 |             .toolbar {
283 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:283:41: error: 'navigationBarTrailing' is unavailable in macOS
281 |             .navigationBarTitleDisplayMode(.inline)
282 |             .toolbar {
283 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
284 |                     Button("Done") {
285 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:328:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
326 |             }
327 |             .navigationTitle("Books by \(author.name)")
328 |             .navigationBarTitleDisplayMode(.large)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
329 |             .toolbar {
330 |                 ToolbarItem(placement: .navigationBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:330:41: error: 'navigationBarLeading' is unavailable in macOS
328 |             .navigationBarTitleDisplayMode(.large)
329 |             .toolbar {
330 |                 ToolbarItem(placement: .navigationBarLeading) {
    |                                         `- error: 'navigationBarLeading' is unavailable in macOS
331 |                     Button("Done") {
332 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDiscoveryView.swift:76:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 74 |             }
 75 |             .navigationTitle("Book Details")
 76 |             .navigationBarTitleDisplayMode(.large)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 77 |             .toolbar {
 78 |                 ToolbarItem(placement: .navigationBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDiscoveryView.swift:78:41: error: 'navigationBarLeading' is unavailable in macOS
 76 |             .navigationBarTitleDisplayMode(.large)
 77 |             .toolbar {
 78 |                 ToolbarItem(placement: .navigationBarLeading) {
    |                                         `- error: 'navigationBarLeading' is unavailable in macOS
 79 |                     Button("Cancel") {
 80 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26AdaptiveBookCard.swift:488:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
486 | 
487 |     private func triggerHapticFeedback() {
488 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
489 |         impactFeedback.impactOccurred()
490 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26AdaptiveBookCard.swift:488:64: error: cannot infer contextual base in reference to member 'medium'
486 | 
487 |     private func triggerHapticFeedback() {
488 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                                                                `- error: cannot infer contextual base in reference to member 'medium'
489 |         impactFeedback.impactOccurred()
490 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26AdaptiveBookCard.swift:503:36: error: cannot find 'UINotificationFeedbackGenerator' in scope
501 |         userEntry.touch()
502 | 
503 |         let notificationFeedback = UINotificationFeedbackGenerator()
    |                                    `- error: cannot find 'UINotificationFeedbackGenerator' in scope
504 |         notificationFeedback.notificationOccurred(.success)
505 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26AdaptiveBookCard.swift:504:52: error: cannot infer contextual base in reference to member 'success'
502 | 
503 |         let notificationFeedback = UINotificationFeedbackGenerator()
504 |         notificationFeedback.notificationOccurred(.success)
    |                                                    `- error: cannot infer contextual base in reference to member 'success'
505 |     }
506 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:333:48: error: cannot find type 'UINotificationFeedbackGenerator' in scope
331 | 
332 |     @MainActor
333 |     private func triggerHapticFeedback(_ type: UINotificationFeedbackGenerator.FeedbackType) {
    |                                                `- error: cannot find type 'UINotificationFeedbackGenerator' in scope
334 |         let notificationFeedback = UINotificationFeedbackGenerator()
335 |         notificationFeedback.notificationOccurred(type)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:662:48: error: cannot find type 'UINotificationFeedbackGenerator' in scope
660 |     
661 |     @MainActor
662 |     private func triggerHapticFeedback(_ type: UINotificationFeedbackGenerator.FeedbackType) {
    |                                                `- error: cannot find type 'UINotificationFeedbackGenerator' in scope
663 |         let notificationFeedback = UINotificationFeedbackGenerator()
664 |         notificationFeedback.notificationOccurred(type)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:284:32: error: cannot infer contextual base in reference to member 'success'
282 | 
283 |         // Haptic feedback
284 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
285 |     }
286 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:295:32: error: cannot infer contextual base in reference to member 'success'
293 | 
294 |         // Haptic feedback
295 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
296 |     }
297 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:310:32: error: cannot infer contextual base in reference to member 'success'
308 |         }
309 |         work.userLibraryEntries?.append(entry)
310 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
311 |     }
312 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:319:32: error: cannot infer contextual base in reference to member 'success'
317 |         }
318 |         work.userLibraryEntries?.append(entry)
319 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
320 |     }
321 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:329:32: error: cannot infer contextual base in reference to member 'warning'
327 |         }
328 | 
329 |         triggerHapticFeedback(.warning)
    |                                `- error: cannot infer contextual base in reference to member 'warning'
330 |     }
331 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:334:36: error: cannot find 'UINotificationFeedbackGenerator' in scope
332 |     @MainActor
333 |     private func triggerHapticFeedback(_ type: UINotificationFeedbackGenerator.FeedbackType) {
334 |         let notificationFeedback = UINotificationFeedbackGenerator()
    |                                    `- error: cannot find 'UINotificationFeedbackGenerator' in scope
335 |         notificationFeedback.notificationOccurred(type)
336 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:610:32: error: cannot infer contextual base in reference to member 'success'
608 |         updateCachedProperties()
609 |         
610 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
611 |     }
612 |     

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:621:32: error: cannot infer contextual base in reference to member 'success'
619 |         updateCachedProperties()
620 |         
621 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
622 |     }
623 |     

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:637:32: error: cannot infer contextual base in reference to member 'success'
635 |         work.userLibraryEntries?.append(entry)
636 |         updateCachedProperties()
637 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
638 |     }
639 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:647:32: error: cannot infer contextual base in reference to member 'success'
645 |         work.userLibraryEntries?.append(entry)
646 |         updateCachedProperties()
647 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
648 |     }
649 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:658:32: error: cannot infer contextual base in reference to member 'warning'
656 | 
657 |         updateCachedProperties()
658 |         triggerHapticFeedback(.warning)
    |                                `- error: cannot infer contextual base in reference to member 'warning'
659 |     }
660 |     

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:663:36: error: cannot find 'UINotificationFeedbackGenerator' in scope
661 |     @MainActor
662 |     private func triggerHapticFeedback(_ type: UINotificationFeedbackGenerator.FeedbackType) {
663 |         let notificationFeedback = UINotificationFeedbackGenerator()
    |                                    `- error: cannot find 'UINotificationFeedbackGenerator' in scope
664 |         notificationFeedback.notificationOccurred(type)
665 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:773:22: error: cannot find 'UIApplication' in scope
771 |         // Listen for memory warnings
772 |         NotificationCenter.default.addObserver(
773 |             forName: UIApplication.didReceiveMemoryWarningNotification,
    |                      `- error: cannot find 'UIApplication' in scope
774 |             object: nil,
775 |             queue: .main

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:891:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
889 |             .padding()
890 |             .navigationTitle("Quick Actions")
891 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
892 |             .toolbar {
893 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:893:41: error: 'navigationBarTrailing' is unavailable in macOS
891 |             .navigationBarTitleDisplayMode(.inline)
892 |             .toolbar {
893 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
894 |                     Button("Done") {
895 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 
[31/65] Compiling BooksTrackerFeature WorkDiscoveryView.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:35:37: error: 'navigationBarLeading' is unavailable in macOS
 33 |         .navigationBarBackButtonHidden(true)
 34 |         .toolbar {
 35 |             ToolbarItem(placement: .navigationBarLeading) {
    |                                     `- error: 'navigationBarLeading' is unavailable in macOS
 36 |                 Button(action: { dismiss() }) {
 37 |                     Image(systemName: "chevron.left")

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:51:37: error: 'navigationBarTrailing' is unavailable in macOS
 49 |             }
 50 | 
 51 |             ToolbarItem(placement: .navigationBarTrailing) {
    |                                     `- error: 'navigationBarTrailing' is unavailable in macOS
 52 |                 if work.availableEditions.count > 1 {
 53 |                     Button("Editions") {

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:281:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
279 |             }
280 |             .navigationTitle("Choose Edition")
281 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
282 |             .toolbar {
283 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:283:41: error: 'navigationBarTrailing' is unavailable in macOS
281 |             .navigationBarTitleDisplayMode(.inline)
282 |             .toolbar {
283 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
284 |                     Button("Done") {
285 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:328:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
326 |             }
327 |             .navigationTitle("Books by \(author.name)")
328 |             .navigationBarTitleDisplayMode(.large)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
329 |             .toolbar {
330 |                 ToolbarItem(placement: .navigationBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:330:41: error: 'navigationBarLeading' is unavailable in macOS
328 |             .navigationBarTitleDisplayMode(.large)
329 |             .toolbar {
330 |                 ToolbarItem(placement: .navigationBarLeading) {
    |                                         `- error: 'navigationBarLeading' is unavailable in macOS
331 |                     Button("Done") {
332 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDiscoveryView.swift:76:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 74 |             }
 75 |             .navigationTitle("Book Details")
 76 |             .navigationBarTitleDisplayMode(.large)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 77 |             .toolbar {
 78 |                 ToolbarItem(placement: .navigationBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDiscoveryView.swift:78:41: error: 'navigationBarLeading' is unavailable in macOS
 76 |             .navigationBarTitleDisplayMode(.large)
 77 |             .toolbar {
 78 |                 ToolbarItem(placement: .navigationBarLeading) {
    |                                         `- error: 'navigationBarLeading' is unavailable in macOS
 79 |                     Button("Cancel") {
 80 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26AdaptiveBookCard.swift:488:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
486 | 
487 |     private func triggerHapticFeedback() {
488 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
489 |         impactFeedback.impactOccurred()
490 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26AdaptiveBookCard.swift:488:64: error: cannot infer contextual base in reference to member 'medium'
486 | 
487 |     private func triggerHapticFeedback() {
488 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                                                                `- error: cannot infer contextual base in reference to member 'medium'
489 |         impactFeedback.impactOccurred()
490 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26AdaptiveBookCard.swift:503:36: error: cannot find 'UINotificationFeedbackGenerator' in scope
501 |         userEntry.touch()
502 | 
503 |         let notificationFeedback = UINotificationFeedbackGenerator()
    |                                    `- error: cannot find 'UINotificationFeedbackGenerator' in scope
504 |         notificationFeedback.notificationOccurred(.success)
505 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26AdaptiveBookCard.swift:504:52: error: cannot infer contextual base in reference to member 'success'
502 | 
503 |         let notificationFeedback = UINotificationFeedbackGenerator()
504 |         notificationFeedback.notificationOccurred(.success)
    |                                                    `- error: cannot infer contextual base in reference to member 'success'
505 |     }
506 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:333:48: error: cannot find type 'UINotificationFeedbackGenerator' in scope
331 | 
332 |     @MainActor
333 |     private func triggerHapticFeedback(_ type: UINotificationFeedbackGenerator.FeedbackType) {
    |                                                `- error: cannot find type 'UINotificationFeedbackGenerator' in scope
334 |         let notificationFeedback = UINotificationFeedbackGenerator()
335 |         notificationFeedback.notificationOccurred(type)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:662:48: error: cannot find type 'UINotificationFeedbackGenerator' in scope
660 |     
661 |     @MainActor
662 |     private func triggerHapticFeedback(_ type: UINotificationFeedbackGenerator.FeedbackType) {
    |                                                `- error: cannot find type 'UINotificationFeedbackGenerator' in scope
663 |         let notificationFeedback = UINotificationFeedbackGenerator()
664 |         notificationFeedback.notificationOccurred(type)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:284:32: error: cannot infer contextual base in reference to member 'success'
282 | 
283 |         // Haptic feedback
284 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
285 |     }
286 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:295:32: error: cannot infer contextual base in reference to member 'success'
293 | 
294 |         // Haptic feedback
295 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
296 |     }
297 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:310:32: error: cannot infer contextual base in reference to member 'success'
308 |         }
309 |         work.userLibraryEntries?.append(entry)
310 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
311 |     }
312 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:319:32: error: cannot infer contextual base in reference to member 'success'
317 |         }
318 |         work.userLibraryEntries?.append(entry)
319 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
320 |     }
321 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:329:32: error: cannot infer contextual base in reference to member 'warning'
327 |         }
328 | 
329 |         triggerHapticFeedback(.warning)
    |                                `- error: cannot infer contextual base in reference to member 'warning'
330 |     }
331 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:334:36: error: cannot find 'UINotificationFeedbackGenerator' in scope
332 |     @MainActor
333 |     private func triggerHapticFeedback(_ type: UINotificationFeedbackGenerator.FeedbackType) {
334 |         let notificationFeedback = UINotificationFeedbackGenerator()
    |                                    `- error: cannot find 'UINotificationFeedbackGenerator' in scope
335 |         notificationFeedback.notificationOccurred(type)
336 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:610:32: error: cannot infer contextual base in reference to member 'success'
608 |         updateCachedProperties()
609 |         
610 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
611 |     }
612 |     

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:621:32: error: cannot infer contextual base in reference to member 'success'
619 |         updateCachedProperties()
620 |         
621 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
622 |     }
623 |     

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:637:32: error: cannot infer contextual base in reference to member 'success'
635 |         work.userLibraryEntries?.append(entry)
636 |         updateCachedProperties()
637 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
638 |     }
639 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:647:32: error: cannot infer contextual base in reference to member 'success'
645 |         work.userLibraryEntries?.append(entry)
646 |         updateCachedProperties()
647 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
648 |     }
649 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:658:32: error: cannot infer contextual base in reference to member 'warning'
656 | 
657 |         updateCachedProperties()
658 |         triggerHapticFeedback(.warning)
    |                                `- error: cannot infer contextual base in reference to member 'warning'
659 |     }
660 |     

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:663:36: error: cannot find 'UINotificationFeedbackGenerator' in scope
661 |     @MainActor
662 |     private func triggerHapticFeedback(_ type: UINotificationFeedbackGenerator.FeedbackType) {
663 |         let notificationFeedback = UINotificationFeedbackGenerator()
    |                                    `- error: cannot find 'UINotificationFeedbackGenerator' in scope
664 |         notificationFeedback.notificationOccurred(type)
665 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:773:22: error: cannot find 'UIApplication' in scope
771 |         // Listen for memory warnings
772 |         NotificationCenter.default.addObserver(
773 |             forName: UIApplication.didReceiveMemoryWarningNotification,
    |                      `- error: cannot find 'UIApplication' in scope
774 |             object: nil,
775 |             queue: .main

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:891:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
889 |             .padding()
890 |             .navigationTitle("Quick Actions")
891 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
892 |             .toolbar {
893 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:893:41: error: 'navigationBarTrailing' is unavailable in macOS
891 |             .navigationBarTitleDisplayMode(.inline)
892 |             .toolbar {
893 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
894 |                     Button("Done") {
895 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 
[32/65] Compiling BooksTrackerFeature iOS26AdaptiveBookCard.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:35:37: error: 'navigationBarLeading' is unavailable in macOS
 33 |         .navigationBarBackButtonHidden(true)
 34 |         .toolbar {
 35 |             ToolbarItem(placement: .navigationBarLeading) {
    |                                     `- error: 'navigationBarLeading' is unavailable in macOS
 36 |                 Button(action: { dismiss() }) {
 37 |                     Image(systemName: "chevron.left")

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:51:37: error: 'navigationBarTrailing' is unavailable in macOS
 49 |             }
 50 | 
 51 |             ToolbarItem(placement: .navigationBarTrailing) {
    |                                     `- error: 'navigationBarTrailing' is unavailable in macOS
 52 |                 if work.availableEditions.count > 1 {
 53 |                     Button("Editions") {

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:281:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
279 |             }
280 |             .navigationTitle("Choose Edition")
281 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
282 |             .toolbar {
283 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:283:41: error: 'navigationBarTrailing' is unavailable in macOS
281 |             .navigationBarTitleDisplayMode(.inline)
282 |             .toolbar {
283 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
284 |                     Button("Done") {
285 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:328:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
326 |             }
327 |             .navigationTitle("Books by \(author.name)")
328 |             .navigationBarTitleDisplayMode(.large)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
329 |             .toolbar {
330 |                 ToolbarItem(placement: .navigationBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:330:41: error: 'navigationBarLeading' is unavailable in macOS
328 |             .navigationBarTitleDisplayMode(.large)
329 |             .toolbar {
330 |                 ToolbarItem(placement: .navigationBarLeading) {
    |                                         `- error: 'navigationBarLeading' is unavailable in macOS
331 |                     Button("Done") {
332 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDiscoveryView.swift:76:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 74 |             }
 75 |             .navigationTitle("Book Details")
 76 |             .navigationBarTitleDisplayMode(.large)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 77 |             .toolbar {
 78 |                 ToolbarItem(placement: .navigationBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDiscoveryView.swift:78:41: error: 'navigationBarLeading' is unavailable in macOS
 76 |             .navigationBarTitleDisplayMode(.large)
 77 |             .toolbar {
 78 |                 ToolbarItem(placement: .navigationBarLeading) {
    |                                         `- error: 'navigationBarLeading' is unavailable in macOS
 79 |                     Button("Cancel") {
 80 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26AdaptiveBookCard.swift:488:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
486 | 
487 |     private func triggerHapticFeedback() {
488 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
489 |         impactFeedback.impactOccurred()
490 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26AdaptiveBookCard.swift:488:64: error: cannot infer contextual base in reference to member 'medium'
486 | 
487 |     private func triggerHapticFeedback() {
488 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                                                                `- error: cannot infer contextual base in reference to member 'medium'
489 |         impactFeedback.impactOccurred()
490 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26AdaptiveBookCard.swift:503:36: error: cannot find 'UINotificationFeedbackGenerator' in scope
501 |         userEntry.touch()
502 | 
503 |         let notificationFeedback = UINotificationFeedbackGenerator()
    |                                    `- error: cannot find 'UINotificationFeedbackGenerator' in scope
504 |         notificationFeedback.notificationOccurred(.success)
505 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26AdaptiveBookCard.swift:504:52: error: cannot infer contextual base in reference to member 'success'
502 | 
503 |         let notificationFeedback = UINotificationFeedbackGenerator()
504 |         notificationFeedback.notificationOccurred(.success)
    |                                                    `- error: cannot infer contextual base in reference to member 'success'
505 |     }
506 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:333:48: error: cannot find type 'UINotificationFeedbackGenerator' in scope
331 | 
332 |     @MainActor
333 |     private func triggerHapticFeedback(_ type: UINotificationFeedbackGenerator.FeedbackType) {
    |                                                `- error: cannot find type 'UINotificationFeedbackGenerator' in scope
334 |         let notificationFeedback = UINotificationFeedbackGenerator()
335 |         notificationFeedback.notificationOccurred(type)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:662:48: error: cannot find type 'UINotificationFeedbackGenerator' in scope
660 |     
661 |     @MainActor
662 |     private func triggerHapticFeedback(_ type: UINotificationFeedbackGenerator.FeedbackType) {
    |                                                `- error: cannot find type 'UINotificationFeedbackGenerator' in scope
663 |         let notificationFeedback = UINotificationFeedbackGenerator()
664 |         notificationFeedback.notificationOccurred(type)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:284:32: error: cannot infer contextual base in reference to member 'success'
282 | 
283 |         // Haptic feedback
284 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
285 |     }
286 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:295:32: error: cannot infer contextual base in reference to member 'success'
293 | 
294 |         // Haptic feedback
295 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
296 |     }
297 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:310:32: error: cannot infer contextual base in reference to member 'success'
308 |         }
309 |         work.userLibraryEntries?.append(entry)
310 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
311 |     }
312 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:319:32: error: cannot infer contextual base in reference to member 'success'
317 |         }
318 |         work.userLibraryEntries?.append(entry)
319 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
320 |     }
321 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:329:32: error: cannot infer contextual base in reference to member 'warning'
327 |         }
328 | 
329 |         triggerHapticFeedback(.warning)
    |                                `- error: cannot infer contextual base in reference to member 'warning'
330 |     }
331 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:334:36: error: cannot find 'UINotificationFeedbackGenerator' in scope
332 |     @MainActor
333 |     private func triggerHapticFeedback(_ type: UINotificationFeedbackGenerator.FeedbackType) {
334 |         let notificationFeedback = UINotificationFeedbackGenerator()
    |                                    `- error: cannot find 'UINotificationFeedbackGenerator' in scope
335 |         notificationFeedback.notificationOccurred(type)
336 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:610:32: error: cannot infer contextual base in reference to member 'success'
608 |         updateCachedProperties()
609 |         
610 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
611 |     }
612 |     

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:621:32: error: cannot infer contextual base in reference to member 'success'
619 |         updateCachedProperties()
620 |         
621 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
622 |     }
623 |     

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:637:32: error: cannot infer contextual base in reference to member 'success'
635 |         work.userLibraryEntries?.append(entry)
636 |         updateCachedProperties()
637 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
638 |     }
639 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:647:32: error: cannot infer contextual base in reference to member 'success'
645 |         work.userLibraryEntries?.append(entry)
646 |         updateCachedProperties()
647 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
648 |     }
649 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:658:32: error: cannot infer contextual base in reference to member 'warning'
656 | 
657 |         updateCachedProperties()
658 |         triggerHapticFeedback(.warning)
    |                                `- error: cannot infer contextual base in reference to member 'warning'
659 |     }
660 |     

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:663:36: error: cannot find 'UINotificationFeedbackGenerator' in scope
661 |     @MainActor
662 |     private func triggerHapticFeedback(_ type: UINotificationFeedbackGenerator.FeedbackType) {
663 |         let notificationFeedback = UINotificationFeedbackGenerator()
    |                                    `- error: cannot find 'UINotificationFeedbackGenerator' in scope
664 |         notificationFeedback.notificationOccurred(type)
665 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:773:22: error: cannot find 'UIApplication' in scope
771 |         // Listen for memory warnings
772 |         NotificationCenter.default.addObserver(
773 |             forName: UIApplication.didReceiveMemoryWarningNotification,
    |                      `- error: cannot find 'UIApplication' in scope
774 |             object: nil,
775 |             queue: .main

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:891:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
889 |             .padding()
890 |             .navigationTitle("Quick Actions")
891 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
892 |             .toolbar {
893 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:893:41: error: 'navigationBarTrailing' is unavailable in macOS
891 |             .navigationBarTitleDisplayMode(.inline)
892 |             .toolbar {
893 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
894 |                     Button("Done") {
895 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 
[33/65] Compiling BooksTrackerFeature iOS26FloatingBookCard.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:35:37: error: 'navigationBarLeading' is unavailable in macOS
 33 |         .navigationBarBackButtonHidden(true)
 34 |         .toolbar {
 35 |             ToolbarItem(placement: .navigationBarLeading) {
    |                                     `- error: 'navigationBarLeading' is unavailable in macOS
 36 |                 Button(action: { dismiss() }) {
 37 |                     Image(systemName: "chevron.left")

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:51:37: error: 'navigationBarTrailing' is unavailable in macOS
 49 |             }
 50 | 
 51 |             ToolbarItem(placement: .navigationBarTrailing) {
    |                                     `- error: 'navigationBarTrailing' is unavailable in macOS
 52 |                 if work.availableEditions.count > 1 {
 53 |                     Button("Editions") {

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:281:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
279 |             }
280 |             .navigationTitle("Choose Edition")
281 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
282 |             .toolbar {
283 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:283:41: error: 'navigationBarTrailing' is unavailable in macOS
281 |             .navigationBarTitleDisplayMode(.inline)
282 |             .toolbar {
283 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
284 |                     Button("Done") {
285 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:328:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
326 |             }
327 |             .navigationTitle("Books by \(author.name)")
328 |             .navigationBarTitleDisplayMode(.large)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
329 |             .toolbar {
330 |                 ToolbarItem(placement: .navigationBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDetailView.swift:330:41: error: 'navigationBarLeading' is unavailable in macOS
328 |             .navigationBarTitleDisplayMode(.large)
329 |             .toolbar {
330 |                 ToolbarItem(placement: .navigationBarLeading) {
    |                                         `- error: 'navigationBarLeading' is unavailable in macOS
331 |                     Button("Done") {
332 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDiscoveryView.swift:76:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 74 |             }
 75 |             .navigationTitle("Book Details")
 76 |             .navigationBarTitleDisplayMode(.large)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 77 |             .toolbar {
 78 |                 ToolbarItem(placement: .navigationBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/WorkDiscoveryView.swift:78:41: error: 'navigationBarLeading' is unavailable in macOS
 76 |             .navigationBarTitleDisplayMode(.large)
 77 |             .toolbar {
 78 |                 ToolbarItem(placement: .navigationBarLeading) {
    |                                         `- error: 'navigationBarLeading' is unavailable in macOS
 79 |                     Button("Cancel") {
 80 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26AdaptiveBookCard.swift:488:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
486 | 
487 |     private func triggerHapticFeedback() {
488 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
489 |         impactFeedback.impactOccurred()
490 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26AdaptiveBookCard.swift:488:64: error: cannot infer contextual base in reference to member 'medium'
486 | 
487 |     private func triggerHapticFeedback() {
488 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                                                                `- error: cannot infer contextual base in reference to member 'medium'
489 |         impactFeedback.impactOccurred()
490 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26AdaptiveBookCard.swift:503:36: error: cannot find 'UINotificationFeedbackGenerator' in scope
501 |         userEntry.touch()
502 | 
503 |         let notificationFeedback = UINotificationFeedbackGenerator()
    |                                    `- error: cannot find 'UINotificationFeedbackGenerator' in scope
504 |         notificationFeedback.notificationOccurred(.success)
505 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26AdaptiveBookCard.swift:504:52: error: cannot infer contextual base in reference to member 'success'
502 | 
503 |         let notificationFeedback = UINotificationFeedbackGenerator()
504 |         notificationFeedback.notificationOccurred(.success)
    |                                                    `- error: cannot infer contextual base in reference to member 'success'
505 |     }
506 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:333:48: error: cannot find type 'UINotificationFeedbackGenerator' in scope
331 | 
332 |     @MainActor
333 |     private func triggerHapticFeedback(_ type: UINotificationFeedbackGenerator.FeedbackType) {
    |                                                `- error: cannot find type 'UINotificationFeedbackGenerator' in scope
334 |         let notificationFeedback = UINotificationFeedbackGenerator()
335 |         notificationFeedback.notificationOccurred(type)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:662:48: error: cannot find type 'UINotificationFeedbackGenerator' in scope
660 |     
661 |     @MainActor
662 |     private func triggerHapticFeedback(_ type: UINotificationFeedbackGenerator.FeedbackType) {
    |                                                `- error: cannot find type 'UINotificationFeedbackGenerator' in scope
663 |         let notificationFeedback = UINotificationFeedbackGenerator()
664 |         notificationFeedback.notificationOccurred(type)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:284:32: error: cannot infer contextual base in reference to member 'success'
282 | 
283 |         // Haptic feedback
284 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
285 |     }
286 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:295:32: error: cannot infer contextual base in reference to member 'success'
293 | 
294 |         // Haptic feedback
295 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
296 |     }
297 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:310:32: error: cannot infer contextual base in reference to member 'success'
308 |         }
309 |         work.userLibraryEntries?.append(entry)
310 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
311 |     }
312 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:319:32: error: cannot infer contextual base in reference to member 'success'
317 |         }
318 |         work.userLibraryEntries?.append(entry)
319 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
320 |     }
321 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:329:32: error: cannot infer contextual base in reference to member 'warning'
327 |         }
328 | 
329 |         triggerHapticFeedback(.warning)
    |                                `- error: cannot infer contextual base in reference to member 'warning'
330 |     }
331 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:334:36: error: cannot find 'UINotificationFeedbackGenerator' in scope
332 |     @MainActor
333 |     private func triggerHapticFeedback(_ type: UINotificationFeedbackGenerator.FeedbackType) {
334 |         let notificationFeedback = UINotificationFeedbackGenerator()
    |                                    `- error: cannot find 'UINotificationFeedbackGenerator' in scope
335 |         notificationFeedback.notificationOccurred(type)
336 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:610:32: error: cannot infer contextual base in reference to member 'success'
608 |         updateCachedProperties()
609 |         
610 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
611 |     }
612 |     

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:621:32: error: cannot infer contextual base in reference to member 'success'
619 |         updateCachedProperties()
620 |         
621 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
622 |     }
623 |     

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:637:32: error: cannot infer contextual base in reference to member 'success'
635 |         work.userLibraryEntries?.append(entry)
636 |         updateCachedProperties()
637 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
638 |     }
639 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:647:32: error: cannot infer contextual base in reference to member 'success'
645 |         work.userLibraryEntries?.append(entry)
646 |         updateCachedProperties()
647 |         triggerHapticFeedback(.success)
    |                                `- error: cannot infer contextual base in reference to member 'success'
648 |     }
649 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:658:32: error: cannot infer contextual base in reference to member 'warning'
656 | 
657 |         updateCachedProperties()
658 |         triggerHapticFeedback(.warning)
    |                                `- error: cannot infer contextual base in reference to member 'warning'
659 |     }
660 |     

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:663:36: error: cannot find 'UINotificationFeedbackGenerator' in scope
661 |     @MainActor
662 |     private func triggerHapticFeedback(_ type: UINotificationFeedbackGenerator.FeedbackType) {
663 |         let notificationFeedback = UINotificationFeedbackGenerator()
    |                                    `- error: cannot find 'UINotificationFeedbackGenerator' in scope
664 |         notificationFeedback.notificationOccurred(type)
665 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:773:22: error: cannot find 'UIApplication' in scope
771 |         // Listen for memory warnings
772 |         NotificationCenter.default.addObserver(
773 |             forName: UIApplication.didReceiveMemoryWarningNotification,
    |                      `- error: cannot find 'UIApplication' in scope
774 |             object: nil,
775 |             queue: .main

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:891:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
889 |             .padding()
890 |             .navigationTitle("Quick Actions")
891 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
892 |             .toolbar {
893 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26FloatingBookCard.swift:893:41: error: 'navigationBarTrailing' is unavailable in macOS
891 |             .navigationBarTitleDisplayMode(.inline)
892 |             .toolbar {
893 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
894 |                     Button("Done") {
895 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 
[34/65] Compiling BooksTrackerFeature BookshelfCameraSessionManager.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraSessionManager.swift:129:19: error: 'isLivePhotoCaptureSupported' is unavailable in macOS
127 | 
128 |         // Disable Live Photo (we only need still images)
129 |         if output.isLivePhotoCaptureSupported {
    |                   `- error: 'isLivePhotoCaptureSupported' is unavailable in macOS
130 |             output.isLivePhotoCaptureEnabled = false
131 |         }

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCapturePhotoOutput.h:577:73: note: 'isLivePhotoCaptureSupported' has been explicitly marked unavailable here
 575 |     Live Photo capture is only supported for certain AVCaptureSession sessionPresets and AVCaptureDevice activeFormats. When switching cameras or formats this property may change. When this property changes from YES to NO, livePhotoCaptureEnabled also reverts to NO. If you've previously opted in for Live Photo capture and then change configurations, you may need to set livePhotoCaptureEnabled = YES again. 
 576 |  */
 577 | @property(nonatomic, readonly, getter=isLivePhotoCaptureSupported) BOOL livePhotoCaptureSupported API_UNAVAILABLE(macos);
     |                                                                         `- note: 'isLivePhotoCaptureSupported' has been explicitly marked unavailable here
 578 | 
 579 | /*!

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraSessionManager.swift:130:20: error: 'isLivePhotoCaptureEnabled' is unavailable in macOS
128 |         // Disable Live Photo (we only need still images)
129 |         if output.isLivePhotoCaptureSupported {
130 |             output.isLivePhotoCaptureEnabled = false
    |                    `- error: 'isLivePhotoCaptureEnabled' is unavailable in macOS
131 |         }
132 | 

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCapturePhotoOutput.h:587:61: note: 'isLivePhotoCaptureEnabled' has been explicitly marked unavailable here
 585 |     Default value is NO. This property may only be set to YES if livePhotoCaptureSupported is YES. Live Photo capture requires a lengthy reconfiguration of the capture render pipeline, so if you intend to do any Live Photo captures at all, you should set livePhotoCaptureEnabled to YES before calling -[AVCaptureSession startRunning].
 586 |  */
 587 | @property(nonatomic, getter=isLivePhotoCaptureEnabled) BOOL livePhotoCaptureEnabled API_UNAVAILABLE(macos);
     |                                                             `- note: 'isLivePhotoCaptureEnabled' has been explicitly marked unavailable here
 588 | 
 589 | /*!

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:25:29: error: cannot find type 'UIImage' in scope
 23 |     // MARK: - Callbacks
 24 | 
 25 |     let onCaptureComplete: (UIImage) -> Void
    |                             `- error: cannot find type 'UIImage' in scope
 26 | 
 27 |     // MARK: - Initialization

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:29:47: error: cannot find type 'UIImage' in scope
 27 |     // MARK: - Initialization
 28 | 
 29 |     public init(onCaptureComplete: @escaping (UIImage) -> Void) {
    |                                               `- error: cannot find type 'UIImage' in scope
 30 |         self.onCaptureComplete = onCaptureComplete
 31 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:308:16: error: cannot find type 'UIImage' in scope
306 |     // MARK: - Properties
307 | 
308 |     let image: UIImage
    |                `- error: cannot find type 'UIImage' in scope
309 |     let onUsePhoto: (UIImage) -> Void
310 |     let onRetake: () -> Void

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:309:22: error: cannot find type 'UIImage' in scope
307 | 
308 |     let image: UIImage
309 |     let onUsePhoto: (UIImage) -> Void
    |                      `- error: cannot find type 'UIImage' in scope
310 |     let onRetake: () -> Void
311 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:30:24: error: cannot find type 'UIImage' in scope
 28 | 
 29 |     var cameraState: CameraState = .idle
 30 |     var capturedImage: UIImage?
    |                        `- error: cannot find type 'UIImage' in scope
 31 |     var showReviewSheet = false
 32 |     var flashMode: AVCaptureDevice.FlashMode = .auto

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:55:28: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfCameraViewModel>'
 53 |         }
 54 |         .sheet(isPresented: $viewModel.showReviewSheet) {
 55 |             if let image = viewModel.capturedImage {
    |                            `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfCameraViewModel>'
 56 |                 PhotoReviewView(
 57 |                     image: image,

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:87:21: error: no exact matches in call to initializer 
 85 |         }
 86 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
 87 |         .background(Color(uiColor: .systemBackground))
    |                     |- error: no exact matches in call to initializer 
    |                     |- note: candidate has partially matching parameter list (importing: URL, contentType: UTType?)
    |                     `- note: candidate has partially matching parameter list (importing: Data, contentType: UTType?)
 88 |     }
 89 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:87:37: error: cannot infer contextual base in reference to member 'systemBackground'
 85 |         }
 86 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
 87 |         .background(Color(uiColor: .systemBackground))
    |                                     `- error: cannot infer contextual base in reference to member 'systemBackground'
 88 |     }
 89 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:125:21: error: no exact matches in call to initializer 
123 |         .padding()
124 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
125 |         .background(Color(uiColor: .systemBackground))
    |                     |- error: no exact matches in call to initializer 
    |                     |- note: candidate has partially matching parameter list (importing: URL, contentType: UTType?)
    |                     `- note: candidate has partially matching parameter list (importing: Data, contentType: UTType?)
126 |     }
127 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:125:37: error: cannot infer contextual base in reference to member 'systemBackground'
123 |         .padding()
124 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
125 |         .background(Color(uiColor: .systemBackground))
    |                                     `- error: cannot infer contextual base in reference to member 'systemBackground'
126 |     }
127 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:135:17: error: cannot find 'BookshelfCameraPreview' in scope
133 |             ZStack {
134 |                 // Camera preview (full screen)
135 |                 BookshelfCameraPreview(cameraManager: manager)
    |                 `- error: cannot find 'BookshelfCameraPreview' in scope
136 |                     .ignoresSafeArea()
137 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:270:21: error: no exact matches in call to initializer 
268 |         .padding()
269 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
270 |         .background(Color(uiColor: .systemBackground))
    |                     |- error: no exact matches in call to initializer 
    |                     |- note: candidate has partially matching parameter list (importing: URL, contentType: UTType?)
    |                     `- note: candidate has partially matching parameter list (importing: Data, contentType: UTType?)
271 |     }
272 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:270:37: error: cannot infer contextual base in reference to member 'systemBackground'
268 |         .padding()
269 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
270 |         .background(Color(uiColor: .systemBackground))
    |                                     `- error: cannot infer contextual base in reference to member 'systemBackground'
271 |     }
272 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:321:18: error: extraneous argument label 'uiImage:' in call
319 |         ZStack {
320 |             // Full screen captured image
321 |             Image(uiImage: image)
    |                  `- error: extraneous argument label 'uiImage:' in call
322 |                 .resizable()
323 |                 .aspectRatio(contentMode: .fit)

macro expansion @ObservationTracked:1:50: error: cannot find type 'UIImage' in scope
`- /Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:30:32: note: expanded code originates here
 28 | 
 29 |     var cameraState: CameraState = .idle
 30 |     var capturedImage: UIImage?
    +--- macro expansion @ObservationTracked ---------------------------
    |1 | @ObservationIgnored private  var _capturedImage: UIImage?
    |  |                                                  `- error: cannot find type 'UIImage' in scope
    +-------------------------------------------------------------------
 31 |     var showReviewSheet = false
 32 |     var flashMode: AVCaptureDevice.FlashMode = .auto

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:100:31: error: cannot find 'UIImage' in scope
 98 |             // ✅ CRITICAL: Create non-Sendable UIImage on MainActor
 99 |             // This ensures UIImage never crosses actor boundaries
100 |             guard let image = UIImage(data: imageData) else {
    |                               `- error: cannot find 'UIImage' in scope
101 |                 cameraState = .error("Failed to create image from data")
102 |                 return

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:157:37: error: cannot find 'UIApplication' in scope
155 |     /// Open iOS Settings app to camera permissions.
156 |     func openSettings() {
157 |         guard let url = URL(string: UIApplication.openSettingsURLString) else { return }
    |                                     `- error: cannot find 'UIApplication' in scope
158 |         UIApplication.shared.open(url)
159 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:158:9: error: cannot find 'UIApplication' in scope
156 |     func openSettings() {
157 |         guard let url = URL(string: UIApplication.openSettingsURLString) else { return }
158 |         UIApplication.shared.open(url)
    |         `- error: cannot find 'UIApplication' in scope
159 |     }
160 | }
[35/65] Compiling BooksTrackerFeature BookshelfCameraView.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraSessionManager.swift:129:19: error: 'isLivePhotoCaptureSupported' is unavailable in macOS
127 | 
128 |         // Disable Live Photo (we only need still images)
129 |         if output.isLivePhotoCaptureSupported {
    |                   `- error: 'isLivePhotoCaptureSupported' is unavailable in macOS
130 |             output.isLivePhotoCaptureEnabled = false
131 |         }

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCapturePhotoOutput.h:577:73: note: 'isLivePhotoCaptureSupported' has been explicitly marked unavailable here
 575 |     Live Photo capture is only supported for certain AVCaptureSession sessionPresets and AVCaptureDevice activeFormats. When switching cameras or formats this property may change. When this property changes from YES to NO, livePhotoCaptureEnabled also reverts to NO. If you've previously opted in for Live Photo capture and then change configurations, you may need to set livePhotoCaptureEnabled = YES again. 
 576 |  */
 577 | @property(nonatomic, readonly, getter=isLivePhotoCaptureSupported) BOOL livePhotoCaptureSupported API_UNAVAILABLE(macos);
     |                                                                         `- note: 'isLivePhotoCaptureSupported' has been explicitly marked unavailable here
 578 | 
 579 | /*!

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraSessionManager.swift:130:20: error: 'isLivePhotoCaptureEnabled' is unavailable in macOS
128 |         // Disable Live Photo (we only need still images)
129 |         if output.isLivePhotoCaptureSupported {
130 |             output.isLivePhotoCaptureEnabled = false
    |                    `- error: 'isLivePhotoCaptureEnabled' is unavailable in macOS
131 |         }
132 | 

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCapturePhotoOutput.h:587:61: note: 'isLivePhotoCaptureEnabled' has been explicitly marked unavailable here
 585 |     Default value is NO. This property may only be set to YES if livePhotoCaptureSupported is YES. Live Photo capture requires a lengthy reconfiguration of the capture render pipeline, so if you intend to do any Live Photo captures at all, you should set livePhotoCaptureEnabled to YES before calling -[AVCaptureSession startRunning].
 586 |  */
 587 | @property(nonatomic, getter=isLivePhotoCaptureEnabled) BOOL livePhotoCaptureEnabled API_UNAVAILABLE(macos);
     |                                                             `- note: 'isLivePhotoCaptureEnabled' has been explicitly marked unavailable here
 588 | 
 589 | /*!

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:25:29: error: cannot find type 'UIImage' in scope
 23 |     // MARK: - Callbacks
 24 | 
 25 |     let onCaptureComplete: (UIImage) -> Void
    |                             `- error: cannot find type 'UIImage' in scope
 26 | 
 27 |     // MARK: - Initialization

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:29:47: error: cannot find type 'UIImage' in scope
 27 |     // MARK: - Initialization
 28 | 
 29 |     public init(onCaptureComplete: @escaping (UIImage) -> Void) {
    |                                               `- error: cannot find type 'UIImage' in scope
 30 |         self.onCaptureComplete = onCaptureComplete
 31 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:308:16: error: cannot find type 'UIImage' in scope
306 |     // MARK: - Properties
307 | 
308 |     let image: UIImage
    |                `- error: cannot find type 'UIImage' in scope
309 |     let onUsePhoto: (UIImage) -> Void
310 |     let onRetake: () -> Void

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:309:22: error: cannot find type 'UIImage' in scope
307 | 
308 |     let image: UIImage
309 |     let onUsePhoto: (UIImage) -> Void
    |                      `- error: cannot find type 'UIImage' in scope
310 |     let onRetake: () -> Void
311 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:30:24: error: cannot find type 'UIImage' in scope
 28 | 
 29 |     var cameraState: CameraState = .idle
 30 |     var capturedImage: UIImage?
    |                        `- error: cannot find type 'UIImage' in scope
 31 |     var showReviewSheet = false
 32 |     var flashMode: AVCaptureDevice.FlashMode = .auto

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:55:28: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfCameraViewModel>'
 53 |         }
 54 |         .sheet(isPresented: $viewModel.showReviewSheet) {
 55 |             if let image = viewModel.capturedImage {
    |                            `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfCameraViewModel>'
 56 |                 PhotoReviewView(
 57 |                     image: image,

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:87:21: error: no exact matches in call to initializer 
 85 |         }
 86 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
 87 |         .background(Color(uiColor: .systemBackground))
    |                     |- error: no exact matches in call to initializer 
    |                     |- note: candidate has partially matching parameter list (importing: URL, contentType: UTType?)
    |                     `- note: candidate has partially matching parameter list (importing: Data, contentType: UTType?)
 88 |     }
 89 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:87:37: error: cannot infer contextual base in reference to member 'systemBackground'
 85 |         }
 86 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
 87 |         .background(Color(uiColor: .systemBackground))
    |                                     `- error: cannot infer contextual base in reference to member 'systemBackground'
 88 |     }
 89 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:125:21: error: no exact matches in call to initializer 
123 |         .padding()
124 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
125 |         .background(Color(uiColor: .systemBackground))
    |                     |- error: no exact matches in call to initializer 
    |                     |- note: candidate has partially matching parameter list (importing: URL, contentType: UTType?)
    |                     `- note: candidate has partially matching parameter list (importing: Data, contentType: UTType?)
126 |     }
127 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:125:37: error: cannot infer contextual base in reference to member 'systemBackground'
123 |         .padding()
124 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
125 |         .background(Color(uiColor: .systemBackground))
    |                                     `- error: cannot infer contextual base in reference to member 'systemBackground'
126 |     }
127 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:135:17: error: cannot find 'BookshelfCameraPreview' in scope
133 |             ZStack {
134 |                 // Camera preview (full screen)
135 |                 BookshelfCameraPreview(cameraManager: manager)
    |                 `- error: cannot find 'BookshelfCameraPreview' in scope
136 |                     .ignoresSafeArea()
137 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:270:21: error: no exact matches in call to initializer 
268 |         .padding()
269 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
270 |         .background(Color(uiColor: .systemBackground))
    |                     |- error: no exact matches in call to initializer 
    |                     |- note: candidate has partially matching parameter list (importing: URL, contentType: UTType?)
    |                     `- note: candidate has partially matching parameter list (importing: Data, contentType: UTType?)
271 |     }
272 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:270:37: error: cannot infer contextual base in reference to member 'systemBackground'
268 |         .padding()
269 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
270 |         .background(Color(uiColor: .systemBackground))
    |                                     `- error: cannot infer contextual base in reference to member 'systemBackground'
271 |     }
272 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:321:18: error: extraneous argument label 'uiImage:' in call
319 |         ZStack {
320 |             // Full screen captured image
321 |             Image(uiImage: image)
    |                  `- error: extraneous argument label 'uiImage:' in call
322 |                 .resizable()
323 |                 .aspectRatio(contentMode: .fit)

macro expansion @ObservationTracked:1:50: error: cannot find type 'UIImage' in scope
`- /Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:30:32: note: expanded code originates here
 28 | 
 29 |     var cameraState: CameraState = .idle
 30 |     var capturedImage: UIImage?
    +--- macro expansion @ObservationTracked ---------------------------
    |1 | @ObservationIgnored private  var _capturedImage: UIImage?
    |  |                                                  `- error: cannot find type 'UIImage' in scope
    +-------------------------------------------------------------------
 31 |     var showReviewSheet = false
 32 |     var flashMode: AVCaptureDevice.FlashMode = .auto

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:100:31: error: cannot find 'UIImage' in scope
 98 |             // ✅ CRITICAL: Create non-Sendable UIImage on MainActor
 99 |             // This ensures UIImage never crosses actor boundaries
100 |             guard let image = UIImage(data: imageData) else {
    |                               `- error: cannot find 'UIImage' in scope
101 |                 cameraState = .error("Failed to create image from data")
102 |                 return

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:157:37: error: cannot find 'UIApplication' in scope
155 |     /// Open iOS Settings app to camera permissions.
156 |     func openSettings() {
157 |         guard let url = URL(string: UIApplication.openSettingsURLString) else { return }
    |                                     `- error: cannot find 'UIApplication' in scope
158 |         UIApplication.shared.open(url)
159 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:158:9: error: cannot find 'UIApplication' in scope
156 |     func openSettings() {
157 |         guard let url = URL(string: UIApplication.openSettingsURLString) else { return }
158 |         UIApplication.shared.open(url)
    |         `- error: cannot find 'UIApplication' in scope
159 |     }
160 | }
[36/65] Compiling BooksTrackerFeature BookshelfCameraViewModel.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraSessionManager.swift:129:19: error: 'isLivePhotoCaptureSupported' is unavailable in macOS
127 | 
128 |         // Disable Live Photo (we only need still images)
129 |         if output.isLivePhotoCaptureSupported {
    |                   `- error: 'isLivePhotoCaptureSupported' is unavailable in macOS
130 |             output.isLivePhotoCaptureEnabled = false
131 |         }

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCapturePhotoOutput.h:577:73: note: 'isLivePhotoCaptureSupported' has been explicitly marked unavailable here
 575 |     Live Photo capture is only supported for certain AVCaptureSession sessionPresets and AVCaptureDevice activeFormats. When switching cameras or formats this property may change. When this property changes from YES to NO, livePhotoCaptureEnabled also reverts to NO. If you've previously opted in for Live Photo capture and then change configurations, you may need to set livePhotoCaptureEnabled = YES again. 
 576 |  */
 577 | @property(nonatomic, readonly, getter=isLivePhotoCaptureSupported) BOOL livePhotoCaptureSupported API_UNAVAILABLE(macos);
     |                                                                         `- note: 'isLivePhotoCaptureSupported' has been explicitly marked unavailable here
 578 | 
 579 | /*!

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraSessionManager.swift:130:20: error: 'isLivePhotoCaptureEnabled' is unavailable in macOS
128 |         // Disable Live Photo (we only need still images)
129 |         if output.isLivePhotoCaptureSupported {
130 |             output.isLivePhotoCaptureEnabled = false
    |                    `- error: 'isLivePhotoCaptureEnabled' is unavailable in macOS
131 |         }
132 | 

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCapturePhotoOutput.h:587:61: note: 'isLivePhotoCaptureEnabled' has been explicitly marked unavailable here
 585 |     Default value is NO. This property may only be set to YES if livePhotoCaptureSupported is YES. Live Photo capture requires a lengthy reconfiguration of the capture render pipeline, so if you intend to do any Live Photo captures at all, you should set livePhotoCaptureEnabled to YES before calling -[AVCaptureSession startRunning].
 586 |  */
 587 | @property(nonatomic, getter=isLivePhotoCaptureEnabled) BOOL livePhotoCaptureEnabled API_UNAVAILABLE(macos);
     |                                                             `- note: 'isLivePhotoCaptureEnabled' has been explicitly marked unavailable here
 588 | 
 589 | /*!

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:25:29: error: cannot find type 'UIImage' in scope
 23 |     // MARK: - Callbacks
 24 | 
 25 |     let onCaptureComplete: (UIImage) -> Void
    |                             `- error: cannot find type 'UIImage' in scope
 26 | 
 27 |     // MARK: - Initialization

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:29:47: error: cannot find type 'UIImage' in scope
 27 |     // MARK: - Initialization
 28 | 
 29 |     public init(onCaptureComplete: @escaping (UIImage) -> Void) {
    |                                               `- error: cannot find type 'UIImage' in scope
 30 |         self.onCaptureComplete = onCaptureComplete
 31 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:308:16: error: cannot find type 'UIImage' in scope
306 |     // MARK: - Properties
307 | 
308 |     let image: UIImage
    |                `- error: cannot find type 'UIImage' in scope
309 |     let onUsePhoto: (UIImage) -> Void
310 |     let onRetake: () -> Void

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:309:22: error: cannot find type 'UIImage' in scope
307 | 
308 |     let image: UIImage
309 |     let onUsePhoto: (UIImage) -> Void
    |                      `- error: cannot find type 'UIImage' in scope
310 |     let onRetake: () -> Void
311 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:30:24: error: cannot find type 'UIImage' in scope
 28 | 
 29 |     var cameraState: CameraState = .idle
 30 |     var capturedImage: UIImage?
    |                        `- error: cannot find type 'UIImage' in scope
 31 |     var showReviewSheet = false
 32 |     var flashMode: AVCaptureDevice.FlashMode = .auto

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:55:28: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfCameraViewModel>'
 53 |         }
 54 |         .sheet(isPresented: $viewModel.showReviewSheet) {
 55 |             if let image = viewModel.capturedImage {
    |                            `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfCameraViewModel>'
 56 |                 PhotoReviewView(
 57 |                     image: image,

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:87:21: error: no exact matches in call to initializer 
 85 |         }
 86 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
 87 |         .background(Color(uiColor: .systemBackground))
    |                     |- error: no exact matches in call to initializer 
    |                     |- note: candidate has partially matching parameter list (importing: URL, contentType: UTType?)
    |                     `- note: candidate has partially matching parameter list (importing: Data, contentType: UTType?)
 88 |     }
 89 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:87:37: error: cannot infer contextual base in reference to member 'systemBackground'
 85 |         }
 86 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
 87 |         .background(Color(uiColor: .systemBackground))
    |                                     `- error: cannot infer contextual base in reference to member 'systemBackground'
 88 |     }
 89 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:125:21: error: no exact matches in call to initializer 
123 |         .padding()
124 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
125 |         .background(Color(uiColor: .systemBackground))
    |                     |- error: no exact matches in call to initializer 
    |                     |- note: candidate has partially matching parameter list (importing: URL, contentType: UTType?)
    |                     `- note: candidate has partially matching parameter list (importing: Data, contentType: UTType?)
126 |     }
127 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:125:37: error: cannot infer contextual base in reference to member 'systemBackground'
123 |         .padding()
124 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
125 |         .background(Color(uiColor: .systemBackground))
    |                                     `- error: cannot infer contextual base in reference to member 'systemBackground'
126 |     }
127 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:135:17: error: cannot find 'BookshelfCameraPreview' in scope
133 |             ZStack {
134 |                 // Camera preview (full screen)
135 |                 BookshelfCameraPreview(cameraManager: manager)
    |                 `- error: cannot find 'BookshelfCameraPreview' in scope
136 |                     .ignoresSafeArea()
137 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:270:21: error: no exact matches in call to initializer 
268 |         .padding()
269 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
270 |         .background(Color(uiColor: .systemBackground))
    |                     |- error: no exact matches in call to initializer 
    |                     |- note: candidate has partially matching parameter list (importing: URL, contentType: UTType?)
    |                     `- note: candidate has partially matching parameter list (importing: Data, contentType: UTType?)
271 |     }
272 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:270:37: error: cannot infer contextual base in reference to member 'systemBackground'
268 |         .padding()
269 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
270 |         .background(Color(uiColor: .systemBackground))
    |                                     `- error: cannot infer contextual base in reference to member 'systemBackground'
271 |     }
272 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:321:18: error: extraneous argument label 'uiImage:' in call
319 |         ZStack {
320 |             // Full screen captured image
321 |             Image(uiImage: image)
    |                  `- error: extraneous argument label 'uiImage:' in call
322 |                 .resizable()
323 |                 .aspectRatio(contentMode: .fit)

macro expansion @ObservationTracked:1:50: error: cannot find type 'UIImage' in scope
`- /Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:30:32: note: expanded code originates here
 28 | 
 29 |     var cameraState: CameraState = .idle
 30 |     var capturedImage: UIImage?
    +--- macro expansion @ObservationTracked ---------------------------
    |1 | @ObservationIgnored private  var _capturedImage: UIImage?
    |  |                                                  `- error: cannot find type 'UIImage' in scope
    +-------------------------------------------------------------------
 31 |     var showReviewSheet = false
 32 |     var flashMode: AVCaptureDevice.FlashMode = .auto

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:100:31: error: cannot find 'UIImage' in scope
 98 |             // ✅ CRITICAL: Create non-Sendable UIImage on MainActor
 99 |             // This ensures UIImage never crosses actor boundaries
100 |             guard let image = UIImage(data: imageData) else {
    |                               `- error: cannot find 'UIImage' in scope
101 |                 cameraState = .error("Failed to create image from data")
102 |                 return

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:157:37: error: cannot find 'UIApplication' in scope
155 |     /// Open iOS Settings app to camera permissions.
156 |     func openSettings() {
157 |         guard let url = URL(string: UIApplication.openSettingsURLString) else { return }
    |                                     `- error: cannot find 'UIApplication' in scope
158 |         UIApplication.shared.open(url)
159 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:158:9: error: cannot find 'UIApplication' in scope
156 |     func openSettings() {
157 |         guard let url = URL(string: UIApplication.openSettingsURLString) else { return }
158 |         UIApplication.shared.open(url)
    |         `- error: cannot find 'UIApplication' in scope
159 |     }
160 | }
[37/65] Compiling BooksTrackerFeature DetectedBook.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraSessionManager.swift:129:19: error: 'isLivePhotoCaptureSupported' is unavailable in macOS
127 | 
128 |         // Disable Live Photo (we only need still images)
129 |         if output.isLivePhotoCaptureSupported {
    |                   `- error: 'isLivePhotoCaptureSupported' is unavailable in macOS
130 |             output.isLivePhotoCaptureEnabled = false
131 |         }

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCapturePhotoOutput.h:577:73: note: 'isLivePhotoCaptureSupported' has been explicitly marked unavailable here
 575 |     Live Photo capture is only supported for certain AVCaptureSession sessionPresets and AVCaptureDevice activeFormats. When switching cameras or formats this property may change. When this property changes from YES to NO, livePhotoCaptureEnabled also reverts to NO. If you've previously opted in for Live Photo capture and then change configurations, you may need to set livePhotoCaptureEnabled = YES again. 
 576 |  */
 577 | @property(nonatomic, readonly, getter=isLivePhotoCaptureSupported) BOOL livePhotoCaptureSupported API_UNAVAILABLE(macos);
     |                                                                         `- note: 'isLivePhotoCaptureSupported' has been explicitly marked unavailable here
 578 | 
 579 | /*!

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraSessionManager.swift:130:20: error: 'isLivePhotoCaptureEnabled' is unavailable in macOS
128 |         // Disable Live Photo (we only need still images)
129 |         if output.isLivePhotoCaptureSupported {
130 |             output.isLivePhotoCaptureEnabled = false
    |                    `- error: 'isLivePhotoCaptureEnabled' is unavailable in macOS
131 |         }
132 | 

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCapturePhotoOutput.h:587:61: note: 'isLivePhotoCaptureEnabled' has been explicitly marked unavailable here
 585 |     Default value is NO. This property may only be set to YES if livePhotoCaptureSupported is YES. Live Photo capture requires a lengthy reconfiguration of the capture render pipeline, so if you intend to do any Live Photo captures at all, you should set livePhotoCaptureEnabled to YES before calling -[AVCaptureSession startRunning].
 586 |  */
 587 | @property(nonatomic, getter=isLivePhotoCaptureEnabled) BOOL livePhotoCaptureEnabled API_UNAVAILABLE(macos);
     |                                                             `- note: 'isLivePhotoCaptureEnabled' has been explicitly marked unavailable here
 588 | 
 589 | /*!

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:25:29: error: cannot find type 'UIImage' in scope
 23 |     // MARK: - Callbacks
 24 | 
 25 |     let onCaptureComplete: (UIImage) -> Void
    |                             `- error: cannot find type 'UIImage' in scope
 26 | 
 27 |     // MARK: - Initialization

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:29:47: error: cannot find type 'UIImage' in scope
 27 |     // MARK: - Initialization
 28 | 
 29 |     public init(onCaptureComplete: @escaping (UIImage) -> Void) {
    |                                               `- error: cannot find type 'UIImage' in scope
 30 |         self.onCaptureComplete = onCaptureComplete
 31 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:308:16: error: cannot find type 'UIImage' in scope
306 |     // MARK: - Properties
307 | 
308 |     let image: UIImage
    |                `- error: cannot find type 'UIImage' in scope
309 |     let onUsePhoto: (UIImage) -> Void
310 |     let onRetake: () -> Void

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:309:22: error: cannot find type 'UIImage' in scope
307 | 
308 |     let image: UIImage
309 |     let onUsePhoto: (UIImage) -> Void
    |                      `- error: cannot find type 'UIImage' in scope
310 |     let onRetake: () -> Void
311 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:30:24: error: cannot find type 'UIImage' in scope
 28 | 
 29 |     var cameraState: CameraState = .idle
 30 |     var capturedImage: UIImage?
    |                        `- error: cannot find type 'UIImage' in scope
 31 |     var showReviewSheet = false
 32 |     var flashMode: AVCaptureDevice.FlashMode = .auto

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:55:28: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfCameraViewModel>'
 53 |         }
 54 |         .sheet(isPresented: $viewModel.showReviewSheet) {
 55 |             if let image = viewModel.capturedImage {
    |                            `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfCameraViewModel>'
 56 |                 PhotoReviewView(
 57 |                     image: image,

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:87:21: error: no exact matches in call to initializer 
 85 |         }
 86 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
 87 |         .background(Color(uiColor: .systemBackground))
    |                     |- error: no exact matches in call to initializer 
    |                     |- note: candidate has partially matching parameter list (importing: URL, contentType: UTType?)
    |                     `- note: candidate has partially matching parameter list (importing: Data, contentType: UTType?)
 88 |     }
 89 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:87:37: error: cannot infer contextual base in reference to member 'systemBackground'
 85 |         }
 86 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
 87 |         .background(Color(uiColor: .systemBackground))
    |                                     `- error: cannot infer contextual base in reference to member 'systemBackground'
 88 |     }
 89 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:125:21: error: no exact matches in call to initializer 
123 |         .padding()
124 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
125 |         .background(Color(uiColor: .systemBackground))
    |                     |- error: no exact matches in call to initializer 
    |                     |- note: candidate has partially matching parameter list (importing: URL, contentType: UTType?)
    |                     `- note: candidate has partially matching parameter list (importing: Data, contentType: UTType?)
126 |     }
127 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:125:37: error: cannot infer contextual base in reference to member 'systemBackground'
123 |         .padding()
124 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
125 |         .background(Color(uiColor: .systemBackground))
    |                                     `- error: cannot infer contextual base in reference to member 'systemBackground'
126 |     }
127 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:135:17: error: cannot find 'BookshelfCameraPreview' in scope
133 |             ZStack {
134 |                 // Camera preview (full screen)
135 |                 BookshelfCameraPreview(cameraManager: manager)
    |                 `- error: cannot find 'BookshelfCameraPreview' in scope
136 |                     .ignoresSafeArea()
137 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:270:21: error: no exact matches in call to initializer 
268 |         .padding()
269 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
270 |         .background(Color(uiColor: .systemBackground))
    |                     |- error: no exact matches in call to initializer 
    |                     |- note: candidate has partially matching parameter list (importing: URL, contentType: UTType?)
    |                     `- note: candidate has partially matching parameter list (importing: Data, contentType: UTType?)
271 |     }
272 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:270:37: error: cannot infer contextual base in reference to member 'systemBackground'
268 |         .padding()
269 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
270 |         .background(Color(uiColor: .systemBackground))
    |                                     `- error: cannot infer contextual base in reference to member 'systemBackground'
271 |     }
272 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:321:18: error: extraneous argument label 'uiImage:' in call
319 |         ZStack {
320 |             // Full screen captured image
321 |             Image(uiImage: image)
    |                  `- error: extraneous argument label 'uiImage:' in call
322 |                 .resizable()
323 |                 .aspectRatio(contentMode: .fit)

macro expansion @ObservationTracked:1:50: error: cannot find type 'UIImage' in scope
`- /Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:30:32: note: expanded code originates here
 28 | 
 29 |     var cameraState: CameraState = .idle
 30 |     var capturedImage: UIImage?
    +--- macro expansion @ObservationTracked ---------------------------
    |1 | @ObservationIgnored private  var _capturedImage: UIImage?
    |  |                                                  `- error: cannot find type 'UIImage' in scope
    +-------------------------------------------------------------------
 31 |     var showReviewSheet = false
 32 |     var flashMode: AVCaptureDevice.FlashMode = .auto

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:100:31: error: cannot find 'UIImage' in scope
 98 |             // ✅ CRITICAL: Create non-Sendable UIImage on MainActor
 99 |             // This ensures UIImage never crosses actor boundaries
100 |             guard let image = UIImage(data: imageData) else {
    |                               `- error: cannot find 'UIImage' in scope
101 |                 cameraState = .error("Failed to create image from data")
102 |                 return

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:157:37: error: cannot find 'UIApplication' in scope
155 |     /// Open iOS Settings app to camera permissions.
156 |     func openSettings() {
157 |         guard let url = URL(string: UIApplication.openSettingsURLString) else { return }
    |                                     `- error: cannot find 'UIApplication' in scope
158 |         UIApplication.shared.open(url)
159 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:158:9: error: cannot find 'UIApplication' in scope
156 |     func openSettings() {
157 |         guard let url = URL(string: UIApplication.openSettingsURLString) else { return }
158 |         UIApplication.shared.open(url)
    |         `- error: cannot find 'UIApplication' in scope
159 |     }
160 | }
[38/65] Compiling BooksTrackerFeature ScanResultsView.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraSessionManager.swift:129:19: error: 'isLivePhotoCaptureSupported' is unavailable in macOS
127 | 
128 |         // Disable Live Photo (we only need still images)
129 |         if output.isLivePhotoCaptureSupported {
    |                   `- error: 'isLivePhotoCaptureSupported' is unavailable in macOS
130 |             output.isLivePhotoCaptureEnabled = false
131 |         }

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCapturePhotoOutput.h:577:73: note: 'isLivePhotoCaptureSupported' has been explicitly marked unavailable here
 575 |     Live Photo capture is only supported for certain AVCaptureSession sessionPresets and AVCaptureDevice activeFormats. When switching cameras or formats this property may change. When this property changes from YES to NO, livePhotoCaptureEnabled also reverts to NO. If you've previously opted in for Live Photo capture and then change configurations, you may need to set livePhotoCaptureEnabled = YES again. 
 576 |  */
 577 | @property(nonatomic, readonly, getter=isLivePhotoCaptureSupported) BOOL livePhotoCaptureSupported API_UNAVAILABLE(macos);
     |                                                                         `- note: 'isLivePhotoCaptureSupported' has been explicitly marked unavailable here
 578 | 
 579 | /*!

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraSessionManager.swift:130:20: error: 'isLivePhotoCaptureEnabled' is unavailable in macOS
128 |         // Disable Live Photo (we only need still images)
129 |         if output.isLivePhotoCaptureSupported {
130 |             output.isLivePhotoCaptureEnabled = false
    |                    `- error: 'isLivePhotoCaptureEnabled' is unavailable in macOS
131 |         }
132 | 

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCapturePhotoOutput.h:587:61: note: 'isLivePhotoCaptureEnabled' has been explicitly marked unavailable here
 585 |     Default value is NO. This property may only be set to YES if livePhotoCaptureSupported is YES. Live Photo capture requires a lengthy reconfiguration of the capture render pipeline, so if you intend to do any Live Photo captures at all, you should set livePhotoCaptureEnabled to YES before calling -[AVCaptureSession startRunning].
 586 |  */
 587 | @property(nonatomic, getter=isLivePhotoCaptureEnabled) BOOL livePhotoCaptureEnabled API_UNAVAILABLE(macos);
     |                                                             `- note: 'isLivePhotoCaptureEnabled' has been explicitly marked unavailable here
 588 | 
 589 | /*!

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:25:29: error: cannot find type 'UIImage' in scope
 23 |     // MARK: - Callbacks
 24 | 
 25 |     let onCaptureComplete: (UIImage) -> Void
    |                             `- error: cannot find type 'UIImage' in scope
 26 | 
 27 |     // MARK: - Initialization

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:29:47: error: cannot find type 'UIImage' in scope
 27 |     // MARK: - Initialization
 28 | 
 29 |     public init(onCaptureComplete: @escaping (UIImage) -> Void) {
    |                                               `- error: cannot find type 'UIImage' in scope
 30 |         self.onCaptureComplete = onCaptureComplete
 31 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:308:16: error: cannot find type 'UIImage' in scope
306 |     // MARK: - Properties
307 | 
308 |     let image: UIImage
    |                `- error: cannot find type 'UIImage' in scope
309 |     let onUsePhoto: (UIImage) -> Void
310 |     let onRetake: () -> Void

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:309:22: error: cannot find type 'UIImage' in scope
307 | 
308 |     let image: UIImage
309 |     let onUsePhoto: (UIImage) -> Void
    |                      `- error: cannot find type 'UIImage' in scope
310 |     let onRetake: () -> Void
311 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:30:24: error: cannot find type 'UIImage' in scope
 28 | 
 29 |     var cameraState: CameraState = .idle
 30 |     var capturedImage: UIImage?
    |                        `- error: cannot find type 'UIImage' in scope
 31 |     var showReviewSheet = false
 32 |     var flashMode: AVCaptureDevice.FlashMode = .auto

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:55:28: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfCameraViewModel>'
 53 |         }
 54 |         .sheet(isPresented: $viewModel.showReviewSheet) {
 55 |             if let image = viewModel.capturedImage {
    |                            `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfCameraViewModel>'
 56 |                 PhotoReviewView(
 57 |                     image: image,

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:87:21: error: no exact matches in call to initializer 
 85 |         }
 86 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
 87 |         .background(Color(uiColor: .systemBackground))
    |                     |- error: no exact matches in call to initializer 
    |                     |- note: candidate has partially matching parameter list (importing: URL, contentType: UTType?)
    |                     `- note: candidate has partially matching parameter list (importing: Data, contentType: UTType?)
 88 |     }
 89 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:87:37: error: cannot infer contextual base in reference to member 'systemBackground'
 85 |         }
 86 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
 87 |         .background(Color(uiColor: .systemBackground))
    |                                     `- error: cannot infer contextual base in reference to member 'systemBackground'
 88 |     }
 89 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:125:21: error: no exact matches in call to initializer 
123 |         .padding()
124 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
125 |         .background(Color(uiColor: .systemBackground))
    |                     |- error: no exact matches in call to initializer 
    |                     |- note: candidate has partially matching parameter list (importing: URL, contentType: UTType?)
    |                     `- note: candidate has partially matching parameter list (importing: Data, contentType: UTType?)
126 |     }
127 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:125:37: error: cannot infer contextual base in reference to member 'systemBackground'
123 |         .padding()
124 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
125 |         .background(Color(uiColor: .systemBackground))
    |                                     `- error: cannot infer contextual base in reference to member 'systemBackground'
126 |     }
127 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:135:17: error: cannot find 'BookshelfCameraPreview' in scope
133 |             ZStack {
134 |                 // Camera preview (full screen)
135 |                 BookshelfCameraPreview(cameraManager: manager)
    |                 `- error: cannot find 'BookshelfCameraPreview' in scope
136 |                     .ignoresSafeArea()
137 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:270:21: error: no exact matches in call to initializer 
268 |         .padding()
269 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
270 |         .background(Color(uiColor: .systemBackground))
    |                     |- error: no exact matches in call to initializer 
    |                     |- note: candidate has partially matching parameter list (importing: URL, contentType: UTType?)
    |                     `- note: candidate has partially matching parameter list (importing: Data, contentType: UTType?)
271 |     }
272 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:270:37: error: cannot infer contextual base in reference to member 'systemBackground'
268 |         .padding()
269 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
270 |         .background(Color(uiColor: .systemBackground))
    |                                     `- error: cannot infer contextual base in reference to member 'systemBackground'
271 |     }
272 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:321:18: error: extraneous argument label 'uiImage:' in call
319 |         ZStack {
320 |             // Full screen captured image
321 |             Image(uiImage: image)
    |                  `- error: extraneous argument label 'uiImage:' in call
322 |                 .resizable()
323 |                 .aspectRatio(contentMode: .fit)

macro expansion @ObservationTracked:1:50: error: cannot find type 'UIImage' in scope
`- /Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:30:32: note: expanded code originates here
 28 | 
 29 |     var cameraState: CameraState = .idle
 30 |     var capturedImage: UIImage?
    +--- macro expansion @ObservationTracked ---------------------------
    |1 | @ObservationIgnored private  var _capturedImage: UIImage?
    |  |                                                  `- error: cannot find type 'UIImage' in scope
    +-------------------------------------------------------------------
 31 |     var showReviewSheet = false
 32 |     var flashMode: AVCaptureDevice.FlashMode = .auto

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:100:31: error: cannot find 'UIImage' in scope
 98 |             // ✅ CRITICAL: Create non-Sendable UIImage on MainActor
 99 |             // This ensures UIImage never crosses actor boundaries
100 |             guard let image = UIImage(data: imageData) else {
    |                               `- error: cannot find 'UIImage' in scope
101 |                 cameraState = .error("Failed to create image from data")
102 |                 return

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:157:37: error: cannot find 'UIApplication' in scope
155 |     /// Open iOS Settings app to camera permissions.
156 |     func openSettings() {
157 |         guard let url = URL(string: UIApplication.openSettingsURLString) else { return }
    |                                     `- error: cannot find 'UIApplication' in scope
158 |         UIApplication.shared.open(url)
159 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:158:9: error: cannot find 'UIApplication' in scope
156 |     func openSettings() {
157 |         guard let url = URL(string: UIApplication.openSettingsURLString) else { return }
158 |         UIApplication.shared.open(url)
    |         `- error: cannot find 'UIApplication' in scope
159 |     }
160 | }
[39/65] Compiling BooksTrackerFeature BookshelfAIService.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraSessionManager.swift:129:19: error: 'isLivePhotoCaptureSupported' is unavailable in macOS
127 | 
128 |         // Disable Live Photo (we only need still images)
129 |         if output.isLivePhotoCaptureSupported {
    |                   `- error: 'isLivePhotoCaptureSupported' is unavailable in macOS
130 |             output.isLivePhotoCaptureEnabled = false
131 |         }

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCapturePhotoOutput.h:577:73: note: 'isLivePhotoCaptureSupported' has been explicitly marked unavailable here
 575 |     Live Photo capture is only supported for certain AVCaptureSession sessionPresets and AVCaptureDevice activeFormats. When switching cameras or formats this property may change. When this property changes from YES to NO, livePhotoCaptureEnabled also reverts to NO. If you've previously opted in for Live Photo capture and then change configurations, you may need to set livePhotoCaptureEnabled = YES again. 
 576 |  */
 577 | @property(nonatomic, readonly, getter=isLivePhotoCaptureSupported) BOOL livePhotoCaptureSupported API_UNAVAILABLE(macos);
     |                                                                         `- note: 'isLivePhotoCaptureSupported' has been explicitly marked unavailable here
 578 | 
 579 | /*!

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraSessionManager.swift:130:20: error: 'isLivePhotoCaptureEnabled' is unavailable in macOS
128 |         // Disable Live Photo (we only need still images)
129 |         if output.isLivePhotoCaptureSupported {
130 |             output.isLivePhotoCaptureEnabled = false
    |                    `- error: 'isLivePhotoCaptureEnabled' is unavailable in macOS
131 |         }
132 | 

/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX26.1.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVCapturePhotoOutput.h:587:61: note: 'isLivePhotoCaptureEnabled' has been explicitly marked unavailable here
 585 |     Default value is NO. This property may only be set to YES if livePhotoCaptureSupported is YES. Live Photo capture requires a lengthy reconfiguration of the capture render pipeline, so if you intend to do any Live Photo captures at all, you should set livePhotoCaptureEnabled to YES before calling -[AVCaptureSession startRunning].
 586 |  */
 587 | @property(nonatomic, getter=isLivePhotoCaptureEnabled) BOOL livePhotoCaptureEnabled API_UNAVAILABLE(macos);
     |                                                             `- note: 'isLivePhotoCaptureEnabled' has been explicitly marked unavailable here
 588 | 
 589 | /*!

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:25:29: error: cannot find type 'UIImage' in scope
 23 |     // MARK: - Callbacks
 24 | 
 25 |     let onCaptureComplete: (UIImage) -> Void
    |                             `- error: cannot find type 'UIImage' in scope
 26 | 
 27 |     // MARK: - Initialization

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:29:47: error: cannot find type 'UIImage' in scope
 27 |     // MARK: - Initialization
 28 | 
 29 |     public init(onCaptureComplete: @escaping (UIImage) -> Void) {
    |                                               `- error: cannot find type 'UIImage' in scope
 30 |         self.onCaptureComplete = onCaptureComplete
 31 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:308:16: error: cannot find type 'UIImage' in scope
306 |     // MARK: - Properties
307 | 
308 |     let image: UIImage
    |                `- error: cannot find type 'UIImage' in scope
309 |     let onUsePhoto: (UIImage) -> Void
310 |     let onRetake: () -> Void

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:309:22: error: cannot find type 'UIImage' in scope
307 | 
308 |     let image: UIImage
309 |     let onUsePhoto: (UIImage) -> Void
    |                      `- error: cannot find type 'UIImage' in scope
310 |     let onRetake: () -> Void
311 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:30:24: error: cannot find type 'UIImage' in scope
 28 | 
 29 |     var cameraState: CameraState = .idle
 30 |     var capturedImage: UIImage?
    |                        `- error: cannot find type 'UIImage' in scope
 31 |     var showReviewSheet = false
 32 |     var flashMode: AVCaptureDevice.FlashMode = .auto

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:55:28: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfCameraViewModel>'
 53 |         }
 54 |         .sheet(isPresented: $viewModel.showReviewSheet) {
 55 |             if let image = viewModel.capturedImage {
    |                            `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfCameraViewModel>'
 56 |                 PhotoReviewView(
 57 |                     image: image,

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:87:21: error: no exact matches in call to initializer 
 85 |         }
 86 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
 87 |         .background(Color(uiColor: .systemBackground))
    |                     |- error: no exact matches in call to initializer 
    |                     |- note: candidate has partially matching parameter list (importing: URL, contentType: UTType?)
    |                     `- note: candidate has partially matching parameter list (importing: Data, contentType: UTType?)
 88 |     }
 89 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:87:37: error: cannot infer contextual base in reference to member 'systemBackground'
 85 |         }
 86 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
 87 |         .background(Color(uiColor: .systemBackground))
    |                                     `- error: cannot infer contextual base in reference to member 'systemBackground'
 88 |     }
 89 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:125:21: error: no exact matches in call to initializer 
123 |         .padding()
124 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
125 |         .background(Color(uiColor: .systemBackground))
    |                     |- error: no exact matches in call to initializer 
    |                     |- note: candidate has partially matching parameter list (importing: URL, contentType: UTType?)
    |                     `- note: candidate has partially matching parameter list (importing: Data, contentType: UTType?)
126 |     }
127 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:125:37: error: cannot infer contextual base in reference to member 'systemBackground'
123 |         .padding()
124 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
125 |         .background(Color(uiColor: .systemBackground))
    |                                     `- error: cannot infer contextual base in reference to member 'systemBackground'
126 |     }
127 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:135:17: error: cannot find 'BookshelfCameraPreview' in scope
133 |             ZStack {
134 |                 // Camera preview (full screen)
135 |                 BookshelfCameraPreview(cameraManager: manager)
    |                 `- error: cannot find 'BookshelfCameraPreview' in scope
136 |                     .ignoresSafeArea()
137 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:270:21: error: no exact matches in call to initializer 
268 |         .padding()
269 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
270 |         .background(Color(uiColor: .systemBackground))
    |                     |- error: no exact matches in call to initializer 
    |                     |- note: candidate has partially matching parameter list (importing: URL, contentType: UTType?)
    |                     `- note: candidate has partially matching parameter list (importing: Data, contentType: UTType?)
271 |     }
272 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:270:37: error: cannot infer contextual base in reference to member 'systemBackground'
268 |         .padding()
269 |         .frame(maxWidth: .infinity, maxHeight: .infinity)
270 |         .background(Color(uiColor: .systemBackground))
    |                                     `- error: cannot infer contextual base in reference to member 'systemBackground'
271 |     }
272 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:321:18: error: extraneous argument label 'uiImage:' in call
319 |         ZStack {
320 |             // Full screen captured image
321 |             Image(uiImage: image)
    |                  `- error: extraneous argument label 'uiImage:' in call
322 |                 .resizable()
323 |                 .aspectRatio(contentMode: .fit)

macro expansion @ObservationTracked:1:50: error: cannot find type 'UIImage' in scope
`- /Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:30:32: note: expanded code originates here
 28 | 
 29 |     var cameraState: CameraState = .idle
 30 |     var capturedImage: UIImage?
    +--- macro expansion @ObservationTracked ---------------------------
    |1 | @ObservationIgnored private  var _capturedImage: UIImage?
    |  |                                                  `- error: cannot find type 'UIImage' in scope
    +-------------------------------------------------------------------
 31 |     var showReviewSheet = false
 32 |     var flashMode: AVCaptureDevice.FlashMode = .auto

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:100:31: error: cannot find 'UIImage' in scope
 98 |             // ✅ CRITICAL: Create non-Sendable UIImage on MainActor
 99 |             // This ensures UIImage never crosses actor boundaries
100 |             guard let image = UIImage(data: imageData) else {
    |                               `- error: cannot find 'UIImage' in scope
101 |                 cameraState = .error("Failed to create image from data")
102 |                 return

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:157:37: error: cannot find 'UIApplication' in scope
155 |     /// Open iOS Settings app to camera permissions.
156 |     func openSettings() {
157 |         guard let url = URL(string: UIApplication.openSettingsURLString) else { return }
    |                                     `- error: cannot find 'UIApplication' in scope
158 |         UIApplication.shared.open(url)
159 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraViewModel.swift:158:9: error: cannot find 'UIApplication' in scope
156 |     func openSettings() {
157 |         guard let url = URL(string: UIApplication.openSettingsURLString) else { return }
158 |         UIApplication.shared.open(url)
    |         `- error: cannot find 'UIApplication' in scope
159 |     }
160 | }
[40/65] Compiling BooksTrackerFeature CSVImportSupportingViews.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/CSVImportSupportingViews.swift:19:22: error: conformance of 'BounceSymbolEffect' to 'IndefiniteSymbolEffect' is only available in macOS 15.0 or newer
  4 | // MARK: - Import Results View
  5 | 
  6 | struct ImportResultsView: View {
    |        `- note: add '@available' attribute to enclosing struct
  7 |     let result: CSVImportService.ImportResult
  8 |     let themeStore: iOS26ThemeStore
    :
 10 |     @State private var showingErrorDetails = false
 11 | 
 12 |     var body: some View {
    |         `- note: add '@available' attribute to enclosing property
 13 |         ScrollView {
 14 |             VStack(spacing: 32) {
    :
 17 |                     .font(.system(size: 80))
 18 |                     .foregroundStyle(Color.green.gradient)
 19 |                     .symbolEffect(.bounce)
    |                      |- error: conformance of 'BounceSymbolEffect' to 'IndefiniteSymbolEffect' is only available in macOS 15.0 or newer
    |                      `- note: add 'if #available' version check
 20 | 
 21 |                 // Summary

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/CSVImportSupportingViews.swift:421:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
419 |             }
420 |             .navigationTitle("Import Preview")
421 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
422 |             .toolbar {
423 |                 ToolbarItem(placement: .confirmationAction) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/CSVImportSupportingViews.swift:566:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
564 |             }
565 |             .navigationTitle("Import Errors")
566 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
567 |             .toolbar {
568 |                 ToolbarItem(placement: .confirmationAction) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:12:44: error: 'ActivityAttributes' is unavailable in macOS
 10 | /// Displays on Lock Screen and Dynamic Island during long imports
 11 | @available(iOS 16.2, *)
 12 | public struct CSVImportActivityAttributes: ActivityAttributes, Sendable {
    |                                            `- error: 'ActivityAttributes' is unavailable in macOS
 13 | 
 14 |     // MARK: - Static Content

ActivityKit.ActivityAttributes:6:17: note: 'ActivityAttributes' has been explicitly marked unavailable here
4 | @available(tvOS, unavailable)
5 | @available(watchOS, unavailable)
6 | public protocol ActivityAttributes : Decodable, Encodable {
  |                 `- note: 'ActivityAttributes' has been explicitly marked unavailable here
7 |     associatedtype ContentState : Decodable, Encodable, Hashable
8 | }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:176:34: error: 'Activity' is unavailable in macOS
174 |     // MARK: - Properties
175 | 
176 |     private var currentActivity: Activity<CSVImportActivityAttributes>?
    |                                  `- error: 'Activity' is unavailable in macOS
177 |     private let updateThrottle: TimeInterval = 1.0 // Update every 1 second minimum
178 |     private var lastUpdateTime: Date?

ActivityKit.Activity:6:14: note: 'Activity' has been explicitly marked unavailable here
  4 | @available(tvOS, unavailable)
  5 | @available(watchOS, unavailable)
  6 | public class Activity<Attributes> : Identifiable where Attributes : ActivityAttributes {
    |              `- note: 'Activity' has been explicitly marked unavailable here
  7 |     public typealias ContentState = Attributes.ContentState
  8 |     @available(iOS, deprecated: 16.2, message: "Use request(attributes:content:pushType:) instead")

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:212:32: error: 'Activity' is unavailable in macOS
210 | 
211 |         do {
212 |             let activity = try Activity<CSVImportActivityAttributes>.request(
    |                                `- error: 'Activity' is unavailable in macOS
213 |                 attributes: attributes,
214 |                 content: .init(state: contentState, staleDate: nil),

ActivityKit.Activity:6:14: note: 'Activity' has been explicitly marked unavailable here
  4 | @available(tvOS, unavailable)
  5 | @available(watchOS, unavailable)
  6 | public class Activity<Attributes> : Identifiable where Attributes : ActivityAttributes {
    |              `- note: 'Activity' has been explicitly marked unavailable here
  7 |     public typealias ContentState = Attributes.ContentState
  8 |     @available(iOS, deprecated: 16.2, message: "Use request(attributes:content:pushType:) instead")

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:212:70: error: 'request(attributes:content:pushType:)' is unavailable in macOS
210 | 
211 |         do {
212 |             let activity = try Activity<CSVImportActivityAttributes>.request(
    |                                                                      `- error: 'request(attributes:content:pushType:)' is unavailable in macOS
213 |                 attributes: attributes,
214 |                 content: .init(state: contentState, staleDate: nil),

ActivityKit.Activity.request:7:22: note: 'request(attributes:content:pushType:)' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public static func request(attributes: Attributes, content: ActivityContent<Activity<Attributes>.ContentState>, pushType: PushType? = nil) throws -> Activity<Attributes>}
  |                      `- note: 'request(attributes:content:pushType:)' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:247:34: error: 'content' is unavailable in macOS
245 | 
246 |         let contentState = CSVImportActivityAttributes.ContentState(
247 |             totalBooks: activity.content.state.totalBooks,
    |                                  `- error: 'content' is unavailable in macOS
248 |             processedBooks: processedBooks,
249 |             successfulImports: successfulImports,

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:255:33: error: 'content' is unavailable in macOS
253 |             statusMessage: generateStatusMessage(
254 |                 processed: processedBooks,
255 |                 total: activity.content.state.totalBooks
    |                                 `- error: 'content' is unavailable in macOS
256 |             ),
257 |             estimatedTimeRemaining: estimatedTimeRemaining,

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:258:33: error: 'content' is unavailable in macOS
256 |             ),
257 |             estimatedTimeRemaining: estimatedTimeRemaining,
258 |             startTime: activity.content.state.startTime
    |                                 `- error: 'content' is unavailable in macOS
259 |         )
260 | 

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:261:24: error: 'update' is unavailable in macOS
259 |         )
260 | 
261 |         await activity.update(.init(state: contentState, staleDate: nil))
    |                        `- error: 'update' is unavailable in macOS
262 |         lastUpdateTime = Date()
263 |     }

ActivityKit.Activity.update:7:15: note: 'update' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public func update(_ content: ActivityContent<Activity<Attributes>.ContentState>) async}
  |               `- note: 'update' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:272:40: error: 'content' is unavailable in macOS
270 |         }
271 | 
272 |         var enrichmentState = activity.content.state
    |                                        `- error: 'content' is unavailable in macOS
273 |         enrichmentState.isEnrichmentPhase = true
274 |         enrichmentState.enrichedBooks = 0

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:280:24: error: 'update' is unavailable in macOS
278 |         enrichmentState.estimatedTimeRemaining = nil
279 | 
280 |         await activity.update(.init(state: enrichmentState, staleDate: nil))
    |                        `- error: 'update' is unavailable in macOS
281 |         print("📱 Live Activity transitioned to enrichment phase (\(totalBooksToEnrich) books)")
282 |     }

ActivityKit.Activity.update:7:15: note: 'update' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public func update(_ content: ActivityContent<Activity<Attributes>.ContentState>) async}
  |               `- note: 'update' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:301:40: error: 'content' is unavailable in macOS
299 |         }
300 | 
301 |         var enrichmentState = activity.content.state
    |                                        `- error: 'content' is unavailable in macOS
302 |         enrichmentState.enrichedBooks = enrichedBooks
303 |         enrichmentState.currentBookTitle = currentBookTitle

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:309:24: error: 'update' is unavailable in macOS
307 |         )
308 | 
309 |         await activity.update(.init(state: enrichmentState, staleDate: nil))
    |                        `- error: 'update' is unavailable in macOS
310 |         lastUpdateTime = Date()
311 |     }

ActivityKit.Activity.update:7:15: note: 'update' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public func update(_ content: ActivityContent<Activity<Attributes>.ContentState>) async}
  |               `- note: 'update' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:320:35: error: 'content' is unavailable in macOS
318 |         guard let activity = currentActivity else { return }
319 | 
320 |         var finalState = activity.content.state
    |                                   `- error: 'content' is unavailable in macOS
321 |         finalState.statusMessage = finalMessage
322 | 

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:323:24: error: 'end(_:dismissalPolicy:)' is unavailable in macOS
321 |         finalState.statusMessage = finalMessage
322 | 
323 |         await activity.end(
    |                        `- error: 'end(_:dismissalPolicy:)' is unavailable in macOS
324 |             .init(state: finalState, staleDate: Date().addingTimeInterval(dismissAfter)),
325 |             dismissalPolicy: .after(.now + dismissAfter)

ActivityKit.Activity.end:7:15: note: 'end(_:dismissalPolicy:)' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public func end(_ content: ActivityContent<Activity<Attributes>.ContentState>?, dismissalPolicy: ActivityUIDismissalPolicy = .default) async}
  |               `- note: 'end(_:dismissalPolicy:)' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:55:18: error: 'ActivityViewContext' is unavailable in macOS
 53 | @available(iOS 16.2, *)
 54 | struct LockScreenLiveActivityView: View {
 55 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
 56 | 
 57 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:216:18: error: 'ActivityViewContext' is unavailable in macOS
214 | @available(iOS 16.2, *)
215 | struct ExpandedLeadingView: View {
216 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
217 | 
218 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:245:18: error: 'ActivityViewContext' is unavailable in macOS
243 | @available(iOS 16.2, *)
244 | struct ExpandedTrailingView: View {
245 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
246 | 
247 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:268:18: error: 'ActivityViewContext' is unavailable in macOS
266 | @available(iOS 16.2, *)
267 | struct ExpandedCenterView: View {
268 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
269 | 
270 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:286:18: error: 'ActivityViewContext' is unavailable in macOS
284 | @available(iOS 16.2, *)
285 | struct ExpandedBottomView: View {
286 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
287 | 
288 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:361:18: error: 'ActivityViewContext' is unavailable in macOS
359 | @available(iOS 16.2, *)
360 | struct CompactLeadingView: View {
361 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
362 | 
363 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:372:18: error: 'ActivityViewContext' is unavailable in macOS
370 | @available(iOS 16.2, *)
371 | struct CompactTrailingView: View {
372 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
373 | 
374 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:394:18: error: 'ActivityViewContext' is unavailable in macOS
392 | @available(iOS 16.2, *)
393 | struct MinimalView: View {
394 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
395 | 
396 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:20:27: error: result builder 'DynamicIslandExpandedContentBuilder' does not implement any 'buildBlock' or a combination of 'buildPartialBlock(first:)' and 'buildPartialBlock(accumulated:next:)' with sufficient availability for this call site [#ResultBuilderMethods]
 18 |             LockScreenLiveActivityView(context: context)
 19 |         } dynamicIsland: { context in
 20 |             DynamicIsland {
    |                           `- error: result builder 'DynamicIslandExpandedContentBuilder' does not implement any 'buildBlock' or a combination of 'buildPartialBlock(first:)' and 'buildPartialBlock(accumulated:next:)' with sufficient availability for this call site [#ResultBuilderMethods]
 21 |                 // Expanded UI (when user long-presses)
 22 |                 DynamicIslandExpandedRegion(.leading) {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:20:27: error: result builder 'DynamicIslandExpandedContentBuilder' does not implement any 'buildBlock' or a combination of 'buildPartialBlock(first:)' and 'buildPartialBlock(accumulated:next:)' with sufficient availability for this call site [#ResultBuilderMethods]
 18 |             LockScreenLiveActivityView(context: context)
 19 |         } dynamicIsland: { context in
 20 |             DynamicIsland {
    |                           `- error: result builder 'DynamicIslandExpandedContentBuilder' does not implement any 'buildBlock' or a combination of 'buildPartialBlock(first:)' and 'buildPartialBlock(accumulated:next:)' with sufficient availability for this call site [#ResultBuilderMethods]
 21 |                 // Expanded UI (when user long-presses)
 22 |                 DynamicIslandExpandedRegion(.leading) {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:20:13: error: generic parameter 'Expanded' could not be inferred
 18 |             LockScreenLiveActivityView(context: context)
 19 |         } dynamicIsland: { context in
 20 |             DynamicIsland {
    |             `- error: generic parameter 'Expanded' could not be inferred
 21 |                 // Expanded UI (when user long-presses)
 22 |                 DynamicIslandExpandedRegion(.leading) {

WidgetKit.DynamicIsland.init:2:8: note: in call to initializer
1 | struct DynamicIsland {
2 | public init<Expanded, CompactLeading, CompactTrailing, Minimal>(@DynamicIslandExpandedContentBuilder expanded: @escaping () -> DynamicIslandExpandedContent<Expanded>, @ViewBuilder compactLeading: @escaping () -> CompactLeading, @ViewBuilder compactTrailing: @escaping () -> CompactTrailing, @ViewBuilder minimal: @escaping () -> Minimal) where Expanded : View, CompactLeading : View, CompactTrailing : View, Minimal : View}
  |        `- note: in call to initializer
3 | 

[#ResultBuilderMethods]: <https://docs.swift.org/compiler/documentation/diagnostics/result-builder-methods>
[41/65] Compiling BooksTrackerFeature CSVParsingActor.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/CSVImportSupportingViews.swift:19:22: error: conformance of 'BounceSymbolEffect' to 'IndefiniteSymbolEffect' is only available in macOS 15.0 or newer
  4 | // MARK: - Import Results View
  5 | 
  6 | struct ImportResultsView: View {
    |        `- note: add '@available' attribute to enclosing struct
  7 |     let result: CSVImportService.ImportResult
  8 |     let themeStore: iOS26ThemeStore
    :
 10 |     @State private var showingErrorDetails = false
 11 | 
 12 |     var body: some View {
    |         `- note: add '@available' attribute to enclosing property
 13 |         ScrollView {
 14 |             VStack(spacing: 32) {
    :
 17 |                     .font(.system(size: 80))
 18 |                     .foregroundStyle(Color.green.gradient)
 19 |                     .symbolEffect(.bounce)
    |                      |- error: conformance of 'BounceSymbolEffect' to 'IndefiniteSymbolEffect' is only available in macOS 15.0 or newer
    |                      `- note: add 'if #available' version check
 20 | 
 21 |                 // Summary

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/CSVImportSupportingViews.swift:421:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
419 |             }
420 |             .navigationTitle("Import Preview")
421 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
422 |             .toolbar {
423 |                 ToolbarItem(placement: .confirmationAction) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/CSVImportSupportingViews.swift:566:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
564 |             }
565 |             .navigationTitle("Import Errors")
566 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
567 |             .toolbar {
568 |                 ToolbarItem(placement: .confirmationAction) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:12:44: error: 'ActivityAttributes' is unavailable in macOS
 10 | /// Displays on Lock Screen and Dynamic Island during long imports
 11 | @available(iOS 16.2, *)
 12 | public struct CSVImportActivityAttributes: ActivityAttributes, Sendable {
    |                                            `- error: 'ActivityAttributes' is unavailable in macOS
 13 | 
 14 |     // MARK: - Static Content

ActivityKit.ActivityAttributes:6:17: note: 'ActivityAttributes' has been explicitly marked unavailable here
4 | @available(tvOS, unavailable)
5 | @available(watchOS, unavailable)
6 | public protocol ActivityAttributes : Decodable, Encodable {
  |                 `- note: 'ActivityAttributes' has been explicitly marked unavailable here
7 |     associatedtype ContentState : Decodable, Encodable, Hashable
8 | }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:176:34: error: 'Activity' is unavailable in macOS
174 |     // MARK: - Properties
175 | 
176 |     private var currentActivity: Activity<CSVImportActivityAttributes>?
    |                                  `- error: 'Activity' is unavailable in macOS
177 |     private let updateThrottle: TimeInterval = 1.0 // Update every 1 second minimum
178 |     private var lastUpdateTime: Date?

ActivityKit.Activity:6:14: note: 'Activity' has been explicitly marked unavailable here
  4 | @available(tvOS, unavailable)
  5 | @available(watchOS, unavailable)
  6 | public class Activity<Attributes> : Identifiable where Attributes : ActivityAttributes {
    |              `- note: 'Activity' has been explicitly marked unavailable here
  7 |     public typealias ContentState = Attributes.ContentState
  8 |     @available(iOS, deprecated: 16.2, message: "Use request(attributes:content:pushType:) instead")

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:212:32: error: 'Activity' is unavailable in macOS
210 | 
211 |         do {
212 |             let activity = try Activity<CSVImportActivityAttributes>.request(
    |                                `- error: 'Activity' is unavailable in macOS
213 |                 attributes: attributes,
214 |                 content: .init(state: contentState, staleDate: nil),

ActivityKit.Activity:6:14: note: 'Activity' has been explicitly marked unavailable here
  4 | @available(tvOS, unavailable)
  5 | @available(watchOS, unavailable)
  6 | public class Activity<Attributes> : Identifiable where Attributes : ActivityAttributes {
    |              `- note: 'Activity' has been explicitly marked unavailable here
  7 |     public typealias ContentState = Attributes.ContentState
  8 |     @available(iOS, deprecated: 16.2, message: "Use request(attributes:content:pushType:) instead")

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:212:70: error: 'request(attributes:content:pushType:)' is unavailable in macOS
210 | 
211 |         do {
212 |             let activity = try Activity<CSVImportActivityAttributes>.request(
    |                                                                      `- error: 'request(attributes:content:pushType:)' is unavailable in macOS
213 |                 attributes: attributes,
214 |                 content: .init(state: contentState, staleDate: nil),

ActivityKit.Activity.request:7:22: note: 'request(attributes:content:pushType:)' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public static func request(attributes: Attributes, content: ActivityContent<Activity<Attributes>.ContentState>, pushType: PushType? = nil) throws -> Activity<Attributes>}
  |                      `- note: 'request(attributes:content:pushType:)' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:247:34: error: 'content' is unavailable in macOS
245 | 
246 |         let contentState = CSVImportActivityAttributes.ContentState(
247 |             totalBooks: activity.content.state.totalBooks,
    |                                  `- error: 'content' is unavailable in macOS
248 |             processedBooks: processedBooks,
249 |             successfulImports: successfulImports,

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:255:33: error: 'content' is unavailable in macOS
253 |             statusMessage: generateStatusMessage(
254 |                 processed: processedBooks,
255 |                 total: activity.content.state.totalBooks
    |                                 `- error: 'content' is unavailable in macOS
256 |             ),
257 |             estimatedTimeRemaining: estimatedTimeRemaining,

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:258:33: error: 'content' is unavailable in macOS
256 |             ),
257 |             estimatedTimeRemaining: estimatedTimeRemaining,
258 |             startTime: activity.content.state.startTime
    |                                 `- error: 'content' is unavailable in macOS
259 |         )
260 | 

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:261:24: error: 'update' is unavailable in macOS
259 |         )
260 | 
261 |         await activity.update(.init(state: contentState, staleDate: nil))
    |                        `- error: 'update' is unavailable in macOS
262 |         lastUpdateTime = Date()
263 |     }

ActivityKit.Activity.update:7:15: note: 'update' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public func update(_ content: ActivityContent<Activity<Attributes>.ContentState>) async}
  |               `- note: 'update' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:272:40: error: 'content' is unavailable in macOS
270 |         }
271 | 
272 |         var enrichmentState = activity.content.state
    |                                        `- error: 'content' is unavailable in macOS
273 |         enrichmentState.isEnrichmentPhase = true
274 |         enrichmentState.enrichedBooks = 0

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:280:24: error: 'update' is unavailable in macOS
278 |         enrichmentState.estimatedTimeRemaining = nil
279 | 
280 |         await activity.update(.init(state: enrichmentState, staleDate: nil))
    |                        `- error: 'update' is unavailable in macOS
281 |         print("📱 Live Activity transitioned to enrichment phase (\(totalBooksToEnrich) books)")
282 |     }

ActivityKit.Activity.update:7:15: note: 'update' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public func update(_ content: ActivityContent<Activity<Attributes>.ContentState>) async}
  |               `- note: 'update' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:301:40: error: 'content' is unavailable in macOS
299 |         }
300 | 
301 |         var enrichmentState = activity.content.state
    |                                        `- error: 'content' is unavailable in macOS
302 |         enrichmentState.enrichedBooks = enrichedBooks
303 |         enrichmentState.currentBookTitle = currentBookTitle

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:309:24: error: 'update' is unavailable in macOS
307 |         )
308 | 
309 |         await activity.update(.init(state: enrichmentState, staleDate: nil))
    |                        `- error: 'update' is unavailable in macOS
310 |         lastUpdateTime = Date()
311 |     }

ActivityKit.Activity.update:7:15: note: 'update' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public func update(_ content: ActivityContent<Activity<Attributes>.ContentState>) async}
  |               `- note: 'update' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:320:35: error: 'content' is unavailable in macOS
318 |         guard let activity = currentActivity else { return }
319 | 
320 |         var finalState = activity.content.state
    |                                   `- error: 'content' is unavailable in macOS
321 |         finalState.statusMessage = finalMessage
322 | 

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:323:24: error: 'end(_:dismissalPolicy:)' is unavailable in macOS
321 |         finalState.statusMessage = finalMessage
322 | 
323 |         await activity.end(
    |                        `- error: 'end(_:dismissalPolicy:)' is unavailable in macOS
324 |             .init(state: finalState, staleDate: Date().addingTimeInterval(dismissAfter)),
325 |             dismissalPolicy: .after(.now + dismissAfter)

ActivityKit.Activity.end:7:15: note: 'end(_:dismissalPolicy:)' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public func end(_ content: ActivityContent<Activity<Attributes>.ContentState>?, dismissalPolicy: ActivityUIDismissalPolicy = .default) async}
  |               `- note: 'end(_:dismissalPolicy:)' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:55:18: error: 'ActivityViewContext' is unavailable in macOS
 53 | @available(iOS 16.2, *)
 54 | struct LockScreenLiveActivityView: View {
 55 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
 56 | 
 57 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:216:18: error: 'ActivityViewContext' is unavailable in macOS
214 | @available(iOS 16.2, *)
215 | struct ExpandedLeadingView: View {
216 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
217 | 
218 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:245:18: error: 'ActivityViewContext' is unavailable in macOS
243 | @available(iOS 16.2, *)
244 | struct ExpandedTrailingView: View {
245 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
246 | 
247 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:268:18: error: 'ActivityViewContext' is unavailable in macOS
266 | @available(iOS 16.2, *)
267 | struct ExpandedCenterView: View {
268 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
269 | 
270 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:286:18: error: 'ActivityViewContext' is unavailable in macOS
284 | @available(iOS 16.2, *)
285 | struct ExpandedBottomView: View {
286 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
287 | 
288 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:361:18: error: 'ActivityViewContext' is unavailable in macOS
359 | @available(iOS 16.2, *)
360 | struct CompactLeadingView: View {
361 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
362 | 
363 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:372:18: error: 'ActivityViewContext' is unavailable in macOS
370 | @available(iOS 16.2, *)
371 | struct CompactTrailingView: View {
372 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
373 | 
374 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:394:18: error: 'ActivityViewContext' is unavailable in macOS
392 | @available(iOS 16.2, *)
393 | struct MinimalView: View {
394 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
395 | 
396 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:20:27: error: result builder 'DynamicIslandExpandedContentBuilder' does not implement any 'buildBlock' or a combination of 'buildPartialBlock(first:)' and 'buildPartialBlock(accumulated:next:)' with sufficient availability for this call site [#ResultBuilderMethods]
 18 |             LockScreenLiveActivityView(context: context)
 19 |         } dynamicIsland: { context in
 20 |             DynamicIsland {
    |                           `- error: result builder 'DynamicIslandExpandedContentBuilder' does not implement any 'buildBlock' or a combination of 'buildPartialBlock(first:)' and 'buildPartialBlock(accumulated:next:)' with sufficient availability for this call site [#ResultBuilderMethods]
 21 |                 // Expanded UI (when user long-presses)
 22 |                 DynamicIslandExpandedRegion(.leading) {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:20:27: error: result builder 'DynamicIslandExpandedContentBuilder' does not implement any 'buildBlock' or a combination of 'buildPartialBlock(first:)' and 'buildPartialBlock(accumulated:next:)' with sufficient availability for this call site [#ResultBuilderMethods]
 18 |             LockScreenLiveActivityView(context: context)
 19 |         } dynamicIsland: { context in
 20 |             DynamicIsland {
    |                           `- error: result builder 'DynamicIslandExpandedContentBuilder' does not implement any 'buildBlock' or a combination of 'buildPartialBlock(first:)' and 'buildPartialBlock(accumulated:next:)' with sufficient availability for this call site [#ResultBuilderMethods]
 21 |                 // Expanded UI (when user long-presses)
 22 |                 DynamicIslandExpandedRegion(.leading) {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:20:13: error: generic parameter 'Expanded' could not be inferred
 18 |             LockScreenLiveActivityView(context: context)
 19 |         } dynamicIsland: { context in
 20 |             DynamicIsland {
    |             `- error: generic parameter 'Expanded' could not be inferred
 21 |                 // Expanded UI (when user long-presses)
 22 |                 DynamicIslandExpandedRegion(.leading) {

WidgetKit.DynamicIsland.init:2:8: note: in call to initializer
1 | struct DynamicIsland {
2 | public init<Expanded, CompactLeading, CompactTrailing, Minimal>(@DynamicIslandExpandedContentBuilder expanded: @escaping () -> DynamicIslandExpandedContent<Expanded>, @ViewBuilder compactLeading: @escaping () -> CompactLeading, @ViewBuilder compactTrailing: @escaping () -> CompactTrailing, @ViewBuilder minimal: @escaping () -> Minimal) where Expanded : View, CompactLeading : View, CompactTrailing : View, Minimal : View}
  |        `- note: in call to initializer
3 | 

[#ResultBuilderMethods]: <https://docs.swift.org/compiler/documentation/diagnostics/result-builder-methods>
[42/65] Compiling BooksTrackerFeature EnrichmentQueue.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/CSVImportSupportingViews.swift:19:22: error: conformance of 'BounceSymbolEffect' to 'IndefiniteSymbolEffect' is only available in macOS 15.0 or newer
  4 | // MARK: - Import Results View
  5 | 
  6 | struct ImportResultsView: View {
    |        `- note: add '@available' attribute to enclosing struct
  7 |     let result: CSVImportService.ImportResult
  8 |     let themeStore: iOS26ThemeStore
    :
 10 |     @State private var showingErrorDetails = false
 11 | 
 12 |     var body: some View {
    |         `- note: add '@available' attribute to enclosing property
 13 |         ScrollView {
 14 |             VStack(spacing: 32) {
    :
 17 |                     .font(.system(size: 80))
 18 |                     .foregroundStyle(Color.green.gradient)
 19 |                     .symbolEffect(.bounce)
    |                      |- error: conformance of 'BounceSymbolEffect' to 'IndefiniteSymbolEffect' is only available in macOS 15.0 or newer
    |                      `- note: add 'if #available' version check
 20 | 
 21 |                 // Summary

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/CSVImportSupportingViews.swift:421:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
419 |             }
420 |             .navigationTitle("Import Preview")
421 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
422 |             .toolbar {
423 |                 ToolbarItem(placement: .confirmationAction) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/CSVImportSupportingViews.swift:566:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
564 |             }
565 |             .navigationTitle("Import Errors")
566 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
567 |             .toolbar {
568 |                 ToolbarItem(placement: .confirmationAction) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:12:44: error: 'ActivityAttributes' is unavailable in macOS
 10 | /// Displays on Lock Screen and Dynamic Island during long imports
 11 | @available(iOS 16.2, *)
 12 | public struct CSVImportActivityAttributes: ActivityAttributes, Sendable {
    |                                            `- error: 'ActivityAttributes' is unavailable in macOS
 13 | 
 14 |     // MARK: - Static Content

ActivityKit.ActivityAttributes:6:17: note: 'ActivityAttributes' has been explicitly marked unavailable here
4 | @available(tvOS, unavailable)
5 | @available(watchOS, unavailable)
6 | public protocol ActivityAttributes : Decodable, Encodable {
  |                 `- note: 'ActivityAttributes' has been explicitly marked unavailable here
7 |     associatedtype ContentState : Decodable, Encodable, Hashable
8 | }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:176:34: error: 'Activity' is unavailable in macOS
174 |     // MARK: - Properties
175 | 
176 |     private var currentActivity: Activity<CSVImportActivityAttributes>?
    |                                  `- error: 'Activity' is unavailable in macOS
177 |     private let updateThrottle: TimeInterval = 1.0 // Update every 1 second minimum
178 |     private var lastUpdateTime: Date?

ActivityKit.Activity:6:14: note: 'Activity' has been explicitly marked unavailable here
  4 | @available(tvOS, unavailable)
  5 | @available(watchOS, unavailable)
  6 | public class Activity<Attributes> : Identifiable where Attributes : ActivityAttributes {
    |              `- note: 'Activity' has been explicitly marked unavailable here
  7 |     public typealias ContentState = Attributes.ContentState
  8 |     @available(iOS, deprecated: 16.2, message: "Use request(attributes:content:pushType:) instead")

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:212:32: error: 'Activity' is unavailable in macOS
210 | 
211 |         do {
212 |             let activity = try Activity<CSVImportActivityAttributes>.request(
    |                                `- error: 'Activity' is unavailable in macOS
213 |                 attributes: attributes,
214 |                 content: .init(state: contentState, staleDate: nil),

ActivityKit.Activity:6:14: note: 'Activity' has been explicitly marked unavailable here
  4 | @available(tvOS, unavailable)
  5 | @available(watchOS, unavailable)
  6 | public class Activity<Attributes> : Identifiable where Attributes : ActivityAttributes {
    |              `- note: 'Activity' has been explicitly marked unavailable here
  7 |     public typealias ContentState = Attributes.ContentState
  8 |     @available(iOS, deprecated: 16.2, message: "Use request(attributes:content:pushType:) instead")

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:212:70: error: 'request(attributes:content:pushType:)' is unavailable in macOS
210 | 
211 |         do {
212 |             let activity = try Activity<CSVImportActivityAttributes>.request(
    |                                                                      `- error: 'request(attributes:content:pushType:)' is unavailable in macOS
213 |                 attributes: attributes,
214 |                 content: .init(state: contentState, staleDate: nil),

ActivityKit.Activity.request:7:22: note: 'request(attributes:content:pushType:)' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public static func request(attributes: Attributes, content: ActivityContent<Activity<Attributes>.ContentState>, pushType: PushType? = nil) throws -> Activity<Attributes>}
  |                      `- note: 'request(attributes:content:pushType:)' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:247:34: error: 'content' is unavailable in macOS
245 | 
246 |         let contentState = CSVImportActivityAttributes.ContentState(
247 |             totalBooks: activity.content.state.totalBooks,
    |                                  `- error: 'content' is unavailable in macOS
248 |             processedBooks: processedBooks,
249 |             successfulImports: successfulImports,

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:255:33: error: 'content' is unavailable in macOS
253 |             statusMessage: generateStatusMessage(
254 |                 processed: processedBooks,
255 |                 total: activity.content.state.totalBooks
    |                                 `- error: 'content' is unavailable in macOS
256 |             ),
257 |             estimatedTimeRemaining: estimatedTimeRemaining,

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:258:33: error: 'content' is unavailable in macOS
256 |             ),
257 |             estimatedTimeRemaining: estimatedTimeRemaining,
258 |             startTime: activity.content.state.startTime
    |                                 `- error: 'content' is unavailable in macOS
259 |         )
260 | 

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:261:24: error: 'update' is unavailable in macOS
259 |         )
260 | 
261 |         await activity.update(.init(state: contentState, staleDate: nil))
    |                        `- error: 'update' is unavailable in macOS
262 |         lastUpdateTime = Date()
263 |     }

ActivityKit.Activity.update:7:15: note: 'update' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public func update(_ content: ActivityContent<Activity<Attributes>.ContentState>) async}
  |               `- note: 'update' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:272:40: error: 'content' is unavailable in macOS
270 |         }
271 | 
272 |         var enrichmentState = activity.content.state
    |                                        `- error: 'content' is unavailable in macOS
273 |         enrichmentState.isEnrichmentPhase = true
274 |         enrichmentState.enrichedBooks = 0

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:280:24: error: 'update' is unavailable in macOS
278 |         enrichmentState.estimatedTimeRemaining = nil
279 | 
280 |         await activity.update(.init(state: enrichmentState, staleDate: nil))
    |                        `- error: 'update' is unavailable in macOS
281 |         print("📱 Live Activity transitioned to enrichment phase (\(totalBooksToEnrich) books)")
282 |     }

ActivityKit.Activity.update:7:15: note: 'update' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public func update(_ content: ActivityContent<Activity<Attributes>.ContentState>) async}
  |               `- note: 'update' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:301:40: error: 'content' is unavailable in macOS
299 |         }
300 | 
301 |         var enrichmentState = activity.content.state
    |                                        `- error: 'content' is unavailable in macOS
302 |         enrichmentState.enrichedBooks = enrichedBooks
303 |         enrichmentState.currentBookTitle = currentBookTitle

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:309:24: error: 'update' is unavailable in macOS
307 |         )
308 | 
309 |         await activity.update(.init(state: enrichmentState, staleDate: nil))
    |                        `- error: 'update' is unavailable in macOS
310 |         lastUpdateTime = Date()
311 |     }

ActivityKit.Activity.update:7:15: note: 'update' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public func update(_ content: ActivityContent<Activity<Attributes>.ContentState>) async}
  |               `- note: 'update' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:320:35: error: 'content' is unavailable in macOS
318 |         guard let activity = currentActivity else { return }
319 | 
320 |         var finalState = activity.content.state
    |                                   `- error: 'content' is unavailable in macOS
321 |         finalState.statusMessage = finalMessage
322 | 

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:323:24: error: 'end(_:dismissalPolicy:)' is unavailable in macOS
321 |         finalState.statusMessage = finalMessage
322 | 
323 |         await activity.end(
    |                        `- error: 'end(_:dismissalPolicy:)' is unavailable in macOS
324 |             .init(state: finalState, staleDate: Date().addingTimeInterval(dismissAfter)),
325 |             dismissalPolicy: .after(.now + dismissAfter)

ActivityKit.Activity.end:7:15: note: 'end(_:dismissalPolicy:)' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public func end(_ content: ActivityContent<Activity<Attributes>.ContentState>?, dismissalPolicy: ActivityUIDismissalPolicy = .default) async}
  |               `- note: 'end(_:dismissalPolicy:)' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:55:18: error: 'ActivityViewContext' is unavailable in macOS
 53 | @available(iOS 16.2, *)
 54 | struct LockScreenLiveActivityView: View {
 55 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
 56 | 
 57 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:216:18: error: 'ActivityViewContext' is unavailable in macOS
214 | @available(iOS 16.2, *)
215 | struct ExpandedLeadingView: View {
216 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
217 | 
218 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:245:18: error: 'ActivityViewContext' is unavailable in macOS
243 | @available(iOS 16.2, *)
244 | struct ExpandedTrailingView: View {
245 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
246 | 
247 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:268:18: error: 'ActivityViewContext' is unavailable in macOS
266 | @available(iOS 16.2, *)
267 | struct ExpandedCenterView: View {
268 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
269 | 
270 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:286:18: error: 'ActivityViewContext' is unavailable in macOS
284 | @available(iOS 16.2, *)
285 | struct ExpandedBottomView: View {
286 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
287 | 
288 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:361:18: error: 'ActivityViewContext' is unavailable in macOS
359 | @available(iOS 16.2, *)
360 | struct CompactLeadingView: View {
361 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
362 | 
363 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:372:18: error: 'ActivityViewContext' is unavailable in macOS
370 | @available(iOS 16.2, *)
371 | struct CompactTrailingView: View {
372 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
373 | 
374 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:394:18: error: 'ActivityViewContext' is unavailable in macOS
392 | @available(iOS 16.2, *)
393 | struct MinimalView: View {
394 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
395 | 
396 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:20:27: error: result builder 'DynamicIslandExpandedContentBuilder' does not implement any 'buildBlock' or a combination of 'buildPartialBlock(first:)' and 'buildPartialBlock(accumulated:next:)' with sufficient availability for this call site [#ResultBuilderMethods]
 18 |             LockScreenLiveActivityView(context: context)
 19 |         } dynamicIsland: { context in
 20 |             DynamicIsland {
    |                           `- error: result builder 'DynamicIslandExpandedContentBuilder' does not implement any 'buildBlock' or a combination of 'buildPartialBlock(first:)' and 'buildPartialBlock(accumulated:next:)' with sufficient availability for this call site [#ResultBuilderMethods]
 21 |                 // Expanded UI (when user long-presses)
 22 |                 DynamicIslandExpandedRegion(.leading) {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:20:27: error: result builder 'DynamicIslandExpandedContentBuilder' does not implement any 'buildBlock' or a combination of 'buildPartialBlock(first:)' and 'buildPartialBlock(accumulated:next:)' with sufficient availability for this call site [#ResultBuilderMethods]
 18 |             LockScreenLiveActivityView(context: context)
 19 |         } dynamicIsland: { context in
 20 |             DynamicIsland {
    |                           `- error: result builder 'DynamicIslandExpandedContentBuilder' does not implement any 'buildBlock' or a combination of 'buildPartialBlock(first:)' and 'buildPartialBlock(accumulated:next:)' with sufficient availability for this call site [#ResultBuilderMethods]
 21 |                 // Expanded UI (when user long-presses)
 22 |                 DynamicIslandExpandedRegion(.leading) {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:20:13: error: generic parameter 'Expanded' could not be inferred
 18 |             LockScreenLiveActivityView(context: context)
 19 |         } dynamicIsland: { context in
 20 |             DynamicIsland {
    |             `- error: generic parameter 'Expanded' could not be inferred
 21 |                 // Expanded UI (when user long-presses)
 22 |                 DynamicIslandExpandedRegion(.leading) {

WidgetKit.DynamicIsland.init:2:8: note: in call to initializer
1 | struct DynamicIsland {
2 | public init<Expanded, CompactLeading, CompactTrailing, Minimal>(@DynamicIslandExpandedContentBuilder expanded: @escaping () -> DynamicIslandExpandedContent<Expanded>, @ViewBuilder compactLeading: @escaping () -> CompactLeading, @ViewBuilder compactTrailing: @escaping () -> CompactTrailing, @ViewBuilder minimal: @escaping () -> Minimal) where Expanded : View, CompactLeading : View, CompactTrailing : View, Minimal : View}
  |        `- note: in call to initializer
3 | 

[#ResultBuilderMethods]: <https://docs.swift.org/compiler/documentation/diagnostics/result-builder-methods>
[43/65] Compiling BooksTrackerFeature EnrichmentService.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/CSVImportSupportingViews.swift:19:22: error: conformance of 'BounceSymbolEffect' to 'IndefiniteSymbolEffect' is only available in macOS 15.0 or newer
  4 | // MARK: - Import Results View
  5 | 
  6 | struct ImportResultsView: View {
    |        `- note: add '@available' attribute to enclosing struct
  7 |     let result: CSVImportService.ImportResult
  8 |     let themeStore: iOS26ThemeStore
    :
 10 |     @State private var showingErrorDetails = false
 11 | 
 12 |     var body: some View {
    |         `- note: add '@available' attribute to enclosing property
 13 |         ScrollView {
 14 |             VStack(spacing: 32) {
    :
 17 |                     .font(.system(size: 80))
 18 |                     .foregroundStyle(Color.green.gradient)
 19 |                     .symbolEffect(.bounce)
    |                      |- error: conformance of 'BounceSymbolEffect' to 'IndefiniteSymbolEffect' is only available in macOS 15.0 or newer
    |                      `- note: add 'if #available' version check
 20 | 
 21 |                 // Summary

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/CSVImportSupportingViews.swift:421:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
419 |             }
420 |             .navigationTitle("Import Preview")
421 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
422 |             .toolbar {
423 |                 ToolbarItem(placement: .confirmationAction) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/CSVImportSupportingViews.swift:566:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
564 |             }
565 |             .navigationTitle("Import Errors")
566 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
567 |             .toolbar {
568 |                 ToolbarItem(placement: .confirmationAction) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:12:44: error: 'ActivityAttributes' is unavailable in macOS
 10 | /// Displays on Lock Screen and Dynamic Island during long imports
 11 | @available(iOS 16.2, *)
 12 | public struct CSVImportActivityAttributes: ActivityAttributes, Sendable {
    |                                            `- error: 'ActivityAttributes' is unavailable in macOS
 13 | 
 14 |     // MARK: - Static Content

ActivityKit.ActivityAttributes:6:17: note: 'ActivityAttributes' has been explicitly marked unavailable here
4 | @available(tvOS, unavailable)
5 | @available(watchOS, unavailable)
6 | public protocol ActivityAttributes : Decodable, Encodable {
  |                 `- note: 'ActivityAttributes' has been explicitly marked unavailable here
7 |     associatedtype ContentState : Decodable, Encodable, Hashable
8 | }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:176:34: error: 'Activity' is unavailable in macOS
174 |     // MARK: - Properties
175 | 
176 |     private var currentActivity: Activity<CSVImportActivityAttributes>?
    |                                  `- error: 'Activity' is unavailable in macOS
177 |     private let updateThrottle: TimeInterval = 1.0 // Update every 1 second minimum
178 |     private var lastUpdateTime: Date?

ActivityKit.Activity:6:14: note: 'Activity' has been explicitly marked unavailable here
  4 | @available(tvOS, unavailable)
  5 | @available(watchOS, unavailable)
  6 | public class Activity<Attributes> : Identifiable where Attributes : ActivityAttributes {
    |              `- note: 'Activity' has been explicitly marked unavailable here
  7 |     public typealias ContentState = Attributes.ContentState
  8 |     @available(iOS, deprecated: 16.2, message: "Use request(attributes:content:pushType:) instead")

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:212:32: error: 'Activity' is unavailable in macOS
210 | 
211 |         do {
212 |             let activity = try Activity<CSVImportActivityAttributes>.request(
    |                                `- error: 'Activity' is unavailable in macOS
213 |                 attributes: attributes,
214 |                 content: .init(state: contentState, staleDate: nil),

ActivityKit.Activity:6:14: note: 'Activity' has been explicitly marked unavailable here
  4 | @available(tvOS, unavailable)
  5 | @available(watchOS, unavailable)
  6 | public class Activity<Attributes> : Identifiable where Attributes : ActivityAttributes {
    |              `- note: 'Activity' has been explicitly marked unavailable here
  7 |     public typealias ContentState = Attributes.ContentState
  8 |     @available(iOS, deprecated: 16.2, message: "Use request(attributes:content:pushType:) instead")

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:212:70: error: 'request(attributes:content:pushType:)' is unavailable in macOS
210 | 
211 |         do {
212 |             let activity = try Activity<CSVImportActivityAttributes>.request(
    |                                                                      `- error: 'request(attributes:content:pushType:)' is unavailable in macOS
213 |                 attributes: attributes,
214 |                 content: .init(state: contentState, staleDate: nil),

ActivityKit.Activity.request:7:22: note: 'request(attributes:content:pushType:)' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public static func request(attributes: Attributes, content: ActivityContent<Activity<Attributes>.ContentState>, pushType: PushType? = nil) throws -> Activity<Attributes>}
  |                      `- note: 'request(attributes:content:pushType:)' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:247:34: error: 'content' is unavailable in macOS
245 | 
246 |         let contentState = CSVImportActivityAttributes.ContentState(
247 |             totalBooks: activity.content.state.totalBooks,
    |                                  `- error: 'content' is unavailable in macOS
248 |             processedBooks: processedBooks,
249 |             successfulImports: successfulImports,

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:255:33: error: 'content' is unavailable in macOS
253 |             statusMessage: generateStatusMessage(
254 |                 processed: processedBooks,
255 |                 total: activity.content.state.totalBooks
    |                                 `- error: 'content' is unavailable in macOS
256 |             ),
257 |             estimatedTimeRemaining: estimatedTimeRemaining,

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:258:33: error: 'content' is unavailable in macOS
256 |             ),
257 |             estimatedTimeRemaining: estimatedTimeRemaining,
258 |             startTime: activity.content.state.startTime
    |                                 `- error: 'content' is unavailable in macOS
259 |         )
260 | 

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:261:24: error: 'update' is unavailable in macOS
259 |         )
260 | 
261 |         await activity.update(.init(state: contentState, staleDate: nil))
    |                        `- error: 'update' is unavailable in macOS
262 |         lastUpdateTime = Date()
263 |     }

ActivityKit.Activity.update:7:15: note: 'update' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public func update(_ content: ActivityContent<Activity<Attributes>.ContentState>) async}
  |               `- note: 'update' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:272:40: error: 'content' is unavailable in macOS
270 |         }
271 | 
272 |         var enrichmentState = activity.content.state
    |                                        `- error: 'content' is unavailable in macOS
273 |         enrichmentState.isEnrichmentPhase = true
274 |         enrichmentState.enrichedBooks = 0

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:280:24: error: 'update' is unavailable in macOS
278 |         enrichmentState.estimatedTimeRemaining = nil
279 | 
280 |         await activity.update(.init(state: enrichmentState, staleDate: nil))
    |                        `- error: 'update' is unavailable in macOS
281 |         print("📱 Live Activity transitioned to enrichment phase (\(totalBooksToEnrich) books)")
282 |     }

ActivityKit.Activity.update:7:15: note: 'update' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public func update(_ content: ActivityContent<Activity<Attributes>.ContentState>) async}
  |               `- note: 'update' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:301:40: error: 'content' is unavailable in macOS
299 |         }
300 | 
301 |         var enrichmentState = activity.content.state
    |                                        `- error: 'content' is unavailable in macOS
302 |         enrichmentState.enrichedBooks = enrichedBooks
303 |         enrichmentState.currentBookTitle = currentBookTitle

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:309:24: error: 'update' is unavailable in macOS
307 |         )
308 | 
309 |         await activity.update(.init(state: enrichmentState, staleDate: nil))
    |                        `- error: 'update' is unavailable in macOS
310 |         lastUpdateTime = Date()
311 |     }

ActivityKit.Activity.update:7:15: note: 'update' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public func update(_ content: ActivityContent<Activity<Attributes>.ContentState>) async}
  |               `- note: 'update' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:320:35: error: 'content' is unavailable in macOS
318 |         guard let activity = currentActivity else { return }
319 | 
320 |         var finalState = activity.content.state
    |                                   `- error: 'content' is unavailable in macOS
321 |         finalState.statusMessage = finalMessage
322 | 

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:323:24: error: 'end(_:dismissalPolicy:)' is unavailable in macOS
321 |         finalState.statusMessage = finalMessage
322 | 
323 |         await activity.end(
    |                        `- error: 'end(_:dismissalPolicy:)' is unavailable in macOS
324 |             .init(state: finalState, staleDate: Date().addingTimeInterval(dismissAfter)),
325 |             dismissalPolicy: .after(.now + dismissAfter)

ActivityKit.Activity.end:7:15: note: 'end(_:dismissalPolicy:)' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public func end(_ content: ActivityContent<Activity<Attributes>.ContentState>?, dismissalPolicy: ActivityUIDismissalPolicy = .default) async}
  |               `- note: 'end(_:dismissalPolicy:)' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:55:18: error: 'ActivityViewContext' is unavailable in macOS
 53 | @available(iOS 16.2, *)
 54 | struct LockScreenLiveActivityView: View {
 55 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
 56 | 
 57 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:216:18: error: 'ActivityViewContext' is unavailable in macOS
214 | @available(iOS 16.2, *)
215 | struct ExpandedLeadingView: View {
216 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
217 | 
218 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:245:18: error: 'ActivityViewContext' is unavailable in macOS
243 | @available(iOS 16.2, *)
244 | struct ExpandedTrailingView: View {
245 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
246 | 
247 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:268:18: error: 'ActivityViewContext' is unavailable in macOS
266 | @available(iOS 16.2, *)
267 | struct ExpandedCenterView: View {
268 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
269 | 
270 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:286:18: error: 'ActivityViewContext' is unavailable in macOS
284 | @available(iOS 16.2, *)
285 | struct ExpandedBottomView: View {
286 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
287 | 
288 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:361:18: error: 'ActivityViewContext' is unavailable in macOS
359 | @available(iOS 16.2, *)
360 | struct CompactLeadingView: View {
361 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
362 | 
363 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:372:18: error: 'ActivityViewContext' is unavailable in macOS
370 | @available(iOS 16.2, *)
371 | struct CompactTrailingView: View {
372 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
373 | 
374 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:394:18: error: 'ActivityViewContext' is unavailable in macOS
392 | @available(iOS 16.2, *)
393 | struct MinimalView: View {
394 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
395 | 
396 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:20:27: error: result builder 'DynamicIslandExpandedContentBuilder' does not implement any 'buildBlock' or a combination of 'buildPartialBlock(first:)' and 'buildPartialBlock(accumulated:next:)' with sufficient availability for this call site [#ResultBuilderMethods]
 18 |             LockScreenLiveActivityView(context: context)
 19 |         } dynamicIsland: { context in
 20 |             DynamicIsland {
    |                           `- error: result builder 'DynamicIslandExpandedContentBuilder' does not implement any 'buildBlock' or a combination of 'buildPartialBlock(first:)' and 'buildPartialBlock(accumulated:next:)' with sufficient availability for this call site [#ResultBuilderMethods]
 21 |                 // Expanded UI (when user long-presses)
 22 |                 DynamicIslandExpandedRegion(.leading) {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:20:27: error: result builder 'DynamicIslandExpandedContentBuilder' does not implement any 'buildBlock' or a combination of 'buildPartialBlock(first:)' and 'buildPartialBlock(accumulated:next:)' with sufficient availability for this call site [#ResultBuilderMethods]
 18 |             LockScreenLiveActivityView(context: context)
 19 |         } dynamicIsland: { context in
 20 |             DynamicIsland {
    |                           `- error: result builder 'DynamicIslandExpandedContentBuilder' does not implement any 'buildBlock' or a combination of 'buildPartialBlock(first:)' and 'buildPartialBlock(accumulated:next:)' with sufficient availability for this call site [#ResultBuilderMethods]
 21 |                 // Expanded UI (when user long-presses)
 22 |                 DynamicIslandExpandedRegion(.leading) {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:20:13: error: generic parameter 'Expanded' could not be inferred
 18 |             LockScreenLiveActivityView(context: context)
 19 |         } dynamicIsland: { context in
 20 |             DynamicIsland {
    |             `- error: generic parameter 'Expanded' could not be inferred
 21 |                 // Expanded UI (when user long-presses)
 22 |                 DynamicIslandExpandedRegion(.leading) {

WidgetKit.DynamicIsland.init:2:8: note: in call to initializer
1 | struct DynamicIsland {
2 | public init<Expanded, CompactLeading, CompactTrailing, Minimal>(@DynamicIslandExpandedContentBuilder expanded: @escaping () -> DynamicIslandExpandedContent<Expanded>, @ViewBuilder compactLeading: @escaping () -> CompactLeading, @ViewBuilder compactTrailing: @escaping () -> CompactTrailing, @ViewBuilder minimal: @escaping () -> Minimal) where Expanded : View, CompactLeading : View, CompactTrailing : View, Minimal : View}
  |        `- note: in call to initializer
3 | 

[#ResultBuilderMethods]: <https://docs.swift.org/compiler/documentation/diagnostics/result-builder-methods>
[44/65] Compiling BooksTrackerFeature ImportActivityAttributes.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/CSVImportSupportingViews.swift:19:22: error: conformance of 'BounceSymbolEffect' to 'IndefiniteSymbolEffect' is only available in macOS 15.0 or newer
  4 | // MARK: - Import Results View
  5 | 
  6 | struct ImportResultsView: View {
    |        `- note: add '@available' attribute to enclosing struct
  7 |     let result: CSVImportService.ImportResult
  8 |     let themeStore: iOS26ThemeStore
    :
 10 |     @State private var showingErrorDetails = false
 11 | 
 12 |     var body: some View {
    |         `- note: add '@available' attribute to enclosing property
 13 |         ScrollView {
 14 |             VStack(spacing: 32) {
    :
 17 |                     .font(.system(size: 80))
 18 |                     .foregroundStyle(Color.green.gradient)
 19 |                     .symbolEffect(.bounce)
    |                      |- error: conformance of 'BounceSymbolEffect' to 'IndefiniteSymbolEffect' is only available in macOS 15.0 or newer
    |                      `- note: add 'if #available' version check
 20 | 
 21 |                 // Summary

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/CSVImportSupportingViews.swift:421:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
419 |             }
420 |             .navigationTitle("Import Preview")
421 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
422 |             .toolbar {
423 |                 ToolbarItem(placement: .confirmationAction) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/CSVImportSupportingViews.swift:566:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
564 |             }
565 |             .navigationTitle("Import Errors")
566 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
567 |             .toolbar {
568 |                 ToolbarItem(placement: .confirmationAction) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:12:44: error: 'ActivityAttributes' is unavailable in macOS
 10 | /// Displays on Lock Screen and Dynamic Island during long imports
 11 | @available(iOS 16.2, *)
 12 | public struct CSVImportActivityAttributes: ActivityAttributes, Sendable {
    |                                            `- error: 'ActivityAttributes' is unavailable in macOS
 13 | 
 14 |     // MARK: - Static Content

ActivityKit.ActivityAttributes:6:17: note: 'ActivityAttributes' has been explicitly marked unavailable here
4 | @available(tvOS, unavailable)
5 | @available(watchOS, unavailable)
6 | public protocol ActivityAttributes : Decodable, Encodable {
  |                 `- note: 'ActivityAttributes' has been explicitly marked unavailable here
7 |     associatedtype ContentState : Decodable, Encodable, Hashable
8 | }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:176:34: error: 'Activity' is unavailable in macOS
174 |     // MARK: - Properties
175 | 
176 |     private var currentActivity: Activity<CSVImportActivityAttributes>?
    |                                  `- error: 'Activity' is unavailable in macOS
177 |     private let updateThrottle: TimeInterval = 1.0 // Update every 1 second minimum
178 |     private var lastUpdateTime: Date?

ActivityKit.Activity:6:14: note: 'Activity' has been explicitly marked unavailable here
  4 | @available(tvOS, unavailable)
  5 | @available(watchOS, unavailable)
  6 | public class Activity<Attributes> : Identifiable where Attributes : ActivityAttributes {
    |              `- note: 'Activity' has been explicitly marked unavailable here
  7 |     public typealias ContentState = Attributes.ContentState
  8 |     @available(iOS, deprecated: 16.2, message: "Use request(attributes:content:pushType:) instead")

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:212:32: error: 'Activity' is unavailable in macOS
210 | 
211 |         do {
212 |             let activity = try Activity<CSVImportActivityAttributes>.request(
    |                                `- error: 'Activity' is unavailable in macOS
213 |                 attributes: attributes,
214 |                 content: .init(state: contentState, staleDate: nil),

ActivityKit.Activity:6:14: note: 'Activity' has been explicitly marked unavailable here
  4 | @available(tvOS, unavailable)
  5 | @available(watchOS, unavailable)
  6 | public class Activity<Attributes> : Identifiable where Attributes : ActivityAttributes {
    |              `- note: 'Activity' has been explicitly marked unavailable here
  7 |     public typealias ContentState = Attributes.ContentState
  8 |     @available(iOS, deprecated: 16.2, message: "Use request(attributes:content:pushType:) instead")

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:212:70: error: 'request(attributes:content:pushType:)' is unavailable in macOS
210 | 
211 |         do {
212 |             let activity = try Activity<CSVImportActivityAttributes>.request(
    |                                                                      `- error: 'request(attributes:content:pushType:)' is unavailable in macOS
213 |                 attributes: attributes,
214 |                 content: .init(state: contentState, staleDate: nil),

ActivityKit.Activity.request:7:22: note: 'request(attributes:content:pushType:)' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public static func request(attributes: Attributes, content: ActivityContent<Activity<Attributes>.ContentState>, pushType: PushType? = nil) throws -> Activity<Attributes>}
  |                      `- note: 'request(attributes:content:pushType:)' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:247:34: error: 'content' is unavailable in macOS
245 | 
246 |         let contentState = CSVImportActivityAttributes.ContentState(
247 |             totalBooks: activity.content.state.totalBooks,
    |                                  `- error: 'content' is unavailable in macOS
248 |             processedBooks: processedBooks,
249 |             successfulImports: successfulImports,

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:255:33: error: 'content' is unavailable in macOS
253 |             statusMessage: generateStatusMessage(
254 |                 processed: processedBooks,
255 |                 total: activity.content.state.totalBooks
    |                                 `- error: 'content' is unavailable in macOS
256 |             ),
257 |             estimatedTimeRemaining: estimatedTimeRemaining,

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:258:33: error: 'content' is unavailable in macOS
256 |             ),
257 |             estimatedTimeRemaining: estimatedTimeRemaining,
258 |             startTime: activity.content.state.startTime
    |                                 `- error: 'content' is unavailable in macOS
259 |         )
260 | 

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:261:24: error: 'update' is unavailable in macOS
259 |         )
260 | 
261 |         await activity.update(.init(state: contentState, staleDate: nil))
    |                        `- error: 'update' is unavailable in macOS
262 |         lastUpdateTime = Date()
263 |     }

ActivityKit.Activity.update:7:15: note: 'update' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public func update(_ content: ActivityContent<Activity<Attributes>.ContentState>) async}
  |               `- note: 'update' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:272:40: error: 'content' is unavailable in macOS
270 |         }
271 | 
272 |         var enrichmentState = activity.content.state
    |                                        `- error: 'content' is unavailable in macOS
273 |         enrichmentState.isEnrichmentPhase = true
274 |         enrichmentState.enrichedBooks = 0

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:280:24: error: 'update' is unavailable in macOS
278 |         enrichmentState.estimatedTimeRemaining = nil
279 | 
280 |         await activity.update(.init(state: enrichmentState, staleDate: nil))
    |                        `- error: 'update' is unavailable in macOS
281 |         print("📱 Live Activity transitioned to enrichment phase (\(totalBooksToEnrich) books)")
282 |     }

ActivityKit.Activity.update:7:15: note: 'update' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public func update(_ content: ActivityContent<Activity<Attributes>.ContentState>) async}
  |               `- note: 'update' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:301:40: error: 'content' is unavailable in macOS
299 |         }
300 | 
301 |         var enrichmentState = activity.content.state
    |                                        `- error: 'content' is unavailable in macOS
302 |         enrichmentState.enrichedBooks = enrichedBooks
303 |         enrichmentState.currentBookTitle = currentBookTitle

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:309:24: error: 'update' is unavailable in macOS
307 |         )
308 | 
309 |         await activity.update(.init(state: enrichmentState, staleDate: nil))
    |                        `- error: 'update' is unavailable in macOS
310 |         lastUpdateTime = Date()
311 |     }

ActivityKit.Activity.update:7:15: note: 'update' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public func update(_ content: ActivityContent<Activity<Attributes>.ContentState>) async}
  |               `- note: 'update' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:320:35: error: 'content' is unavailable in macOS
318 |         guard let activity = currentActivity else { return }
319 | 
320 |         var finalState = activity.content.state
    |                                   `- error: 'content' is unavailable in macOS
321 |         finalState.statusMessage = finalMessage
322 | 

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:323:24: error: 'end(_:dismissalPolicy:)' is unavailable in macOS
321 |         finalState.statusMessage = finalMessage
322 | 
323 |         await activity.end(
    |                        `- error: 'end(_:dismissalPolicy:)' is unavailable in macOS
324 |             .init(state: finalState, staleDate: Date().addingTimeInterval(dismissAfter)),
325 |             dismissalPolicy: .after(.now + dismissAfter)

ActivityKit.Activity.end:7:15: note: 'end(_:dismissalPolicy:)' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public func end(_ content: ActivityContent<Activity<Attributes>.ContentState>?, dismissalPolicy: ActivityUIDismissalPolicy = .default) async}
  |               `- note: 'end(_:dismissalPolicy:)' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:55:18: error: 'ActivityViewContext' is unavailable in macOS
 53 | @available(iOS 16.2, *)
 54 | struct LockScreenLiveActivityView: View {
 55 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
 56 | 
 57 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:216:18: error: 'ActivityViewContext' is unavailable in macOS
214 | @available(iOS 16.2, *)
215 | struct ExpandedLeadingView: View {
216 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
217 | 
218 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:245:18: error: 'ActivityViewContext' is unavailable in macOS
243 | @available(iOS 16.2, *)
244 | struct ExpandedTrailingView: View {
245 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
246 | 
247 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:268:18: error: 'ActivityViewContext' is unavailable in macOS
266 | @available(iOS 16.2, *)
267 | struct ExpandedCenterView: View {
268 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
269 | 
270 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:286:18: error: 'ActivityViewContext' is unavailable in macOS
284 | @available(iOS 16.2, *)
285 | struct ExpandedBottomView: View {
286 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
287 | 
288 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:361:18: error: 'ActivityViewContext' is unavailable in macOS
359 | @available(iOS 16.2, *)
360 | struct CompactLeadingView: View {
361 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
362 | 
363 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:372:18: error: 'ActivityViewContext' is unavailable in macOS
370 | @available(iOS 16.2, *)
371 | struct CompactTrailingView: View {
372 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
373 | 
374 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:394:18: error: 'ActivityViewContext' is unavailable in macOS
392 | @available(iOS 16.2, *)
393 | struct MinimalView: View {
394 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
395 | 
396 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:20:27: error: result builder 'DynamicIslandExpandedContentBuilder' does not implement any 'buildBlock' or a combination of 'buildPartialBlock(first:)' and 'buildPartialBlock(accumulated:next:)' with sufficient availability for this call site [#ResultBuilderMethods]
 18 |             LockScreenLiveActivityView(context: context)
 19 |         } dynamicIsland: { context in
 20 |             DynamicIsland {
    |                           `- error: result builder 'DynamicIslandExpandedContentBuilder' does not implement any 'buildBlock' or a combination of 'buildPartialBlock(first:)' and 'buildPartialBlock(accumulated:next:)' with sufficient availability for this call site [#ResultBuilderMethods]
 21 |                 // Expanded UI (when user long-presses)
 22 |                 DynamicIslandExpandedRegion(.leading) {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:20:27: error: result builder 'DynamicIslandExpandedContentBuilder' does not implement any 'buildBlock' or a combination of 'buildPartialBlock(first:)' and 'buildPartialBlock(accumulated:next:)' with sufficient availability for this call site [#ResultBuilderMethods]
 18 |             LockScreenLiveActivityView(context: context)
 19 |         } dynamicIsland: { context in
 20 |             DynamicIsland {
    |                           `- error: result builder 'DynamicIslandExpandedContentBuilder' does not implement any 'buildBlock' or a combination of 'buildPartialBlock(first:)' and 'buildPartialBlock(accumulated:next:)' with sufficient availability for this call site [#ResultBuilderMethods]
 21 |                 // Expanded UI (when user long-presses)
 22 |                 DynamicIslandExpandedRegion(.leading) {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:20:13: error: generic parameter 'Expanded' could not be inferred
 18 |             LockScreenLiveActivityView(context: context)
 19 |         } dynamicIsland: { context in
 20 |             DynamicIsland {
    |             `- error: generic parameter 'Expanded' could not be inferred
 21 |                 // Expanded UI (when user long-presses)
 22 |                 DynamicIslandExpandedRegion(.leading) {

WidgetKit.DynamicIsland.init:2:8: note: in call to initializer
1 | struct DynamicIsland {
2 | public init<Expanded, CompactLeading, CompactTrailing, Minimal>(@DynamicIslandExpandedContentBuilder expanded: @escaping () -> DynamicIslandExpandedContent<Expanded>, @ViewBuilder compactLeading: @escaping () -> CompactLeading, @ViewBuilder compactTrailing: @escaping () -> CompactTrailing, @ViewBuilder minimal: @escaping () -> Minimal) where Expanded : View, CompactLeading : View, CompactTrailing : View, Minimal : View}
  |        `- note: in call to initializer
3 | 

[#ResultBuilderMethods]: <https://docs.swift.org/compiler/documentation/diagnostics/result-builder-methods>
[45/65] Compiling BooksTrackerFeature ImportLiveActivityView.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/CSVImportSupportingViews.swift:19:22: error: conformance of 'BounceSymbolEffect' to 'IndefiniteSymbolEffect' is only available in macOS 15.0 or newer
  4 | // MARK: - Import Results View
  5 | 
  6 | struct ImportResultsView: View {
    |        `- note: add '@available' attribute to enclosing struct
  7 |     let result: CSVImportService.ImportResult
  8 |     let themeStore: iOS26ThemeStore
    :
 10 |     @State private var showingErrorDetails = false
 11 | 
 12 |     var body: some View {
    |         `- note: add '@available' attribute to enclosing property
 13 |         ScrollView {
 14 |             VStack(spacing: 32) {
    :
 17 |                     .font(.system(size: 80))
 18 |                     .foregroundStyle(Color.green.gradient)
 19 |                     .symbolEffect(.bounce)
    |                      |- error: conformance of 'BounceSymbolEffect' to 'IndefiniteSymbolEffect' is only available in macOS 15.0 or newer
    |                      `- note: add 'if #available' version check
 20 | 
 21 |                 // Summary

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/CSVImportSupportingViews.swift:421:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
419 |             }
420 |             .navigationTitle("Import Preview")
421 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
422 |             .toolbar {
423 |                 ToolbarItem(placement: .confirmationAction) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/CSVImportSupportingViews.swift:566:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
564 |             }
565 |             .navigationTitle("Import Errors")
566 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
567 |             .toolbar {
568 |                 ToolbarItem(placement: .confirmationAction) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:12:44: error: 'ActivityAttributes' is unavailable in macOS
 10 | /// Displays on Lock Screen and Dynamic Island during long imports
 11 | @available(iOS 16.2, *)
 12 | public struct CSVImportActivityAttributes: ActivityAttributes, Sendable {
    |                                            `- error: 'ActivityAttributes' is unavailable in macOS
 13 | 
 14 |     // MARK: - Static Content

ActivityKit.ActivityAttributes:6:17: note: 'ActivityAttributes' has been explicitly marked unavailable here
4 | @available(tvOS, unavailable)
5 | @available(watchOS, unavailable)
6 | public protocol ActivityAttributes : Decodable, Encodable {
  |                 `- note: 'ActivityAttributes' has been explicitly marked unavailable here
7 |     associatedtype ContentState : Decodable, Encodable, Hashable
8 | }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:176:34: error: 'Activity' is unavailable in macOS
174 |     // MARK: - Properties
175 | 
176 |     private var currentActivity: Activity<CSVImportActivityAttributes>?
    |                                  `- error: 'Activity' is unavailable in macOS
177 |     private let updateThrottle: TimeInterval = 1.0 // Update every 1 second minimum
178 |     private var lastUpdateTime: Date?

ActivityKit.Activity:6:14: note: 'Activity' has been explicitly marked unavailable here
  4 | @available(tvOS, unavailable)
  5 | @available(watchOS, unavailable)
  6 | public class Activity<Attributes> : Identifiable where Attributes : ActivityAttributes {
    |              `- note: 'Activity' has been explicitly marked unavailable here
  7 |     public typealias ContentState = Attributes.ContentState
  8 |     @available(iOS, deprecated: 16.2, message: "Use request(attributes:content:pushType:) instead")

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:212:32: error: 'Activity' is unavailable in macOS
210 | 
211 |         do {
212 |             let activity = try Activity<CSVImportActivityAttributes>.request(
    |                                `- error: 'Activity' is unavailable in macOS
213 |                 attributes: attributes,
214 |                 content: .init(state: contentState, staleDate: nil),

ActivityKit.Activity:6:14: note: 'Activity' has been explicitly marked unavailable here
  4 | @available(tvOS, unavailable)
  5 | @available(watchOS, unavailable)
  6 | public class Activity<Attributes> : Identifiable where Attributes : ActivityAttributes {
    |              `- note: 'Activity' has been explicitly marked unavailable here
  7 |     public typealias ContentState = Attributes.ContentState
  8 |     @available(iOS, deprecated: 16.2, message: "Use request(attributes:content:pushType:) instead")

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:212:70: error: 'request(attributes:content:pushType:)' is unavailable in macOS
210 | 
211 |         do {
212 |             let activity = try Activity<CSVImportActivityAttributes>.request(
    |                                                                      `- error: 'request(attributes:content:pushType:)' is unavailable in macOS
213 |                 attributes: attributes,
214 |                 content: .init(state: contentState, staleDate: nil),

ActivityKit.Activity.request:7:22: note: 'request(attributes:content:pushType:)' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public static func request(attributes: Attributes, content: ActivityContent<Activity<Attributes>.ContentState>, pushType: PushType? = nil) throws -> Activity<Attributes>}
  |                      `- note: 'request(attributes:content:pushType:)' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:247:34: error: 'content' is unavailable in macOS
245 | 
246 |         let contentState = CSVImportActivityAttributes.ContentState(
247 |             totalBooks: activity.content.state.totalBooks,
    |                                  `- error: 'content' is unavailable in macOS
248 |             processedBooks: processedBooks,
249 |             successfulImports: successfulImports,

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:255:33: error: 'content' is unavailable in macOS
253 |             statusMessage: generateStatusMessage(
254 |                 processed: processedBooks,
255 |                 total: activity.content.state.totalBooks
    |                                 `- error: 'content' is unavailable in macOS
256 |             ),
257 |             estimatedTimeRemaining: estimatedTimeRemaining,

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:258:33: error: 'content' is unavailable in macOS
256 |             ),
257 |             estimatedTimeRemaining: estimatedTimeRemaining,
258 |             startTime: activity.content.state.startTime
    |                                 `- error: 'content' is unavailable in macOS
259 |         )
260 | 

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:261:24: error: 'update' is unavailable in macOS
259 |         )
260 | 
261 |         await activity.update(.init(state: contentState, staleDate: nil))
    |                        `- error: 'update' is unavailable in macOS
262 |         lastUpdateTime = Date()
263 |     }

ActivityKit.Activity.update:7:15: note: 'update' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public func update(_ content: ActivityContent<Activity<Attributes>.ContentState>) async}
  |               `- note: 'update' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:272:40: error: 'content' is unavailable in macOS
270 |         }
271 | 
272 |         var enrichmentState = activity.content.state
    |                                        `- error: 'content' is unavailable in macOS
273 |         enrichmentState.isEnrichmentPhase = true
274 |         enrichmentState.enrichedBooks = 0

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:280:24: error: 'update' is unavailable in macOS
278 |         enrichmentState.estimatedTimeRemaining = nil
279 | 
280 |         await activity.update(.init(state: enrichmentState, staleDate: nil))
    |                        `- error: 'update' is unavailable in macOS
281 |         print("📱 Live Activity transitioned to enrichment phase (\(totalBooksToEnrich) books)")
282 |     }

ActivityKit.Activity.update:7:15: note: 'update' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public func update(_ content: ActivityContent<Activity<Attributes>.ContentState>) async}
  |               `- note: 'update' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:301:40: error: 'content' is unavailable in macOS
299 |         }
300 | 
301 |         var enrichmentState = activity.content.state
    |                                        `- error: 'content' is unavailable in macOS
302 |         enrichmentState.enrichedBooks = enrichedBooks
303 |         enrichmentState.currentBookTitle = currentBookTitle

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:309:24: error: 'update' is unavailable in macOS
307 |         )
308 | 
309 |         await activity.update(.init(state: enrichmentState, staleDate: nil))
    |                        `- error: 'update' is unavailable in macOS
310 |         lastUpdateTime = Date()
311 |     }

ActivityKit.Activity.update:7:15: note: 'update' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public func update(_ content: ActivityContent<Activity<Attributes>.ContentState>) async}
  |               `- note: 'update' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:320:35: error: 'content' is unavailable in macOS
318 |         guard let activity = currentActivity else { return }
319 | 
320 |         var finalState = activity.content.state
    |                                   `- error: 'content' is unavailable in macOS
321 |         finalState.statusMessage = finalMessage
322 | 

ActivityKit.Activity.content:7:14: note: 'content' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public var content: ActivityContent<Activity<Attributes>.ContentState> { get }}
  |              `- note: 'content' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportActivityAttributes.swift:323:24: error: 'end(_:dismissalPolicy:)' is unavailable in macOS
321 |         finalState.statusMessage = finalMessage
322 | 
323 |         await activity.end(
    |                        `- error: 'end(_:dismissalPolicy:)' is unavailable in macOS
324 |             .init(state: finalState, staleDate: Date().addingTimeInterval(dismissAfter)),
325 |             dismissalPolicy: .after(.now + dismissAfter)

ActivityKit.Activity.end:7:15: note: 'end(_:dismissalPolicy:)' has been explicitly marked unavailable here
5 |   @available(tvOS, unavailable)
6 |   @available(watchOS, unavailable)
7 |   public func end(_ content: ActivityContent<Activity<Attributes>.ContentState>?, dismissalPolicy: ActivityUIDismissalPolicy = .default) async}
  |               `- note: 'end(_:dismissalPolicy:)' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:55:18: error: 'ActivityViewContext' is unavailable in macOS
 53 | @available(iOS 16.2, *)
 54 | struct LockScreenLiveActivityView: View {
 55 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
 56 | 
 57 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:216:18: error: 'ActivityViewContext' is unavailable in macOS
214 | @available(iOS 16.2, *)
215 | struct ExpandedLeadingView: View {
216 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
217 | 
218 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:245:18: error: 'ActivityViewContext' is unavailable in macOS
243 | @available(iOS 16.2, *)
244 | struct ExpandedTrailingView: View {
245 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
246 | 
247 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:268:18: error: 'ActivityViewContext' is unavailable in macOS
266 | @available(iOS 16.2, *)
267 | struct ExpandedCenterView: View {
268 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
269 | 
270 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:286:18: error: 'ActivityViewContext' is unavailable in macOS
284 | @available(iOS 16.2, *)
285 | struct ExpandedBottomView: View {
286 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
287 | 
288 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:361:18: error: 'ActivityViewContext' is unavailable in macOS
359 | @available(iOS 16.2, *)
360 | struct CompactLeadingView: View {
361 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
362 | 
363 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:372:18: error: 'ActivityViewContext' is unavailable in macOS
370 | @available(iOS 16.2, *)
371 | struct CompactTrailingView: View {
372 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
373 | 
374 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:394:18: error: 'ActivityViewContext' is unavailable in macOS
392 | @available(iOS 16.2, *)
393 | struct MinimalView: View {
394 |     let context: ActivityViewContext<CSVImportActivityAttributes>
    |                  `- error: 'ActivityViewContext' is unavailable in macOS
395 | 
396 |     var body: some View {

WidgetKit.ActivityViewContext:7:15: note: 'ActivityViewContext' has been explicitly marked unavailable here
 5 | @available(watchOS, unavailable)
 6 | @available(visionOS, unavailable)
 7 | public struct ActivityViewContext<Attributes> where Attributes : ActivityAttributes {
   |               `- note: 'ActivityViewContext' has been explicitly marked unavailable here
 8 |     public let activityID: String
 9 |     public let attributes: Attributes

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:20:27: error: result builder 'DynamicIslandExpandedContentBuilder' does not implement any 'buildBlock' or a combination of 'buildPartialBlock(first:)' and 'buildPartialBlock(accumulated:next:)' with sufficient availability for this call site [#ResultBuilderMethods]
 18 |             LockScreenLiveActivityView(context: context)
 19 |         } dynamicIsland: { context in
 20 |             DynamicIsland {
    |                           `- error: result builder 'DynamicIslandExpandedContentBuilder' does not implement any 'buildBlock' or a combination of 'buildPartialBlock(first:)' and 'buildPartialBlock(accumulated:next:)' with sufficient availability for this call site [#ResultBuilderMethods]
 21 |                 // Expanded UI (when user long-presses)
 22 |                 DynamicIslandExpandedRegion(.leading) {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:20:27: error: result builder 'DynamicIslandExpandedContentBuilder' does not implement any 'buildBlock' or a combination of 'buildPartialBlock(first:)' and 'buildPartialBlock(accumulated:next:)' with sufficient availability for this call site [#ResultBuilderMethods]
 18 |             LockScreenLiveActivityView(context: context)
 19 |         } dynamicIsland: { context in
 20 |             DynamicIsland {
    |                           `- error: result builder 'DynamicIslandExpandedContentBuilder' does not implement any 'buildBlock' or a combination of 'buildPartialBlock(first:)' and 'buildPartialBlock(accumulated:next:)' with sufficient availability for this call site [#ResultBuilderMethods]
 21 |                 // Expanded UI (when user long-presses)
 22 |                 DynamicIslandExpandedRegion(.leading) {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/CSVImport/ImportLiveActivityView.swift:20:13: error: generic parameter 'Expanded' could not be inferred
 18 |             LockScreenLiveActivityView(context: context)
 19 |         } dynamicIsland: { context in
 20 |             DynamicIsland {
    |             `- error: generic parameter 'Expanded' could not be inferred
 21 |                 // Expanded UI (when user long-presses)
 22 |                 DynamicIslandExpandedRegion(.leading) {

WidgetKit.DynamicIsland.init:2:8: note: in call to initializer
1 | struct DynamicIsland {
2 | public init<Expanded, CompactLeading, CompactTrailing, Minimal>(@DynamicIslandExpandedContentBuilder expanded: @escaping () -> DynamicIslandExpandedContent<Expanded>, @ViewBuilder compactLeading: @escaping () -> CompactLeading, @ViewBuilder compactTrailing: @escaping () -> CompactTrailing, @ViewBuilder minimal: @escaping () -> Minimal) where Expanded : View, CompactLeading : View, CompactTrailing : View, Minimal : View}
  |        `- note: in call to initializer
3 | 

[#ResultBuilderMethods]: <https://docs.swift.org/compiler/documentation/diagnostics/result-builder-methods>
[46/65] Compiling BooksTrackerFeature iOS26FluidGridSystem.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26GlassModifiers.swift:130:58: error: 'navigationBar' is unavailable in macOS
128 |     func body(content: Content) -> some View {
129 |         content
130 |             .toolbarBackground(.ultraThinMaterial, for: .navigationBar)
    |                                                          `- error: 'navigationBar' is unavailable in macOS
131 |             .toolbarBackground(.ultraThinMaterial, for: .tabBar)
132 |             .background {

SwiftUI.ToolbarPlacement.navigationBar:3:21: note: 'navigationBar' has been explicitly marked unavailable here
1 | struct ToolbarPlacement {
2 | @available(macOS, unavailable)
3 |   public static var navigationBar: ToolbarPlacement { get }}
  |                     `- note: 'navigationBar' has been explicitly marked unavailable here
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26GlassModifiers.swift:131:58: error: 'tabBar' is unavailable in macOS
129 |         content
130 |             .toolbarBackground(.ultraThinMaterial, for: .navigationBar)
131 |             .toolbarBackground(.ultraThinMaterial, for: .tabBar)
    |                                                          `- error: 'tabBar' is unavailable in macOS
132 |             .background {
133 |                 // Extends content under navigation

SwiftUI.ToolbarPlacement.tabBar:4:21: note: 'tabBar' has been explicitly marked unavailable here
2 | @available(macOS, unavailable)
3 |   @available(watchOS, unavailable)
4 |   public static var tabBar: ToolbarPlacement { get }}
  |                     `- note: 'tabBar' has been explicitly marked unavailable here
5 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:57:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
  55 | 
  56 |     @Namespace private var layoutTransition
  57 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
  58 |     @Environment(\.iOS26ThemeStore) private var themeStore
  59 |     @Environment(\.modelContext) private var modelContext

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:57:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
  55 | 
  56 |     @Namespace private var layoutTransition
  57 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
  58 |     @Environment(\.iOS26ThemeStore) private var themeStore
  59 |     @Environment(\.modelContext) private var modelContext

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:399:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
 376 | /// ✅ CRITICAL FIXES: This version addresses all the major iOS UX issues
 377 | @MainActor
 378 | public struct UltraOptimizedLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
 379 |     // ✅ FIX 1: Highly optimized SwiftData query - only loads library entries
 380 |     @Query(
     :
 397 |     
 398 |     @Namespace private var layoutTransition
 399 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
 400 |     @Environment(\.iOS26ThemeStore) private var themeStore
 401 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:399:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
 376 | /// ✅ CRITICAL FIXES: This version addresses all the major iOS UX issues
 377 | @MainActor
 378 | public struct UltraOptimizedLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
 379 |     // ✅ FIX 1: Highly optimized SwiftData query - only loads library entries
 380 |     @Query(
     :
 397 |     
 398 |     @Namespace private var layoutTransition
 399 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
 400 |     @Environment(\.iOS26ThemeStore) private var themeStore
 401 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:84:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
  82 |             }
  83 |             .navigationTitle("My Library")
  84 |             .navigationBarTitleDisplayMode(.large)
     |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
  85 |             .toolbar {
  86 |                 ToolbarItemGroup(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:86:46: error: 'navigationBarTrailing' is unavailable in macOS
  84 |             .navigationBarTitleDisplayMode(.large)
  85 |             .toolbar {
  86 |                 ToolbarItemGroup(placement: .navigationBarTrailing) {
     |                                              `- error: 'navigationBarTrailing' is unavailable in macOS
  87 |                     Button {
  88 |                         showingDiversityInsights.toggle()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:166:14: error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
 124 |     // MARK: - Main Content View
 125 | 
 126 |     private var mainContentView: some View {
     |                 `- note: add '@available' attribute to enclosing property
 127 |         ZStack {
 128 |             Color.clear
     :
 164 |                 }
 165 |             }
 166 |             .scrollPosition($scrollPosition)
     |              |- error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
     |              `- note: add 'if #available' version check
 167 |         }
 168 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:422:10: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 420 |         }
 421 |         .navigationTitle("My Library")
 422 |         .navigationBarTitleDisplayMode(.large)
     |          `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 423 |         .toolbar {
 424 |             ToolbarItemGroup(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:424:42: error: 'navigationBarTrailing' is unavailable in macOS
 422 |         .navigationBarTitleDisplayMode(.large)
 423 |         .toolbar {
 424 |             ToolbarItemGroup(placement: .navigationBarTrailing) {
     |                                          `- error: 'navigationBarTrailing' is unavailable in macOS
 425 |                 Button {
 426 |                     showingDiversityInsights.toggle()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:500:10: error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
 376 | /// ✅ CRITICAL FIXES: This version addresses all the major iOS UX issues
 377 | @MainActor
 378 | public struct UltraOptimizedLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
 379 |     // ✅ FIX 1: Highly optimized SwiftData query - only loads library entries
 380 |     @Query(
     :
 483 |     }
 484 | 
 485 |     private var contentScrollView: some View {
     |                 `- note: add '@available' attribute to enclosing property
 486 |         ScrollView {
 487 |             LazyVStack(spacing: 0) {
     :
 498 |             }
 499 |         }
 500 |         .scrollPosition($scrollPosition)
     |          |- error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
     |          `- note: add 'if #available' version check
 501 |         .scrollIndicators(.visible, axes: .vertical)
 502 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:818:14: error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
 792 | // MARK: - Cultural Diversity Insights Sheet
 793 | 
 794 | struct CulturalDiversityInsightsView: View {
     |        `- note: add '@available' attribute to enclosing struct
 795 |     let works: [Work]
 796 |     @Environment(\.dismiss) private var dismiss
 797 |     @Environment(\.iOS26ThemeStore) private var themeStore
 798 | 
 799 |     var body: some View {
     |         `- note: add '@available' attribute to enclosing property
 800 |         NavigationStack {
 801 |             ScrollView {
     :
 816 |                 .scrollTargetLayout()
 817 |             }
 818 |             .scrollEdgeEffectStyle(.soft, for: .top)
     |              |- error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
     |              `- note: add 'if #available' version check
 819 |             .navigationTitle("Cultural Insights")
 820 |             .navigationBarTitleDisplayMode(.inline)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:820:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 818 |             .scrollEdgeEffectStyle(.soft, for: .top)
 819 |             .navigationTitle("Cultural Insights")
 820 |             .navigationBarTitleDisplayMode(.inline)
     |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 821 |             .toolbar {
 822 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:822:41: error: 'navigationBarTrailing' is unavailable in macOS
 820 |             .navigationBarTitleDisplayMode(.inline)
 821 |             .toolbar {
 822 |                 ToolbarItem(placement: .navigationBarTrailing) {
     |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
 823 |                     Button("Done") {
 824 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidListRow.swift:498:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
496 | 
497 |     private func triggerHapticFeedback() {
498 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
499 |         impactFeedback.impactOccurred()
500 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidListRow.swift:498:64: error: cannot infer contextual base in reference to member 'medium'
496 | 
497 |     private func triggerHapticFeedback() {
498 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                                                                `- error: cannot infer contextual base in reference to member 'medium'
499 |         impactFeedback.impactOccurred()
500 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidListRow.swift:513:36: error: cannot find 'UINotificationFeedbackGenerator' in scope
511 |         userEntry.touch()
512 | 
513 |         let notificationFeedback = UINotificationFeedbackGenerator()
    |                                    `- error: cannot find 'UINotificationFeedbackGenerator' in scope
514 |         notificationFeedback.notificationOccurred(.success)
515 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidListRow.swift:514:52: error: cannot infer contextual base in reference to member 'success'
512 | 
513 |         let notificationFeedback = UINotificationFeedbackGenerator()
514 |         notificationFeedback.notificationOccurred(.success)
    |                                                    `- error: cannot infer contextual base in reference to member 'success'
515 |     }
516 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:117:14: error: value of type 'some View' has no member 'textInputAutocapitalization'
115 |             .font(.system(size: 17, weight: .medium))
116 |             .foregroundStyle(colorScheme == .dark ? .white : .primary)
117 |             .textInputAutocapitalization(.never)
    |              `- error: value of type 'some View' has no member 'textInputAutocapitalization'
118 |             .onSubmit {
119 |                 onSearchSubmit()

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:117:43: error: cannot infer contextual base in reference to member 'never'
115 |             .font(.system(size: 17, weight: .medium))
116 |             .foregroundStyle(colorScheme == .dark ? .white : .primary)
117 |             .textInputAutocapitalization(.never)
    |                                           `- error: cannot infer contextual base in reference to member 'never'
118 |             .onSubmit {
119 |                 onSearchSubmit()

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:140:26: error: cannot find 'UIImpactFeedbackGenerator' in scope
138 | 
139 |             // Provide haptic feedback
140 |             let impact = UIImpactFeedbackGenerator(style: .light)
    |                          `- error: cannot find 'UIImpactFeedbackGenerator' in scope
141 |             impact.impactOccurred()
142 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:140:60: error: cannot infer contextual base in reference to member 'light'
138 | 
139 |             // Provide haptic feedback
140 |             let impact = UIImpactFeedbackGenerator(style: .light)
    |                                                            `- error: cannot infer contextual base in reference to member 'light'
141 |             impact.impactOccurred()
142 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:203:26: error: cannot find 'UIImpactFeedbackGenerator' in scope
201 | 
202 |             // Haptic feedback
203 |             let impact = UIImpactFeedbackGenerator(style: .light)
    |                          `- error: cannot find 'UIImpactFeedbackGenerator' in scope
204 |             impact.impactOccurred()
205 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:203:60: error: cannot infer contextual base in reference to member 'light'
201 | 
202 |             // Haptic feedback
203 |             let impact = UIImpactFeedbackGenerator(style: .light)
    |                                                            `- error: cannot infer contextual base in reference to member 'light'
204 |             impact.impactOccurred()
205 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:245:22: error: cannot find 'UIImpactFeedbackGenerator' in scope
243 | 
244 |         // Haptic feedback
245 |         let impact = UIImpactFeedbackGenerator(style: .light)
    |                      `- error: cannot find 'UIImpactFeedbackGenerator' in scope
246 |         impact.impactOccurred()
247 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:245:56: error: cannot infer contextual base in reference to member 'light'
243 | 
244 |         // Haptic feedback
245 |         let impact = UIImpactFeedbackGenerator(style: .light)
    |                                                        `- error: cannot infer contextual base in reference to member 'light'
246 |         impact.impactOccurred()
247 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26ThemeSystem.swift:291:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
289 |     @MainActor
290 |     private func triggerHapticFeedback() {
291 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
292 |         impactFeedback.impactOccurred()
293 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26ThemeSystem.swift:291:64: error: cannot infer contextual base in reference to member 'medium'
289 |     @MainActor
290 |     private func triggerHapticFeedback() {
291 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                                                                `- error: cannot infer contextual base in reference to member 'medium'
292 |         impactFeedback.impactOccurred()
293 |     }
[47/65] Compiling BooksTrackerFeature iOS26GlassModifiers.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26GlassModifiers.swift:130:58: error: 'navigationBar' is unavailable in macOS
128 |     func body(content: Content) -> some View {
129 |         content
130 |             .toolbarBackground(.ultraThinMaterial, for: .navigationBar)
    |                                                          `- error: 'navigationBar' is unavailable in macOS
131 |             .toolbarBackground(.ultraThinMaterial, for: .tabBar)
132 |             .background {

SwiftUI.ToolbarPlacement.navigationBar:3:21: note: 'navigationBar' has been explicitly marked unavailable here
1 | struct ToolbarPlacement {
2 | @available(macOS, unavailable)
3 |   public static var navigationBar: ToolbarPlacement { get }}
  |                     `- note: 'navigationBar' has been explicitly marked unavailable here
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26GlassModifiers.swift:131:58: error: 'tabBar' is unavailable in macOS
129 |         content
130 |             .toolbarBackground(.ultraThinMaterial, for: .navigationBar)
131 |             .toolbarBackground(.ultraThinMaterial, for: .tabBar)
    |                                                          `- error: 'tabBar' is unavailable in macOS
132 |             .background {
133 |                 // Extends content under navigation

SwiftUI.ToolbarPlacement.tabBar:4:21: note: 'tabBar' has been explicitly marked unavailable here
2 | @available(macOS, unavailable)
3 |   @available(watchOS, unavailable)
4 |   public static var tabBar: ToolbarPlacement { get }}
  |                     `- note: 'tabBar' has been explicitly marked unavailable here
5 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:57:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
  55 | 
  56 |     @Namespace private var layoutTransition
  57 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
  58 |     @Environment(\.iOS26ThemeStore) private var themeStore
  59 |     @Environment(\.modelContext) private var modelContext

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:57:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
  55 | 
  56 |     @Namespace private var layoutTransition
  57 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
  58 |     @Environment(\.iOS26ThemeStore) private var themeStore
  59 |     @Environment(\.modelContext) private var modelContext

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:399:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
 376 | /// ✅ CRITICAL FIXES: This version addresses all the major iOS UX issues
 377 | @MainActor
 378 | public struct UltraOptimizedLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
 379 |     // ✅ FIX 1: Highly optimized SwiftData query - only loads library entries
 380 |     @Query(
     :
 397 |     
 398 |     @Namespace private var layoutTransition
 399 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
 400 |     @Environment(\.iOS26ThemeStore) private var themeStore
 401 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:399:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
 376 | /// ✅ CRITICAL FIXES: This version addresses all the major iOS UX issues
 377 | @MainActor
 378 | public struct UltraOptimizedLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
 379 |     // ✅ FIX 1: Highly optimized SwiftData query - only loads library entries
 380 |     @Query(
     :
 397 |     
 398 |     @Namespace private var layoutTransition
 399 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
 400 |     @Environment(\.iOS26ThemeStore) private var themeStore
 401 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:84:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
  82 |             }
  83 |             .navigationTitle("My Library")
  84 |             .navigationBarTitleDisplayMode(.large)
     |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
  85 |             .toolbar {
  86 |                 ToolbarItemGroup(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:86:46: error: 'navigationBarTrailing' is unavailable in macOS
  84 |             .navigationBarTitleDisplayMode(.large)
  85 |             .toolbar {
  86 |                 ToolbarItemGroup(placement: .navigationBarTrailing) {
     |                                              `- error: 'navigationBarTrailing' is unavailable in macOS
  87 |                     Button {
  88 |                         showingDiversityInsights.toggle()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:166:14: error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
 124 |     // MARK: - Main Content View
 125 | 
 126 |     private var mainContentView: some View {
     |                 `- note: add '@available' attribute to enclosing property
 127 |         ZStack {
 128 |             Color.clear
     :
 164 |                 }
 165 |             }
 166 |             .scrollPosition($scrollPosition)
     |              |- error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
     |              `- note: add 'if #available' version check
 167 |         }
 168 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:422:10: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 420 |         }
 421 |         .navigationTitle("My Library")
 422 |         .navigationBarTitleDisplayMode(.large)
     |          `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 423 |         .toolbar {
 424 |             ToolbarItemGroup(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:424:42: error: 'navigationBarTrailing' is unavailable in macOS
 422 |         .navigationBarTitleDisplayMode(.large)
 423 |         .toolbar {
 424 |             ToolbarItemGroup(placement: .navigationBarTrailing) {
     |                                          `- error: 'navigationBarTrailing' is unavailable in macOS
 425 |                 Button {
 426 |                     showingDiversityInsights.toggle()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:500:10: error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
 376 | /// ✅ CRITICAL FIXES: This version addresses all the major iOS UX issues
 377 | @MainActor
 378 | public struct UltraOptimizedLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
 379 |     // ✅ FIX 1: Highly optimized SwiftData query - only loads library entries
 380 |     @Query(
     :
 483 |     }
 484 | 
 485 |     private var contentScrollView: some View {
     |                 `- note: add '@available' attribute to enclosing property
 486 |         ScrollView {
 487 |             LazyVStack(spacing: 0) {
     :
 498 |             }
 499 |         }
 500 |         .scrollPosition($scrollPosition)
     |          |- error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
     |          `- note: add 'if #available' version check
 501 |         .scrollIndicators(.visible, axes: .vertical)
 502 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:818:14: error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
 792 | // MARK: - Cultural Diversity Insights Sheet
 793 | 
 794 | struct CulturalDiversityInsightsView: View {
     |        `- note: add '@available' attribute to enclosing struct
 795 |     let works: [Work]
 796 |     @Environment(\.dismiss) private var dismiss
 797 |     @Environment(\.iOS26ThemeStore) private var themeStore
 798 | 
 799 |     var body: some View {
     |         `- note: add '@available' attribute to enclosing property
 800 |         NavigationStack {
 801 |             ScrollView {
     :
 816 |                 .scrollTargetLayout()
 817 |             }
 818 |             .scrollEdgeEffectStyle(.soft, for: .top)
     |              |- error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
     |              `- note: add 'if #available' version check
 819 |             .navigationTitle("Cultural Insights")
 820 |             .navigationBarTitleDisplayMode(.inline)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:820:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 818 |             .scrollEdgeEffectStyle(.soft, for: .top)
 819 |             .navigationTitle("Cultural Insights")
 820 |             .navigationBarTitleDisplayMode(.inline)
     |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 821 |             .toolbar {
 822 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:822:41: error: 'navigationBarTrailing' is unavailable in macOS
 820 |             .navigationBarTitleDisplayMode(.inline)
 821 |             .toolbar {
 822 |                 ToolbarItem(placement: .navigationBarTrailing) {
     |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
 823 |                     Button("Done") {
 824 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidListRow.swift:498:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
496 | 
497 |     private func triggerHapticFeedback() {
498 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
499 |         impactFeedback.impactOccurred()
500 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidListRow.swift:498:64: error: cannot infer contextual base in reference to member 'medium'
496 | 
497 |     private func triggerHapticFeedback() {
498 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                                                                `- error: cannot infer contextual base in reference to member 'medium'
499 |         impactFeedback.impactOccurred()
500 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidListRow.swift:513:36: error: cannot find 'UINotificationFeedbackGenerator' in scope
511 |         userEntry.touch()
512 | 
513 |         let notificationFeedback = UINotificationFeedbackGenerator()
    |                                    `- error: cannot find 'UINotificationFeedbackGenerator' in scope
514 |         notificationFeedback.notificationOccurred(.success)
515 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidListRow.swift:514:52: error: cannot infer contextual base in reference to member 'success'
512 | 
513 |         let notificationFeedback = UINotificationFeedbackGenerator()
514 |         notificationFeedback.notificationOccurred(.success)
    |                                                    `- error: cannot infer contextual base in reference to member 'success'
515 |     }
516 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:117:14: error: value of type 'some View' has no member 'textInputAutocapitalization'
115 |             .font(.system(size: 17, weight: .medium))
116 |             .foregroundStyle(colorScheme == .dark ? .white : .primary)
117 |             .textInputAutocapitalization(.never)
    |              `- error: value of type 'some View' has no member 'textInputAutocapitalization'
118 |             .onSubmit {
119 |                 onSearchSubmit()

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:117:43: error: cannot infer contextual base in reference to member 'never'
115 |             .font(.system(size: 17, weight: .medium))
116 |             .foregroundStyle(colorScheme == .dark ? .white : .primary)
117 |             .textInputAutocapitalization(.never)
    |                                           `- error: cannot infer contextual base in reference to member 'never'
118 |             .onSubmit {
119 |                 onSearchSubmit()

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:140:26: error: cannot find 'UIImpactFeedbackGenerator' in scope
138 | 
139 |             // Provide haptic feedback
140 |             let impact = UIImpactFeedbackGenerator(style: .light)
    |                          `- error: cannot find 'UIImpactFeedbackGenerator' in scope
141 |             impact.impactOccurred()
142 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:140:60: error: cannot infer contextual base in reference to member 'light'
138 | 
139 |             // Provide haptic feedback
140 |             let impact = UIImpactFeedbackGenerator(style: .light)
    |                                                            `- error: cannot infer contextual base in reference to member 'light'
141 |             impact.impactOccurred()
142 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:203:26: error: cannot find 'UIImpactFeedbackGenerator' in scope
201 | 
202 |             // Haptic feedback
203 |             let impact = UIImpactFeedbackGenerator(style: .light)
    |                          `- error: cannot find 'UIImpactFeedbackGenerator' in scope
204 |             impact.impactOccurred()
205 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:203:60: error: cannot infer contextual base in reference to member 'light'
201 | 
202 |             // Haptic feedback
203 |             let impact = UIImpactFeedbackGenerator(style: .light)
    |                                                            `- error: cannot infer contextual base in reference to member 'light'
204 |             impact.impactOccurred()
205 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:245:22: error: cannot find 'UIImpactFeedbackGenerator' in scope
243 | 
244 |         // Haptic feedback
245 |         let impact = UIImpactFeedbackGenerator(style: .light)
    |                      `- error: cannot find 'UIImpactFeedbackGenerator' in scope
246 |         impact.impactOccurred()
247 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:245:56: error: cannot infer contextual base in reference to member 'light'
243 | 
244 |         // Haptic feedback
245 |         let impact = UIImpactFeedbackGenerator(style: .light)
    |                                                        `- error: cannot infer contextual base in reference to member 'light'
246 |         impact.impactOccurred()
247 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26ThemeSystem.swift:291:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
289 |     @MainActor
290 |     private func triggerHapticFeedback() {
291 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
292 |         impactFeedback.impactOccurred()
293 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26ThemeSystem.swift:291:64: error: cannot infer contextual base in reference to member 'medium'
289 |     @MainActor
290 |     private func triggerHapticFeedback() {
291 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                                                                `- error: cannot infer contextual base in reference to member 'medium'
292 |         impactFeedback.impactOccurred()
293 |     }
[48/65] Compiling BooksTrackerFeature iOS26LiquidLibraryView.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26GlassModifiers.swift:130:58: error: 'navigationBar' is unavailable in macOS
128 |     func body(content: Content) -> some View {
129 |         content
130 |             .toolbarBackground(.ultraThinMaterial, for: .navigationBar)
    |                                                          `- error: 'navigationBar' is unavailable in macOS
131 |             .toolbarBackground(.ultraThinMaterial, for: .tabBar)
132 |             .background {

SwiftUI.ToolbarPlacement.navigationBar:3:21: note: 'navigationBar' has been explicitly marked unavailable here
1 | struct ToolbarPlacement {
2 | @available(macOS, unavailable)
3 |   public static var navigationBar: ToolbarPlacement { get }}
  |                     `- note: 'navigationBar' has been explicitly marked unavailable here
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26GlassModifiers.swift:131:58: error: 'tabBar' is unavailable in macOS
129 |         content
130 |             .toolbarBackground(.ultraThinMaterial, for: .navigationBar)
131 |             .toolbarBackground(.ultraThinMaterial, for: .tabBar)
    |                                                          `- error: 'tabBar' is unavailable in macOS
132 |             .background {
133 |                 // Extends content under navigation

SwiftUI.ToolbarPlacement.tabBar:4:21: note: 'tabBar' has been explicitly marked unavailable here
2 | @available(macOS, unavailable)
3 |   @available(watchOS, unavailable)
4 |   public static var tabBar: ToolbarPlacement { get }}
  |                     `- note: 'tabBar' has been explicitly marked unavailable here
5 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:57:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
  55 | 
  56 |     @Namespace private var layoutTransition
  57 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
  58 |     @Environment(\.iOS26ThemeStore) private var themeStore
  59 |     @Environment(\.modelContext) private var modelContext

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:57:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
  55 | 
  56 |     @Namespace private var layoutTransition
  57 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
  58 |     @Environment(\.iOS26ThemeStore) private var themeStore
  59 |     @Environment(\.modelContext) private var modelContext

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:399:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
 376 | /// ✅ CRITICAL FIXES: This version addresses all the major iOS UX issues
 377 | @MainActor
 378 | public struct UltraOptimizedLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
 379 |     // ✅ FIX 1: Highly optimized SwiftData query - only loads library entries
 380 |     @Query(
     :
 397 |     
 398 |     @Namespace private var layoutTransition
 399 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
 400 |     @Environment(\.iOS26ThemeStore) private var themeStore
 401 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:399:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
 376 | /// ✅ CRITICAL FIXES: This version addresses all the major iOS UX issues
 377 | @MainActor
 378 | public struct UltraOptimizedLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
 379 |     // ✅ FIX 1: Highly optimized SwiftData query - only loads library entries
 380 |     @Query(
     :
 397 |     
 398 |     @Namespace private var layoutTransition
 399 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
 400 |     @Environment(\.iOS26ThemeStore) private var themeStore
 401 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:84:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
  82 |             }
  83 |             .navigationTitle("My Library")
  84 |             .navigationBarTitleDisplayMode(.large)
     |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
  85 |             .toolbar {
  86 |                 ToolbarItemGroup(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:86:46: error: 'navigationBarTrailing' is unavailable in macOS
  84 |             .navigationBarTitleDisplayMode(.large)
  85 |             .toolbar {
  86 |                 ToolbarItemGroup(placement: .navigationBarTrailing) {
     |                                              `- error: 'navigationBarTrailing' is unavailable in macOS
  87 |                     Button {
  88 |                         showingDiversityInsights.toggle()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:166:14: error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
 124 |     // MARK: - Main Content View
 125 | 
 126 |     private var mainContentView: some View {
     |                 `- note: add '@available' attribute to enclosing property
 127 |         ZStack {
 128 |             Color.clear
     :
 164 |                 }
 165 |             }
 166 |             .scrollPosition($scrollPosition)
     |              |- error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
     |              `- note: add 'if #available' version check
 167 |         }
 168 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:422:10: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 420 |         }
 421 |         .navigationTitle("My Library")
 422 |         .navigationBarTitleDisplayMode(.large)
     |          `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 423 |         .toolbar {
 424 |             ToolbarItemGroup(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:424:42: error: 'navigationBarTrailing' is unavailable in macOS
 422 |         .navigationBarTitleDisplayMode(.large)
 423 |         .toolbar {
 424 |             ToolbarItemGroup(placement: .navigationBarTrailing) {
     |                                          `- error: 'navigationBarTrailing' is unavailable in macOS
 425 |                 Button {
 426 |                     showingDiversityInsights.toggle()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:500:10: error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
 376 | /// ✅ CRITICAL FIXES: This version addresses all the major iOS UX issues
 377 | @MainActor
 378 | public struct UltraOptimizedLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
 379 |     // ✅ FIX 1: Highly optimized SwiftData query - only loads library entries
 380 |     @Query(
     :
 483 |     }
 484 | 
 485 |     private var contentScrollView: some View {
     |                 `- note: add '@available' attribute to enclosing property
 486 |         ScrollView {
 487 |             LazyVStack(spacing: 0) {
     :
 498 |             }
 499 |         }
 500 |         .scrollPosition($scrollPosition)
     |          |- error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
     |          `- note: add 'if #available' version check
 501 |         .scrollIndicators(.visible, axes: .vertical)
 502 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:818:14: error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
 792 | // MARK: - Cultural Diversity Insights Sheet
 793 | 
 794 | struct CulturalDiversityInsightsView: View {
     |        `- note: add '@available' attribute to enclosing struct
 795 |     let works: [Work]
 796 |     @Environment(\.dismiss) private var dismiss
 797 |     @Environment(\.iOS26ThemeStore) private var themeStore
 798 | 
 799 |     var body: some View {
     |         `- note: add '@available' attribute to enclosing property
 800 |         NavigationStack {
 801 |             ScrollView {
     :
 816 |                 .scrollTargetLayout()
 817 |             }
 818 |             .scrollEdgeEffectStyle(.soft, for: .top)
     |              |- error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
     |              `- note: add 'if #available' version check
 819 |             .navigationTitle("Cultural Insights")
 820 |             .navigationBarTitleDisplayMode(.inline)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:820:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 818 |             .scrollEdgeEffectStyle(.soft, for: .top)
 819 |             .navigationTitle("Cultural Insights")
 820 |             .navigationBarTitleDisplayMode(.inline)
     |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 821 |             .toolbar {
 822 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:822:41: error: 'navigationBarTrailing' is unavailable in macOS
 820 |             .navigationBarTitleDisplayMode(.inline)
 821 |             .toolbar {
 822 |                 ToolbarItem(placement: .navigationBarTrailing) {
     |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
 823 |                     Button("Done") {
 824 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidListRow.swift:498:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
496 | 
497 |     private func triggerHapticFeedback() {
498 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
499 |         impactFeedback.impactOccurred()
500 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidListRow.swift:498:64: error: cannot infer contextual base in reference to member 'medium'
496 | 
497 |     private func triggerHapticFeedback() {
498 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                                                                `- error: cannot infer contextual base in reference to member 'medium'
499 |         impactFeedback.impactOccurred()
500 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidListRow.swift:513:36: error: cannot find 'UINotificationFeedbackGenerator' in scope
511 |         userEntry.touch()
512 | 
513 |         let notificationFeedback = UINotificationFeedbackGenerator()
    |                                    `- error: cannot find 'UINotificationFeedbackGenerator' in scope
514 |         notificationFeedback.notificationOccurred(.success)
515 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidListRow.swift:514:52: error: cannot infer contextual base in reference to member 'success'
512 | 
513 |         let notificationFeedback = UINotificationFeedbackGenerator()
514 |         notificationFeedback.notificationOccurred(.success)
    |                                                    `- error: cannot infer contextual base in reference to member 'success'
515 |     }
516 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:117:14: error: value of type 'some View' has no member 'textInputAutocapitalization'
115 |             .font(.system(size: 17, weight: .medium))
116 |             .foregroundStyle(colorScheme == .dark ? .white : .primary)
117 |             .textInputAutocapitalization(.never)
    |              `- error: value of type 'some View' has no member 'textInputAutocapitalization'
118 |             .onSubmit {
119 |                 onSearchSubmit()

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:117:43: error: cannot infer contextual base in reference to member 'never'
115 |             .font(.system(size: 17, weight: .medium))
116 |             .foregroundStyle(colorScheme == .dark ? .white : .primary)
117 |             .textInputAutocapitalization(.never)
    |                                           `- error: cannot infer contextual base in reference to member 'never'
118 |             .onSubmit {
119 |                 onSearchSubmit()

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:140:26: error: cannot find 'UIImpactFeedbackGenerator' in scope
138 | 
139 |             // Provide haptic feedback
140 |             let impact = UIImpactFeedbackGenerator(style: .light)
    |                          `- error: cannot find 'UIImpactFeedbackGenerator' in scope
141 |             impact.impactOccurred()
142 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:140:60: error: cannot infer contextual base in reference to member 'light'
138 | 
139 |             // Provide haptic feedback
140 |             let impact = UIImpactFeedbackGenerator(style: .light)
    |                                                            `- error: cannot infer contextual base in reference to member 'light'
141 |             impact.impactOccurred()
142 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:203:26: error: cannot find 'UIImpactFeedbackGenerator' in scope
201 | 
202 |             // Haptic feedback
203 |             let impact = UIImpactFeedbackGenerator(style: .light)
    |                          `- error: cannot find 'UIImpactFeedbackGenerator' in scope
204 |             impact.impactOccurred()
205 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:203:60: error: cannot infer contextual base in reference to member 'light'
201 | 
202 |             // Haptic feedback
203 |             let impact = UIImpactFeedbackGenerator(style: .light)
    |                                                            `- error: cannot infer contextual base in reference to member 'light'
204 |             impact.impactOccurred()
205 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:245:22: error: cannot find 'UIImpactFeedbackGenerator' in scope
243 | 
244 |         // Haptic feedback
245 |         let impact = UIImpactFeedbackGenerator(style: .light)
    |                      `- error: cannot find 'UIImpactFeedbackGenerator' in scope
246 |         impact.impactOccurred()
247 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:245:56: error: cannot infer contextual base in reference to member 'light'
243 | 
244 |         // Haptic feedback
245 |         let impact = UIImpactFeedbackGenerator(style: .light)
    |                                                        `- error: cannot infer contextual base in reference to member 'light'
246 |         impact.impactOccurred()
247 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26ThemeSystem.swift:291:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
289 |     @MainActor
290 |     private func triggerHapticFeedback() {
291 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
292 |         impactFeedback.impactOccurred()
293 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26ThemeSystem.swift:291:64: error: cannot infer contextual base in reference to member 'medium'
289 |     @MainActor
290 |     private func triggerHapticFeedback() {
291 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                                                                `- error: cannot infer contextual base in reference to member 'medium'
292 |         impactFeedback.impactOccurred()
293 |     }
[49/65] Compiling BooksTrackerFeature iOS26LiquidListRow.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26GlassModifiers.swift:130:58: error: 'navigationBar' is unavailable in macOS
128 |     func body(content: Content) -> some View {
129 |         content
130 |             .toolbarBackground(.ultraThinMaterial, for: .navigationBar)
    |                                                          `- error: 'navigationBar' is unavailable in macOS
131 |             .toolbarBackground(.ultraThinMaterial, for: .tabBar)
132 |             .background {

SwiftUI.ToolbarPlacement.navigationBar:3:21: note: 'navigationBar' has been explicitly marked unavailable here
1 | struct ToolbarPlacement {
2 | @available(macOS, unavailable)
3 |   public static var navigationBar: ToolbarPlacement { get }}
  |                     `- note: 'navigationBar' has been explicitly marked unavailable here
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26GlassModifiers.swift:131:58: error: 'tabBar' is unavailable in macOS
129 |         content
130 |             .toolbarBackground(.ultraThinMaterial, for: .navigationBar)
131 |             .toolbarBackground(.ultraThinMaterial, for: .tabBar)
    |                                                          `- error: 'tabBar' is unavailable in macOS
132 |             .background {
133 |                 // Extends content under navigation

SwiftUI.ToolbarPlacement.tabBar:4:21: note: 'tabBar' has been explicitly marked unavailable here
2 | @available(macOS, unavailable)
3 |   @available(watchOS, unavailable)
4 |   public static var tabBar: ToolbarPlacement { get }}
  |                     `- note: 'tabBar' has been explicitly marked unavailable here
5 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:57:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
  55 | 
  56 |     @Namespace private var layoutTransition
  57 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
  58 |     @Environment(\.iOS26ThemeStore) private var themeStore
  59 |     @Environment(\.modelContext) private var modelContext

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:57:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
  55 | 
  56 |     @Namespace private var layoutTransition
  57 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
  58 |     @Environment(\.iOS26ThemeStore) private var themeStore
  59 |     @Environment(\.modelContext) private var modelContext

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:399:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
 376 | /// ✅ CRITICAL FIXES: This version addresses all the major iOS UX issues
 377 | @MainActor
 378 | public struct UltraOptimizedLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
 379 |     // ✅ FIX 1: Highly optimized SwiftData query - only loads library entries
 380 |     @Query(
     :
 397 |     
 398 |     @Namespace private var layoutTransition
 399 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
 400 |     @Environment(\.iOS26ThemeStore) private var themeStore
 401 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:399:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
 376 | /// ✅ CRITICAL FIXES: This version addresses all the major iOS UX issues
 377 | @MainActor
 378 | public struct UltraOptimizedLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
 379 |     // ✅ FIX 1: Highly optimized SwiftData query - only loads library entries
 380 |     @Query(
     :
 397 |     
 398 |     @Namespace private var layoutTransition
 399 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
 400 |     @Environment(\.iOS26ThemeStore) private var themeStore
 401 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:84:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
  82 |             }
  83 |             .navigationTitle("My Library")
  84 |             .navigationBarTitleDisplayMode(.large)
     |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
  85 |             .toolbar {
  86 |                 ToolbarItemGroup(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:86:46: error: 'navigationBarTrailing' is unavailable in macOS
  84 |             .navigationBarTitleDisplayMode(.large)
  85 |             .toolbar {
  86 |                 ToolbarItemGroup(placement: .navigationBarTrailing) {
     |                                              `- error: 'navigationBarTrailing' is unavailable in macOS
  87 |                     Button {
  88 |                         showingDiversityInsights.toggle()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:166:14: error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
 124 |     // MARK: - Main Content View
 125 | 
 126 |     private var mainContentView: some View {
     |                 `- note: add '@available' attribute to enclosing property
 127 |         ZStack {
 128 |             Color.clear
     :
 164 |                 }
 165 |             }
 166 |             .scrollPosition($scrollPosition)
     |              |- error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
     |              `- note: add 'if #available' version check
 167 |         }
 168 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:422:10: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 420 |         }
 421 |         .navigationTitle("My Library")
 422 |         .navigationBarTitleDisplayMode(.large)
     |          `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 423 |         .toolbar {
 424 |             ToolbarItemGroup(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:424:42: error: 'navigationBarTrailing' is unavailable in macOS
 422 |         .navigationBarTitleDisplayMode(.large)
 423 |         .toolbar {
 424 |             ToolbarItemGroup(placement: .navigationBarTrailing) {
     |                                          `- error: 'navigationBarTrailing' is unavailable in macOS
 425 |                 Button {
 426 |                     showingDiversityInsights.toggle()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:500:10: error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
 376 | /// ✅ CRITICAL FIXES: This version addresses all the major iOS UX issues
 377 | @MainActor
 378 | public struct UltraOptimizedLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
 379 |     // ✅ FIX 1: Highly optimized SwiftData query - only loads library entries
 380 |     @Query(
     :
 483 |     }
 484 | 
 485 |     private var contentScrollView: some View {
     |                 `- note: add '@available' attribute to enclosing property
 486 |         ScrollView {
 487 |             LazyVStack(spacing: 0) {
     :
 498 |             }
 499 |         }
 500 |         .scrollPosition($scrollPosition)
     |          |- error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
     |          `- note: add 'if #available' version check
 501 |         .scrollIndicators(.visible, axes: .vertical)
 502 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:818:14: error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
 792 | // MARK: - Cultural Diversity Insights Sheet
 793 | 
 794 | struct CulturalDiversityInsightsView: View {
     |        `- note: add '@available' attribute to enclosing struct
 795 |     let works: [Work]
 796 |     @Environment(\.dismiss) private var dismiss
 797 |     @Environment(\.iOS26ThemeStore) private var themeStore
 798 | 
 799 |     var body: some View {
     |         `- note: add '@available' attribute to enclosing property
 800 |         NavigationStack {
 801 |             ScrollView {
     :
 816 |                 .scrollTargetLayout()
 817 |             }
 818 |             .scrollEdgeEffectStyle(.soft, for: .top)
     |              |- error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
     |              `- note: add 'if #available' version check
 819 |             .navigationTitle("Cultural Insights")
 820 |             .navigationBarTitleDisplayMode(.inline)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:820:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 818 |             .scrollEdgeEffectStyle(.soft, for: .top)
 819 |             .navigationTitle("Cultural Insights")
 820 |             .navigationBarTitleDisplayMode(.inline)
     |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 821 |             .toolbar {
 822 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:822:41: error: 'navigationBarTrailing' is unavailable in macOS
 820 |             .navigationBarTitleDisplayMode(.inline)
 821 |             .toolbar {
 822 |                 ToolbarItem(placement: .navigationBarTrailing) {
     |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
 823 |                     Button("Done") {
 824 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidListRow.swift:498:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
496 | 
497 |     private func triggerHapticFeedback() {
498 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
499 |         impactFeedback.impactOccurred()
500 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidListRow.swift:498:64: error: cannot infer contextual base in reference to member 'medium'
496 | 
497 |     private func triggerHapticFeedback() {
498 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                                                                `- error: cannot infer contextual base in reference to member 'medium'
499 |         impactFeedback.impactOccurred()
500 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidListRow.swift:513:36: error: cannot find 'UINotificationFeedbackGenerator' in scope
511 |         userEntry.touch()
512 | 
513 |         let notificationFeedback = UINotificationFeedbackGenerator()
    |                                    `- error: cannot find 'UINotificationFeedbackGenerator' in scope
514 |         notificationFeedback.notificationOccurred(.success)
515 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidListRow.swift:514:52: error: cannot infer contextual base in reference to member 'success'
512 | 
513 |         let notificationFeedback = UINotificationFeedbackGenerator()
514 |         notificationFeedback.notificationOccurred(.success)
    |                                                    `- error: cannot infer contextual base in reference to member 'success'
515 |     }
516 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:117:14: error: value of type 'some View' has no member 'textInputAutocapitalization'
115 |             .font(.system(size: 17, weight: .medium))
116 |             .foregroundStyle(colorScheme == .dark ? .white : .primary)
117 |             .textInputAutocapitalization(.never)
    |              `- error: value of type 'some View' has no member 'textInputAutocapitalization'
118 |             .onSubmit {
119 |                 onSearchSubmit()

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:117:43: error: cannot infer contextual base in reference to member 'never'
115 |             .font(.system(size: 17, weight: .medium))
116 |             .foregroundStyle(colorScheme == .dark ? .white : .primary)
117 |             .textInputAutocapitalization(.never)
    |                                           `- error: cannot infer contextual base in reference to member 'never'
118 |             .onSubmit {
119 |                 onSearchSubmit()

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:140:26: error: cannot find 'UIImpactFeedbackGenerator' in scope
138 | 
139 |             // Provide haptic feedback
140 |             let impact = UIImpactFeedbackGenerator(style: .light)
    |                          `- error: cannot find 'UIImpactFeedbackGenerator' in scope
141 |             impact.impactOccurred()
142 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:140:60: error: cannot infer contextual base in reference to member 'light'
138 | 
139 |             // Provide haptic feedback
140 |             let impact = UIImpactFeedbackGenerator(style: .light)
    |                                                            `- error: cannot infer contextual base in reference to member 'light'
141 |             impact.impactOccurred()
142 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:203:26: error: cannot find 'UIImpactFeedbackGenerator' in scope
201 | 
202 |             // Haptic feedback
203 |             let impact = UIImpactFeedbackGenerator(style: .light)
    |                          `- error: cannot find 'UIImpactFeedbackGenerator' in scope
204 |             impact.impactOccurred()
205 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:203:60: error: cannot infer contextual base in reference to member 'light'
201 | 
202 |             // Haptic feedback
203 |             let impact = UIImpactFeedbackGenerator(style: .light)
    |                                                            `- error: cannot infer contextual base in reference to member 'light'
204 |             impact.impactOccurred()
205 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:245:22: error: cannot find 'UIImpactFeedbackGenerator' in scope
243 | 
244 |         // Haptic feedback
245 |         let impact = UIImpactFeedbackGenerator(style: .light)
    |                      `- error: cannot find 'UIImpactFeedbackGenerator' in scope
246 |         impact.impactOccurred()
247 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:245:56: error: cannot infer contextual base in reference to member 'light'
243 | 
244 |         // Haptic feedback
245 |         let impact = UIImpactFeedbackGenerator(style: .light)
    |                                                        `- error: cannot infer contextual base in reference to member 'light'
246 |         impact.impactOccurred()
247 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26ThemeSystem.swift:291:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
289 |     @MainActor
290 |     private func triggerHapticFeedback() {
291 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
292 |         impactFeedback.impactOccurred()
293 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26ThemeSystem.swift:291:64: error: cannot infer contextual base in reference to member 'medium'
289 |     @MainActor
290 |     private func triggerHapticFeedback() {
291 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                                                                `- error: cannot infer contextual base in reference to member 'medium'
292 |         impactFeedback.impactOccurred()
293 |     }
[50/65] Compiling BooksTrackerFeature iOS26MorphingSearchBar.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26GlassModifiers.swift:130:58: error: 'navigationBar' is unavailable in macOS
128 |     func body(content: Content) -> some View {
129 |         content
130 |             .toolbarBackground(.ultraThinMaterial, for: .navigationBar)
    |                                                          `- error: 'navigationBar' is unavailable in macOS
131 |             .toolbarBackground(.ultraThinMaterial, for: .tabBar)
132 |             .background {

SwiftUI.ToolbarPlacement.navigationBar:3:21: note: 'navigationBar' has been explicitly marked unavailable here
1 | struct ToolbarPlacement {
2 | @available(macOS, unavailable)
3 |   public static var navigationBar: ToolbarPlacement { get }}
  |                     `- note: 'navigationBar' has been explicitly marked unavailable here
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26GlassModifiers.swift:131:58: error: 'tabBar' is unavailable in macOS
129 |         content
130 |             .toolbarBackground(.ultraThinMaterial, for: .navigationBar)
131 |             .toolbarBackground(.ultraThinMaterial, for: .tabBar)
    |                                                          `- error: 'tabBar' is unavailable in macOS
132 |             .background {
133 |                 // Extends content under navigation

SwiftUI.ToolbarPlacement.tabBar:4:21: note: 'tabBar' has been explicitly marked unavailable here
2 | @available(macOS, unavailable)
3 |   @available(watchOS, unavailable)
4 |   public static var tabBar: ToolbarPlacement { get }}
  |                     `- note: 'tabBar' has been explicitly marked unavailable here
5 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:57:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
  55 | 
  56 |     @Namespace private var layoutTransition
  57 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
  58 |     @Environment(\.iOS26ThemeStore) private var themeStore
  59 |     @Environment(\.modelContext) private var modelContext

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:57:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
  55 | 
  56 |     @Namespace private var layoutTransition
  57 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
  58 |     @Environment(\.iOS26ThemeStore) private var themeStore
  59 |     @Environment(\.modelContext) private var modelContext

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:399:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
 376 | /// ✅ CRITICAL FIXES: This version addresses all the major iOS UX issues
 377 | @MainActor
 378 | public struct UltraOptimizedLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
 379 |     // ✅ FIX 1: Highly optimized SwiftData query - only loads library entries
 380 |     @Query(
     :
 397 |     
 398 |     @Namespace private var layoutTransition
 399 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
 400 |     @Environment(\.iOS26ThemeStore) private var themeStore
 401 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:399:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
 376 | /// ✅ CRITICAL FIXES: This version addresses all the major iOS UX issues
 377 | @MainActor
 378 | public struct UltraOptimizedLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
 379 |     // ✅ FIX 1: Highly optimized SwiftData query - only loads library entries
 380 |     @Query(
     :
 397 |     
 398 |     @Namespace private var layoutTransition
 399 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
 400 |     @Environment(\.iOS26ThemeStore) private var themeStore
 401 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:84:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
  82 |             }
  83 |             .navigationTitle("My Library")
  84 |             .navigationBarTitleDisplayMode(.large)
     |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
  85 |             .toolbar {
  86 |                 ToolbarItemGroup(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:86:46: error: 'navigationBarTrailing' is unavailable in macOS
  84 |             .navigationBarTitleDisplayMode(.large)
  85 |             .toolbar {
  86 |                 ToolbarItemGroup(placement: .navigationBarTrailing) {
     |                                              `- error: 'navigationBarTrailing' is unavailable in macOS
  87 |                     Button {
  88 |                         showingDiversityInsights.toggle()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:166:14: error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
 124 |     // MARK: - Main Content View
 125 | 
 126 |     private var mainContentView: some View {
     |                 `- note: add '@available' attribute to enclosing property
 127 |         ZStack {
 128 |             Color.clear
     :
 164 |                 }
 165 |             }
 166 |             .scrollPosition($scrollPosition)
     |              |- error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
     |              `- note: add 'if #available' version check
 167 |         }
 168 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:422:10: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 420 |         }
 421 |         .navigationTitle("My Library")
 422 |         .navigationBarTitleDisplayMode(.large)
     |          `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 423 |         .toolbar {
 424 |             ToolbarItemGroup(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:424:42: error: 'navigationBarTrailing' is unavailable in macOS
 422 |         .navigationBarTitleDisplayMode(.large)
 423 |         .toolbar {
 424 |             ToolbarItemGroup(placement: .navigationBarTrailing) {
     |                                          `- error: 'navigationBarTrailing' is unavailable in macOS
 425 |                 Button {
 426 |                     showingDiversityInsights.toggle()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:500:10: error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
 376 | /// ✅ CRITICAL FIXES: This version addresses all the major iOS UX issues
 377 | @MainActor
 378 | public struct UltraOptimizedLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
 379 |     // ✅ FIX 1: Highly optimized SwiftData query - only loads library entries
 380 |     @Query(
     :
 483 |     }
 484 | 
 485 |     private var contentScrollView: some View {
     |                 `- note: add '@available' attribute to enclosing property
 486 |         ScrollView {
 487 |             LazyVStack(spacing: 0) {
     :
 498 |             }
 499 |         }
 500 |         .scrollPosition($scrollPosition)
     |          |- error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
     |          `- note: add 'if #available' version check
 501 |         .scrollIndicators(.visible, axes: .vertical)
 502 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:818:14: error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
 792 | // MARK: - Cultural Diversity Insights Sheet
 793 | 
 794 | struct CulturalDiversityInsightsView: View {
     |        `- note: add '@available' attribute to enclosing struct
 795 |     let works: [Work]
 796 |     @Environment(\.dismiss) private var dismiss
 797 |     @Environment(\.iOS26ThemeStore) private var themeStore
 798 | 
 799 |     var body: some View {
     |         `- note: add '@available' attribute to enclosing property
 800 |         NavigationStack {
 801 |             ScrollView {
     :
 816 |                 .scrollTargetLayout()
 817 |             }
 818 |             .scrollEdgeEffectStyle(.soft, for: .top)
     |              |- error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
     |              `- note: add 'if #available' version check
 819 |             .navigationTitle("Cultural Insights")
 820 |             .navigationBarTitleDisplayMode(.inline)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:820:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 818 |             .scrollEdgeEffectStyle(.soft, for: .top)
 819 |             .navigationTitle("Cultural Insights")
 820 |             .navigationBarTitleDisplayMode(.inline)
     |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 821 |             .toolbar {
 822 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:822:41: error: 'navigationBarTrailing' is unavailable in macOS
 820 |             .navigationBarTitleDisplayMode(.inline)
 821 |             .toolbar {
 822 |                 ToolbarItem(placement: .navigationBarTrailing) {
     |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
 823 |                     Button("Done") {
 824 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidListRow.swift:498:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
496 | 
497 |     private func triggerHapticFeedback() {
498 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
499 |         impactFeedback.impactOccurred()
500 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidListRow.swift:498:64: error: cannot infer contextual base in reference to member 'medium'
496 | 
497 |     private func triggerHapticFeedback() {
498 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                                                                `- error: cannot infer contextual base in reference to member 'medium'
499 |         impactFeedback.impactOccurred()
500 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidListRow.swift:513:36: error: cannot find 'UINotificationFeedbackGenerator' in scope
511 |         userEntry.touch()
512 | 
513 |         let notificationFeedback = UINotificationFeedbackGenerator()
    |                                    `- error: cannot find 'UINotificationFeedbackGenerator' in scope
514 |         notificationFeedback.notificationOccurred(.success)
515 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidListRow.swift:514:52: error: cannot infer contextual base in reference to member 'success'
512 | 
513 |         let notificationFeedback = UINotificationFeedbackGenerator()
514 |         notificationFeedback.notificationOccurred(.success)
    |                                                    `- error: cannot infer contextual base in reference to member 'success'
515 |     }
516 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:117:14: error: value of type 'some View' has no member 'textInputAutocapitalization'
115 |             .font(.system(size: 17, weight: .medium))
116 |             .foregroundStyle(colorScheme == .dark ? .white : .primary)
117 |             .textInputAutocapitalization(.never)
    |              `- error: value of type 'some View' has no member 'textInputAutocapitalization'
118 |             .onSubmit {
119 |                 onSearchSubmit()

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:117:43: error: cannot infer contextual base in reference to member 'never'
115 |             .font(.system(size: 17, weight: .medium))
116 |             .foregroundStyle(colorScheme == .dark ? .white : .primary)
117 |             .textInputAutocapitalization(.never)
    |                                           `- error: cannot infer contextual base in reference to member 'never'
118 |             .onSubmit {
119 |                 onSearchSubmit()

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:140:26: error: cannot find 'UIImpactFeedbackGenerator' in scope
138 | 
139 |             // Provide haptic feedback
140 |             let impact = UIImpactFeedbackGenerator(style: .light)
    |                          `- error: cannot find 'UIImpactFeedbackGenerator' in scope
141 |             impact.impactOccurred()
142 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:140:60: error: cannot infer contextual base in reference to member 'light'
138 | 
139 |             // Provide haptic feedback
140 |             let impact = UIImpactFeedbackGenerator(style: .light)
    |                                                            `- error: cannot infer contextual base in reference to member 'light'
141 |             impact.impactOccurred()
142 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:203:26: error: cannot find 'UIImpactFeedbackGenerator' in scope
201 | 
202 |             // Haptic feedback
203 |             let impact = UIImpactFeedbackGenerator(style: .light)
    |                          `- error: cannot find 'UIImpactFeedbackGenerator' in scope
204 |             impact.impactOccurred()
205 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:203:60: error: cannot infer contextual base in reference to member 'light'
201 | 
202 |             // Haptic feedback
203 |             let impact = UIImpactFeedbackGenerator(style: .light)
    |                                                            `- error: cannot infer contextual base in reference to member 'light'
204 |             impact.impactOccurred()
205 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:245:22: error: cannot find 'UIImpactFeedbackGenerator' in scope
243 | 
244 |         // Haptic feedback
245 |         let impact = UIImpactFeedbackGenerator(style: .light)
    |                      `- error: cannot find 'UIImpactFeedbackGenerator' in scope
246 |         impact.impactOccurred()
247 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:245:56: error: cannot infer contextual base in reference to member 'light'
243 | 
244 |         // Haptic feedback
245 |         let impact = UIImpactFeedbackGenerator(style: .light)
    |                                                        `- error: cannot infer contextual base in reference to member 'light'
246 |         impact.impactOccurred()
247 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26ThemeSystem.swift:291:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
289 |     @MainActor
290 |     private func triggerHapticFeedback() {
291 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
292 |         impactFeedback.impactOccurred()
293 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26ThemeSystem.swift:291:64: error: cannot infer contextual base in reference to member 'medium'
289 |     @MainActor
290 |     private func triggerHapticFeedback() {
291 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                                                                `- error: cannot infer contextual base in reference to member 'medium'
292 |         impactFeedback.impactOccurred()
293 |     }
[51/65] Compiling BooksTrackerFeature iOS26ThemeSystem.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26GlassModifiers.swift:130:58: error: 'navigationBar' is unavailable in macOS
128 |     func body(content: Content) -> some View {
129 |         content
130 |             .toolbarBackground(.ultraThinMaterial, for: .navigationBar)
    |                                                          `- error: 'navigationBar' is unavailable in macOS
131 |             .toolbarBackground(.ultraThinMaterial, for: .tabBar)
132 |             .background {

SwiftUI.ToolbarPlacement.navigationBar:3:21: note: 'navigationBar' has been explicitly marked unavailable here
1 | struct ToolbarPlacement {
2 | @available(macOS, unavailable)
3 |   public static var navigationBar: ToolbarPlacement { get }}
  |                     `- note: 'navigationBar' has been explicitly marked unavailable here
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26GlassModifiers.swift:131:58: error: 'tabBar' is unavailable in macOS
129 |         content
130 |             .toolbarBackground(.ultraThinMaterial, for: .navigationBar)
131 |             .toolbarBackground(.ultraThinMaterial, for: .tabBar)
    |                                                          `- error: 'tabBar' is unavailable in macOS
132 |             .background {
133 |                 // Extends content under navigation

SwiftUI.ToolbarPlacement.tabBar:4:21: note: 'tabBar' has been explicitly marked unavailable here
2 | @available(macOS, unavailable)
3 |   @available(watchOS, unavailable)
4 |   public static var tabBar: ToolbarPlacement { get }}
  |                     `- note: 'tabBar' has been explicitly marked unavailable here
5 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:57:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
  55 | 
  56 |     @Namespace private var layoutTransition
  57 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
  58 |     @Environment(\.iOS26ThemeStore) private var themeStore
  59 |     @Environment(\.modelContext) private var modelContext

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:57:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
  55 | 
  56 |     @Namespace private var layoutTransition
  57 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
  58 |     @Environment(\.iOS26ThemeStore) private var themeStore
  59 |     @Environment(\.modelContext) private var modelContext

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:399:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
 376 | /// ✅ CRITICAL FIXES: This version addresses all the major iOS UX issues
 377 | @MainActor
 378 | public struct UltraOptimizedLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
 379 |     // ✅ FIX 1: Highly optimized SwiftData query - only loads library entries
 380 |     @Query(
     :
 397 |     
 398 |     @Namespace private var layoutTransition
 399 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
 400 |     @Environment(\.iOS26ThemeStore) private var themeStore
 401 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:399:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
 376 | /// ✅ CRITICAL FIXES: This version addresses all the major iOS UX issues
 377 | @MainActor
 378 | public struct UltraOptimizedLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
 379 |     // ✅ FIX 1: Highly optimized SwiftData query - only loads library entries
 380 |     @Query(
     :
 397 |     
 398 |     @Namespace private var layoutTransition
 399 |     @State private var scrollPosition = ScrollPosition()
     |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
 400 |     @Environment(\.iOS26ThemeStore) private var themeStore
 401 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:84:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
  82 |             }
  83 |             .navigationTitle("My Library")
  84 |             .navigationBarTitleDisplayMode(.large)
     |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
  85 |             .toolbar {
  86 |                 ToolbarItemGroup(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:86:46: error: 'navigationBarTrailing' is unavailable in macOS
  84 |             .navigationBarTitleDisplayMode(.large)
  85 |             .toolbar {
  86 |                 ToolbarItemGroup(placement: .navigationBarTrailing) {
     |                                              `- error: 'navigationBarTrailing' is unavailable in macOS
  87 |                     Button {
  88 |                         showingDiversityInsights.toggle()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:166:14: error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
  29 | 
  30 | @MainActor
  31 | public struct iOS26LiquidLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
  32 |     // ✅ FIX 1: Query all works, filter in-memory for library items
  33 |     // Note: SwiftData predicates cannot filter on to-many relationships
     :
 124 |     // MARK: - Main Content View
 125 | 
 126 |     private var mainContentView: some View {
     |                 `- note: add '@available' attribute to enclosing property
 127 |         ZStack {
 128 |             Color.clear
     :
 164 |                 }
 165 |             }
 166 |             .scrollPosition($scrollPosition)
     |              |- error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
     |              `- note: add 'if #available' version check
 167 |         }
 168 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:422:10: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 420 |         }
 421 |         .navigationTitle("My Library")
 422 |         .navigationBarTitleDisplayMode(.large)
     |          `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 423 |         .toolbar {
 424 |             ToolbarItemGroup(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:424:42: error: 'navigationBarTrailing' is unavailable in macOS
 422 |         .navigationBarTitleDisplayMode(.large)
 423 |         .toolbar {
 424 |             ToolbarItemGroup(placement: .navigationBarTrailing) {
     |                                          `- error: 'navigationBarTrailing' is unavailable in macOS
 425 |                 Button {
 426 |                     showingDiversityInsights.toggle()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:500:10: error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
 376 | /// ✅ CRITICAL FIXES: This version addresses all the major iOS UX issues
 377 | @MainActor
 378 | public struct UltraOptimizedLibraryView: View {
     |               `- note: add '@available' attribute to enclosing struct
 379 |     // ✅ FIX 1: Highly optimized SwiftData query - only loads library entries
 380 |     @Query(
     :
 483 |     }
 484 | 
 485 |     private var contentScrollView: some View {
     |                 `- note: add '@available' attribute to enclosing property
 486 |         ScrollView {
 487 |             LazyVStack(spacing: 0) {
     :
 498 |             }
 499 |         }
 500 |         .scrollPosition($scrollPosition)
     |          |- error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
     |          `- note: add 'if #available' version check
 501 |         .scrollIndicators(.visible, axes: .vertical)
 502 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:818:14: error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
 792 | // MARK: - Cultural Diversity Insights Sheet
 793 | 
 794 | struct CulturalDiversityInsightsView: View {
     |        `- note: add '@available' attribute to enclosing struct
 795 |     let works: [Work]
 796 |     @Environment(\.dismiss) private var dismiss
 797 |     @Environment(\.iOS26ThemeStore) private var themeStore
 798 | 
 799 |     var body: some View {
     |         `- note: add '@available' attribute to enclosing property
 800 |         NavigationStack {
 801 |             ScrollView {
     :
 816 |                 .scrollTargetLayout()
 817 |             }
 818 |             .scrollEdgeEffectStyle(.soft, for: .top)
     |              |- error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
     |              `- note: add 'if #available' version check
 819 |             .navigationTitle("Cultural Insights")
 820 |             .navigationBarTitleDisplayMode(.inline)

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:820:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 818 |             .scrollEdgeEffectStyle(.soft, for: .top)
 819 |             .navigationTitle("Cultural Insights")
 820 |             .navigationBarTitleDisplayMode(.inline)
     |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
 821 |             .toolbar {
 822 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidLibraryView.swift:822:41: error: 'navigationBarTrailing' is unavailable in macOS
 820 |             .navigationBarTitleDisplayMode(.inline)
 821 |             .toolbar {
 822 |                 ToolbarItem(placement: .navigationBarTrailing) {
     |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
 823 |                     Button("Done") {
 824 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidListRow.swift:498:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
496 | 
497 |     private func triggerHapticFeedback() {
498 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
499 |         impactFeedback.impactOccurred()
500 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidListRow.swift:498:64: error: cannot infer contextual base in reference to member 'medium'
496 | 
497 |     private func triggerHapticFeedback() {
498 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                                                                `- error: cannot infer contextual base in reference to member 'medium'
499 |         impactFeedback.impactOccurred()
500 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidListRow.swift:513:36: error: cannot find 'UINotificationFeedbackGenerator' in scope
511 |         userEntry.touch()
512 | 
513 |         let notificationFeedback = UINotificationFeedbackGenerator()
    |                                    `- error: cannot find 'UINotificationFeedbackGenerator' in scope
514 |         notificationFeedback.notificationOccurred(.success)
515 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26LiquidListRow.swift:514:52: error: cannot infer contextual base in reference to member 'success'
512 | 
513 |         let notificationFeedback = UINotificationFeedbackGenerator()
514 |         notificationFeedback.notificationOccurred(.success)
    |                                                    `- error: cannot infer contextual base in reference to member 'success'
515 |     }
516 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:117:14: error: value of type 'some View' has no member 'textInputAutocapitalization'
115 |             .font(.system(size: 17, weight: .medium))
116 |             .foregroundStyle(colorScheme == .dark ? .white : .primary)
117 |             .textInputAutocapitalization(.never)
    |              `- error: value of type 'some View' has no member 'textInputAutocapitalization'
118 |             .onSubmit {
119 |                 onSearchSubmit()

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:117:43: error: cannot infer contextual base in reference to member 'never'
115 |             .font(.system(size: 17, weight: .medium))
116 |             .foregroundStyle(colorScheme == .dark ? .white : .primary)
117 |             .textInputAutocapitalization(.never)
    |                                           `- error: cannot infer contextual base in reference to member 'never'
118 |             .onSubmit {
119 |                 onSearchSubmit()

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:140:26: error: cannot find 'UIImpactFeedbackGenerator' in scope
138 | 
139 |             // Provide haptic feedback
140 |             let impact = UIImpactFeedbackGenerator(style: .light)
    |                          `- error: cannot find 'UIImpactFeedbackGenerator' in scope
141 |             impact.impactOccurred()
142 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:140:60: error: cannot infer contextual base in reference to member 'light'
138 | 
139 |             // Provide haptic feedback
140 |             let impact = UIImpactFeedbackGenerator(style: .light)
    |                                                            `- error: cannot infer contextual base in reference to member 'light'
141 |             impact.impactOccurred()
142 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:203:26: error: cannot find 'UIImpactFeedbackGenerator' in scope
201 | 
202 |             // Haptic feedback
203 |             let impact = UIImpactFeedbackGenerator(style: .light)
    |                          `- error: cannot find 'UIImpactFeedbackGenerator' in scope
204 |             impact.impactOccurred()
205 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:203:60: error: cannot infer contextual base in reference to member 'light'
201 | 
202 |             // Haptic feedback
203 |             let impact = UIImpactFeedbackGenerator(style: .light)
    |                                                            `- error: cannot infer contextual base in reference to member 'light'
204 |             impact.impactOccurred()
205 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:245:22: error: cannot find 'UIImpactFeedbackGenerator' in scope
243 | 
244 |         // Haptic feedback
245 |         let impact = UIImpactFeedbackGenerator(style: .light)
    |                      `- error: cannot find 'UIImpactFeedbackGenerator' in scope
246 |         impact.impactOccurred()
247 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26MorphingSearchBar.swift:245:56: error: cannot infer contextual base in reference to member 'light'
243 | 
244 |         // Haptic feedback
245 |         let impact = UIImpactFeedbackGenerator(style: .light)
    |                                                        `- error: cannot infer contextual base in reference to member 'light'
246 |         impact.impactOccurred()
247 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26ThemeSystem.swift:291:30: error: cannot find 'UIImpactFeedbackGenerator' in scope
289 |     @MainActor
290 |     private func triggerHapticFeedback() {
291 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                              `- error: cannot find 'UIImpactFeedbackGenerator' in scope
292 |         impactFeedback.impactOccurred()
293 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/iOS26ThemeSystem.swift:291:64: error: cannot infer contextual base in reference to member 'medium'
289 |     @MainActor
290 |     private func triggerHapticFeedback() {
291 |         let impactFeedback = UIImpactFeedbackGenerator(style: .medium)
    |                                                                `- error: cannot infer contextual base in reference to member 'medium'
292 |         impactFeedback.impactOccurred()
293 |     }
[52/65] Compiling BooksTrackerFeature AcknowledgementsView.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AcknowledgementsView.swift:177:25: error: 'insetGrouped' is unavailable in macOS
175 |                 }
176 |             }
177 |             .listStyle(.insetGrouped)
    |                         `- error: 'insetGrouped' is unavailable in macOS
178 |             .navigationTitle("Acknowledgements")
179 |             .navigationBarTitleDisplayMode(.inline)

SwiftUI.ListStyle.insetGrouped:2:19: note: 'insetGrouped' has been explicitly marked unavailable here
1 | protocol ListStyle {
2 | public static var insetGrouped: InsetGroupedListStyle { get }}
  |                   `- note: 'insetGrouped' has been explicitly marked unavailable here
3 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AcknowledgementsView.swift:179:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
177 |             .listStyle(.insetGrouped)
178 |             .navigationTitle("Acknowledgements")
179 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
180 |             .toolbar {
181 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AcknowledgementsView.swift:181:41: error: 'navigationBarTrailing' is unavailable in macOS
179 |             .navigationBarTitleDisplayMode(.inline)
180 |             .toolbar {
181 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
182 |                     Button("Done") {
183 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:123:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
121 |             .background(themeStore.backgroundGradient)
122 |             .navigationTitle("Advanced Search")
123 |             .navigationBarTitleDisplayMode(.large)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
124 |             .toolbar {
125 |                 ToolbarItem(placement: .topBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:125:41: error: 'topBarLeading' is unavailable in macOS
123 |             .navigationBarTitleDisplayMode(.large)
124 |             .toolbar {
125 |                 ToolbarItem(placement: .topBarLeading) {
    |                                         `- error: 'topBarLeading' is unavailable in macOS
126 |                     Button("Cancel") {
127 |                         dismiss()

SwiftUI.ToolbarItemPlacement.topBarLeading:5:21: note: 'topBarLeading' has been explicitly marked unavailable here
3 |   @backDeployed(before: iOS 17.0, tvOS 17.0)
4 |   @available(macOS, unavailable)
5 |   public static var topBarLeading: ToolbarItemPlacement { get }}
  |                     `- note: 'topBarLeading' has been explicitly marked unavailable here
6 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:132:41: error: 'topBarTrailing' is unavailable in macOS
130 |                 }
131 | 
132 |                 ToolbarItem(placement: .topBarTrailing) {
    |                                         `- error: 'topBarTrailing' is unavailable in macOS
133 |                     Button("Clear") {
134 |                         clearAllFields()

SwiftUI.ToolbarItemPlacement.topBarTrailing:5:21: note: 'topBarTrailing' has been explicitly marked unavailable here
3 |   @backDeployed(before: iOS 17.0, tvOS 17.0)
4 |   @available(macOS, unavailable)
5 |   public static var topBarTrailing: ToolbarItemPlacement { get }}
  |                     `- note: 'topBarTrailing' has been explicitly marked unavailable here
6 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:209:28: error: extra argument 'keyboardType' in call
207 |             focused: $focusedField,
208 |             field: .isbn,
209 |             keyboardType: .numberPad
    |                            `- error: extra argument 'keyboardType' in call
210 |         )
211 |         .accessibilityLabel("ISBN field")

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:209:28: error: cannot infer contextual base in reference to member 'numberPad'
207 |             focused: $focusedField,
208 |             field: .isbn,
209 |             keyboardType: .numberPad
    |                            `- error: cannot infer contextual base in reference to member 'numberPad'
210 |         )
211 |         .accessibilityLabel("ISBN field")

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:372:25: error: cannot find 'UIImpactFeedbackGenerator' in scope
370 | 
371 |         // Haptic feedback
372 |         let generator = UIImpactFeedbackGenerator(style: .medium)
    |                         `- error: cannot find 'UIImpactFeedbackGenerator' in scope
373 |         generator.impactOccurred()
374 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:372:59: error: cannot infer contextual base in reference to member 'medium'
370 | 
371 |         // Haptic feedback
372 |         let generator = UIImpactFeedbackGenerator(style: .medium)
    |                                                           `- error: cannot infer contextual base in reference to member 'medium'
373 |         generator.impactOccurred()
374 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:389:25: error: cannot find 'UINotificationFeedbackGenerator' in scope
387 | 
388 |         // Haptic feedback
389 |         let generator = UINotificationFeedbackGenerator()
    |                         `- error: cannot find 'UINotificationFeedbackGenerator' in scope
390 |         generator.notificationOccurred(.success)
391 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:390:41: error: cannot infer contextual base in reference to member 'success'
388 |         // Haptic feedback
389 |         let generator = UINotificationFeedbackGenerator()
390 |         generator.notificationOccurred(.success)
    |                                         `- error: cannot infer contextual base in reference to member 'success'
391 |     }
392 | }

macro expansion @ObservationTracked:1:47: error: cannot find type 'ScanResult' in scope
`- /Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:367:32: note: expanded code originates here
365 |     var confirmedCount: Int = 0
366 |     var uncertainCount: Int = 0
367 |     var scanResult: ScanResult?
    +--- macro expansion @ObservationTracked ---------------------------
    |1 | @ObservationIgnored private  var _scanResult: ScanResult?
    |  |                                               `- error: cannot find type 'ScanResult' in scope
    +-------------------------------------------------------------------
368 | 
369 |     // Real-time progress tracking

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:367:21: error: cannot find type 'ScanResult' in scope
365 |     var confirmedCount: Int = 0
366 |     var uncertainCount: Int = 0
367 |     var scanResult: ScanResult?
    |                     `- error: cannot find type 'ScanResult' in scope
368 | 
369 |     // Real-time progress tracking

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:396:32: error: cannot find type 'UIImage' in scope
394 | 
395 |     /// Process captured image with WebSocket real-time progress tracking
396 |     func processImage(_ image: UIImage) async {
    |                                `- error: cannot find type 'UIImage' in scope
397 |         scanState = .processing
398 |         currentProgress = 0.0

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:77:17: error: cannot find 'ScanResultsView' in scope
 75 |             }
 76 |             .sheet(isPresented: $showingResults) {
 77 |                 ScanResultsView(
    |                 `- error: cannot find 'ScanResultsView' in scope
 78 |                     scanResult: scanModel.scanResult,
 79 |                     modelContext: modelContext,

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:29:47: error: cannot find type 'UIImage' in scope
 27 |     // MARK: - Initialization
 28 | 
 29 |     public init(onCaptureComplete: @escaping (UIImage) -> Void) {
    |                                               `- error: cannot find type 'UIImage' in scope
 30 |         self.onCaptureComplete = onCaptureComplete
 31 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:78:33: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfScanModel>'
 76 |             .sheet(isPresented: $showingResults) {
 77 |                 ScanResultsView(
 78 |                     scanResult: scanModel.scanResult,
    |                                 `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfScanModel>'
 79 |                     modelContext: modelContext,
 80 |                     onDismiss: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:89:31: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfScanModel>'
 87 |                 BookshelfCameraView { capturedImage in
 88 |                     Task {
 89 |                         await scanModel.processImage(capturedImage)
    |                               `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfScanModel>'
 90 |                         if scanModel.scanState == .completed {
 91 |                             showingResults = true

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:89:41: error: cannot call value of non-function type 'Binding<Subject>'
 87 |                 BookshelfCameraView { capturedImage in
 88 |                     Task {
 89 |                         await scanModel.processImage(capturedImage)
    |                                         `- error: cannot call value of non-function type 'Binding<Subject>'
 90 |                         if scanModel.scanState == .completed {
 91 |                             showingResults = true

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:186:36: error: cannot find 'UIImage' in scope
184 |                 Task {
185 |                     if let data = try? await photosPickerItem?.loadTransferable(type: Data.self),
186 |                        let image = UIImage(data: data) {
    |                                    `- error: cannot find 'UIImage' in scope
187 |                         await scanModel.processImage(image)
188 |                         if scanModel.scanState == .completed {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:404:58: error: cannot find 'BookshelfAIService' in scope
402 |         do {
403 |             // Use new WebSocket method for real-time progress updates
404 |             let (detectedBooks, suggestions) = try await BookshelfAIService.shared.processBookshelfImageWithWebSocket(image) { progress, stage in
    |                                                          `- error: cannot find 'BookshelfAIService' in scope
405 |                 // Progress handler runs on MainActor - safe for UI updates
406 |                 self.currentProgress = progress

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:413:13: error: the compiler is unable to type-check this expression in reasonable time; try breaking up the expression into distinct sub-expressions
411 |             // Calculate statistics
412 |             detectedCount = detectedBooks.count
413 |             confirmedCount = detectedBooks.filter { $0.status == .detected || $0.status == .confirmed }.count
    |             `- error: the compiler is unable to type-check this expression in reasonable time; try breaking up the expression into distinct sub-expressions
414 |             uncertainCount = detectedBooks.filter { $0.status == .uncertain }.count
415 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:414:67: error: cannot infer contextual base in reference to member 'uncertain'
412 |             detectedCount = detectedBooks.count
413 |             confirmedCount = detectedBooks.filter { $0.status == .detected || $0.status == .confirmed }.count
414 |             uncertainCount = detectedBooks.filter { $0.status == .uncertain }.count
    |                                                                   `- error: cannot infer contextual base in reference to member 'uncertain'
415 | 
416 |             // Create scan result

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:418:26: error: cannot find 'ScanResult' in scope
416 |             // Create scan result
417 |             let processingTime = Date().timeIntervalSince(startTime)
418 |             scanResult = ScanResult(
    |                          `- error: cannot find 'ScanResult' in scope
419 |                 detectedBooks: detectedBooks,
420 |                 totalProcessingTime: processingTime,

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:428:30: error: cannot find type 'BookshelfAIError' in scope
426 |             scanState = .completed
427 | 
428 |         } catch let error as BookshelfAIError {
    |                              `- error: cannot find type 'BookshelfAIError' in scope
429 |             scanState = .error(error.localizedDescription)
430 |         } catch {
[53/65] Compiling BooksTrackerFeature AdvancedSearchView.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AcknowledgementsView.swift:177:25: error: 'insetGrouped' is unavailable in macOS
175 |                 }
176 |             }
177 |             .listStyle(.insetGrouped)
    |                         `- error: 'insetGrouped' is unavailable in macOS
178 |             .navigationTitle("Acknowledgements")
179 |             .navigationBarTitleDisplayMode(.inline)

SwiftUI.ListStyle.insetGrouped:2:19: note: 'insetGrouped' has been explicitly marked unavailable here
1 | protocol ListStyle {
2 | public static var insetGrouped: InsetGroupedListStyle { get }}
  |                   `- note: 'insetGrouped' has been explicitly marked unavailable here
3 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AcknowledgementsView.swift:179:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
177 |             .listStyle(.insetGrouped)
178 |             .navigationTitle("Acknowledgements")
179 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
180 |             .toolbar {
181 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AcknowledgementsView.swift:181:41: error: 'navigationBarTrailing' is unavailable in macOS
179 |             .navigationBarTitleDisplayMode(.inline)
180 |             .toolbar {
181 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
182 |                     Button("Done") {
183 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:123:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
121 |             .background(themeStore.backgroundGradient)
122 |             .navigationTitle("Advanced Search")
123 |             .navigationBarTitleDisplayMode(.large)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
124 |             .toolbar {
125 |                 ToolbarItem(placement: .topBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:125:41: error: 'topBarLeading' is unavailable in macOS
123 |             .navigationBarTitleDisplayMode(.large)
124 |             .toolbar {
125 |                 ToolbarItem(placement: .topBarLeading) {
    |                                         `- error: 'topBarLeading' is unavailable in macOS
126 |                     Button("Cancel") {
127 |                         dismiss()

SwiftUI.ToolbarItemPlacement.topBarLeading:5:21: note: 'topBarLeading' has been explicitly marked unavailable here
3 |   @backDeployed(before: iOS 17.0, tvOS 17.0)
4 |   @available(macOS, unavailable)
5 |   public static var topBarLeading: ToolbarItemPlacement { get }}
  |                     `- note: 'topBarLeading' has been explicitly marked unavailable here
6 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:132:41: error: 'topBarTrailing' is unavailable in macOS
130 |                 }
131 | 
132 |                 ToolbarItem(placement: .topBarTrailing) {
    |                                         `- error: 'topBarTrailing' is unavailable in macOS
133 |                     Button("Clear") {
134 |                         clearAllFields()

SwiftUI.ToolbarItemPlacement.topBarTrailing:5:21: note: 'topBarTrailing' has been explicitly marked unavailable here
3 |   @backDeployed(before: iOS 17.0, tvOS 17.0)
4 |   @available(macOS, unavailable)
5 |   public static var topBarTrailing: ToolbarItemPlacement { get }}
  |                     `- note: 'topBarTrailing' has been explicitly marked unavailable here
6 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:209:28: error: extra argument 'keyboardType' in call
207 |             focused: $focusedField,
208 |             field: .isbn,
209 |             keyboardType: .numberPad
    |                            `- error: extra argument 'keyboardType' in call
210 |         )
211 |         .accessibilityLabel("ISBN field")

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:209:28: error: cannot infer contextual base in reference to member 'numberPad'
207 |             focused: $focusedField,
208 |             field: .isbn,
209 |             keyboardType: .numberPad
    |                            `- error: cannot infer contextual base in reference to member 'numberPad'
210 |         )
211 |         .accessibilityLabel("ISBN field")

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:372:25: error: cannot find 'UIImpactFeedbackGenerator' in scope
370 | 
371 |         // Haptic feedback
372 |         let generator = UIImpactFeedbackGenerator(style: .medium)
    |                         `- error: cannot find 'UIImpactFeedbackGenerator' in scope
373 |         generator.impactOccurred()
374 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:372:59: error: cannot infer contextual base in reference to member 'medium'
370 | 
371 |         // Haptic feedback
372 |         let generator = UIImpactFeedbackGenerator(style: .medium)
    |                                                           `- error: cannot infer contextual base in reference to member 'medium'
373 |         generator.impactOccurred()
374 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:389:25: error: cannot find 'UINotificationFeedbackGenerator' in scope
387 | 
388 |         // Haptic feedback
389 |         let generator = UINotificationFeedbackGenerator()
    |                         `- error: cannot find 'UINotificationFeedbackGenerator' in scope
390 |         generator.notificationOccurred(.success)
391 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:390:41: error: cannot infer contextual base in reference to member 'success'
388 |         // Haptic feedback
389 |         let generator = UINotificationFeedbackGenerator()
390 |         generator.notificationOccurred(.success)
    |                                         `- error: cannot infer contextual base in reference to member 'success'
391 |     }
392 | }

macro expansion @ObservationTracked:1:47: error: cannot find type 'ScanResult' in scope
`- /Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:367:32: note: expanded code originates here
365 |     var confirmedCount: Int = 0
366 |     var uncertainCount: Int = 0
367 |     var scanResult: ScanResult?
    +--- macro expansion @ObservationTracked ---------------------------
    |1 | @ObservationIgnored private  var _scanResult: ScanResult?
    |  |                                               `- error: cannot find type 'ScanResult' in scope
    +-------------------------------------------------------------------
368 | 
369 |     // Real-time progress tracking

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:367:21: error: cannot find type 'ScanResult' in scope
365 |     var confirmedCount: Int = 0
366 |     var uncertainCount: Int = 0
367 |     var scanResult: ScanResult?
    |                     `- error: cannot find type 'ScanResult' in scope
368 | 
369 |     // Real-time progress tracking

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:396:32: error: cannot find type 'UIImage' in scope
394 | 
395 |     /// Process captured image with WebSocket real-time progress tracking
396 |     func processImage(_ image: UIImage) async {
    |                                `- error: cannot find type 'UIImage' in scope
397 |         scanState = .processing
398 |         currentProgress = 0.0

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:77:17: error: cannot find 'ScanResultsView' in scope
 75 |             }
 76 |             .sheet(isPresented: $showingResults) {
 77 |                 ScanResultsView(
    |                 `- error: cannot find 'ScanResultsView' in scope
 78 |                     scanResult: scanModel.scanResult,
 79 |                     modelContext: modelContext,

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:29:47: error: cannot find type 'UIImage' in scope
 27 |     // MARK: - Initialization
 28 | 
 29 |     public init(onCaptureComplete: @escaping (UIImage) -> Void) {
    |                                               `- error: cannot find type 'UIImage' in scope
 30 |         self.onCaptureComplete = onCaptureComplete
 31 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:78:33: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfScanModel>'
 76 |             .sheet(isPresented: $showingResults) {
 77 |                 ScanResultsView(
 78 |                     scanResult: scanModel.scanResult,
    |                                 `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfScanModel>'
 79 |                     modelContext: modelContext,
 80 |                     onDismiss: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:89:31: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfScanModel>'
 87 |                 BookshelfCameraView { capturedImage in
 88 |                     Task {
 89 |                         await scanModel.processImage(capturedImage)
    |                               `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfScanModel>'
 90 |                         if scanModel.scanState == .completed {
 91 |                             showingResults = true

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:89:41: error: cannot call value of non-function type 'Binding<Subject>'
 87 |                 BookshelfCameraView { capturedImage in
 88 |                     Task {
 89 |                         await scanModel.processImage(capturedImage)
    |                                         `- error: cannot call value of non-function type 'Binding<Subject>'
 90 |                         if scanModel.scanState == .completed {
 91 |                             showingResults = true

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:186:36: error: cannot find 'UIImage' in scope
184 |                 Task {
185 |                     if let data = try? await photosPickerItem?.loadTransferable(type: Data.self),
186 |                        let image = UIImage(data: data) {
    |                                    `- error: cannot find 'UIImage' in scope
187 |                         await scanModel.processImage(image)
188 |                         if scanModel.scanState == .completed {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:404:58: error: cannot find 'BookshelfAIService' in scope
402 |         do {
403 |             // Use new WebSocket method for real-time progress updates
404 |             let (detectedBooks, suggestions) = try await BookshelfAIService.shared.processBookshelfImageWithWebSocket(image) { progress, stage in
    |                                                          `- error: cannot find 'BookshelfAIService' in scope
405 |                 // Progress handler runs on MainActor - safe for UI updates
406 |                 self.currentProgress = progress

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:413:13: error: the compiler is unable to type-check this expression in reasonable time; try breaking up the expression into distinct sub-expressions
411 |             // Calculate statistics
412 |             detectedCount = detectedBooks.count
413 |             confirmedCount = detectedBooks.filter { $0.status == .detected || $0.status == .confirmed }.count
    |             `- error: the compiler is unable to type-check this expression in reasonable time; try breaking up the expression into distinct sub-expressions
414 |             uncertainCount = detectedBooks.filter { $0.status == .uncertain }.count
415 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:414:67: error: cannot infer contextual base in reference to member 'uncertain'
412 |             detectedCount = detectedBooks.count
413 |             confirmedCount = detectedBooks.filter { $0.status == .detected || $0.status == .confirmed }.count
414 |             uncertainCount = detectedBooks.filter { $0.status == .uncertain }.count
    |                                                                   `- error: cannot infer contextual base in reference to member 'uncertain'
415 | 
416 |             // Create scan result

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:418:26: error: cannot find 'ScanResult' in scope
416 |             // Create scan result
417 |             let processingTime = Date().timeIntervalSince(startTime)
418 |             scanResult = ScanResult(
    |                          `- error: cannot find 'ScanResult' in scope
419 |                 detectedBooks: detectedBooks,
420 |                 totalProcessingTime: processingTime,

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:428:30: error: cannot find type 'BookshelfAIError' in scope
426 |             scanState = .completed
427 | 
428 |         } catch let error as BookshelfAIError {
    |                              `- error: cannot find type 'BookshelfAIError' in scope
429 |             scanState = .error(error.localizedDescription)
430 |         } catch {
[54/65] Compiling BooksTrackerFeature Author.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AcknowledgementsView.swift:177:25: error: 'insetGrouped' is unavailable in macOS
175 |                 }
176 |             }
177 |             .listStyle(.insetGrouped)
    |                         `- error: 'insetGrouped' is unavailable in macOS
178 |             .navigationTitle("Acknowledgements")
179 |             .navigationBarTitleDisplayMode(.inline)

SwiftUI.ListStyle.insetGrouped:2:19: note: 'insetGrouped' has been explicitly marked unavailable here
1 | protocol ListStyle {
2 | public static var insetGrouped: InsetGroupedListStyle { get }}
  |                   `- note: 'insetGrouped' has been explicitly marked unavailable here
3 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AcknowledgementsView.swift:179:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
177 |             .listStyle(.insetGrouped)
178 |             .navigationTitle("Acknowledgements")
179 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
180 |             .toolbar {
181 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AcknowledgementsView.swift:181:41: error: 'navigationBarTrailing' is unavailable in macOS
179 |             .navigationBarTitleDisplayMode(.inline)
180 |             .toolbar {
181 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
182 |                     Button("Done") {
183 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:123:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
121 |             .background(themeStore.backgroundGradient)
122 |             .navigationTitle("Advanced Search")
123 |             .navigationBarTitleDisplayMode(.large)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
124 |             .toolbar {
125 |                 ToolbarItem(placement: .topBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:125:41: error: 'topBarLeading' is unavailable in macOS
123 |             .navigationBarTitleDisplayMode(.large)
124 |             .toolbar {
125 |                 ToolbarItem(placement: .topBarLeading) {
    |                                         `- error: 'topBarLeading' is unavailable in macOS
126 |                     Button("Cancel") {
127 |                         dismiss()

SwiftUI.ToolbarItemPlacement.topBarLeading:5:21: note: 'topBarLeading' has been explicitly marked unavailable here
3 |   @backDeployed(before: iOS 17.0, tvOS 17.0)
4 |   @available(macOS, unavailable)
5 |   public static var topBarLeading: ToolbarItemPlacement { get }}
  |                     `- note: 'topBarLeading' has been explicitly marked unavailable here
6 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:132:41: error: 'topBarTrailing' is unavailable in macOS
130 |                 }
131 | 
132 |                 ToolbarItem(placement: .topBarTrailing) {
    |                                         `- error: 'topBarTrailing' is unavailable in macOS
133 |                     Button("Clear") {
134 |                         clearAllFields()

SwiftUI.ToolbarItemPlacement.topBarTrailing:5:21: note: 'topBarTrailing' has been explicitly marked unavailable here
3 |   @backDeployed(before: iOS 17.0, tvOS 17.0)
4 |   @available(macOS, unavailable)
5 |   public static var topBarTrailing: ToolbarItemPlacement { get }}
  |                     `- note: 'topBarTrailing' has been explicitly marked unavailable here
6 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:209:28: error: extra argument 'keyboardType' in call
207 |             focused: $focusedField,
208 |             field: .isbn,
209 |             keyboardType: .numberPad
    |                            `- error: extra argument 'keyboardType' in call
210 |         )
211 |         .accessibilityLabel("ISBN field")

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:209:28: error: cannot infer contextual base in reference to member 'numberPad'
207 |             focused: $focusedField,
208 |             field: .isbn,
209 |             keyboardType: .numberPad
    |                            `- error: cannot infer contextual base in reference to member 'numberPad'
210 |         )
211 |         .accessibilityLabel("ISBN field")

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:372:25: error: cannot find 'UIImpactFeedbackGenerator' in scope
370 | 
371 |         // Haptic feedback
372 |         let generator = UIImpactFeedbackGenerator(style: .medium)
    |                         `- error: cannot find 'UIImpactFeedbackGenerator' in scope
373 |         generator.impactOccurred()
374 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:372:59: error: cannot infer contextual base in reference to member 'medium'
370 | 
371 |         // Haptic feedback
372 |         let generator = UIImpactFeedbackGenerator(style: .medium)
    |                                                           `- error: cannot infer contextual base in reference to member 'medium'
373 |         generator.impactOccurred()
374 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:389:25: error: cannot find 'UINotificationFeedbackGenerator' in scope
387 | 
388 |         // Haptic feedback
389 |         let generator = UINotificationFeedbackGenerator()
    |                         `- error: cannot find 'UINotificationFeedbackGenerator' in scope
390 |         generator.notificationOccurred(.success)
391 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:390:41: error: cannot infer contextual base in reference to member 'success'
388 |         // Haptic feedback
389 |         let generator = UINotificationFeedbackGenerator()
390 |         generator.notificationOccurred(.success)
    |                                         `- error: cannot infer contextual base in reference to member 'success'
391 |     }
392 | }

macro expansion @ObservationTracked:1:47: error: cannot find type 'ScanResult' in scope
`- /Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:367:32: note: expanded code originates here
365 |     var confirmedCount: Int = 0
366 |     var uncertainCount: Int = 0
367 |     var scanResult: ScanResult?
    +--- macro expansion @ObservationTracked ---------------------------
    |1 | @ObservationIgnored private  var _scanResult: ScanResult?
    |  |                                               `- error: cannot find type 'ScanResult' in scope
    +-------------------------------------------------------------------
368 | 
369 |     // Real-time progress tracking

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:367:21: error: cannot find type 'ScanResult' in scope
365 |     var confirmedCount: Int = 0
366 |     var uncertainCount: Int = 0
367 |     var scanResult: ScanResult?
    |                     `- error: cannot find type 'ScanResult' in scope
368 | 
369 |     // Real-time progress tracking

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:396:32: error: cannot find type 'UIImage' in scope
394 | 
395 |     /// Process captured image with WebSocket real-time progress tracking
396 |     func processImage(_ image: UIImage) async {
    |                                `- error: cannot find type 'UIImage' in scope
397 |         scanState = .processing
398 |         currentProgress = 0.0

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:77:17: error: cannot find 'ScanResultsView' in scope
 75 |             }
 76 |             .sheet(isPresented: $showingResults) {
 77 |                 ScanResultsView(
    |                 `- error: cannot find 'ScanResultsView' in scope
 78 |                     scanResult: scanModel.scanResult,
 79 |                     modelContext: modelContext,

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:29:47: error: cannot find type 'UIImage' in scope
 27 |     // MARK: - Initialization
 28 | 
 29 |     public init(onCaptureComplete: @escaping (UIImage) -> Void) {
    |                                               `- error: cannot find type 'UIImage' in scope
 30 |         self.onCaptureComplete = onCaptureComplete
 31 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:78:33: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfScanModel>'
 76 |             .sheet(isPresented: $showingResults) {
 77 |                 ScanResultsView(
 78 |                     scanResult: scanModel.scanResult,
    |                                 `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfScanModel>'
 79 |                     modelContext: modelContext,
 80 |                     onDismiss: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:89:31: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfScanModel>'
 87 |                 BookshelfCameraView { capturedImage in
 88 |                     Task {
 89 |                         await scanModel.processImage(capturedImage)
    |                               `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfScanModel>'
 90 |                         if scanModel.scanState == .completed {
 91 |                             showingResults = true

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:89:41: error: cannot call value of non-function type 'Binding<Subject>'
 87 |                 BookshelfCameraView { capturedImage in
 88 |                     Task {
 89 |                         await scanModel.processImage(capturedImage)
    |                                         `- error: cannot call value of non-function type 'Binding<Subject>'
 90 |                         if scanModel.scanState == .completed {
 91 |                             showingResults = true

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:186:36: error: cannot find 'UIImage' in scope
184 |                 Task {
185 |                     if let data = try? await photosPickerItem?.loadTransferable(type: Data.self),
186 |                        let image = UIImage(data: data) {
    |                                    `- error: cannot find 'UIImage' in scope
187 |                         await scanModel.processImage(image)
188 |                         if scanModel.scanState == .completed {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:404:58: error: cannot find 'BookshelfAIService' in scope
402 |         do {
403 |             // Use new WebSocket method for real-time progress updates
404 |             let (detectedBooks, suggestions) = try await BookshelfAIService.shared.processBookshelfImageWithWebSocket(image) { progress, stage in
    |                                                          `- error: cannot find 'BookshelfAIService' in scope
405 |                 // Progress handler runs on MainActor - safe for UI updates
406 |                 self.currentProgress = progress

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:413:13: error: the compiler is unable to type-check this expression in reasonable time; try breaking up the expression into distinct sub-expressions
411 |             // Calculate statistics
412 |             detectedCount = detectedBooks.count
413 |             confirmedCount = detectedBooks.filter { $0.status == .detected || $0.status == .confirmed }.count
    |             `- error: the compiler is unable to type-check this expression in reasonable time; try breaking up the expression into distinct sub-expressions
414 |             uncertainCount = detectedBooks.filter { $0.status == .uncertain }.count
415 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:414:67: error: cannot infer contextual base in reference to member 'uncertain'
412 |             detectedCount = detectedBooks.count
413 |             confirmedCount = detectedBooks.filter { $0.status == .detected || $0.status == .confirmed }.count
414 |             uncertainCount = detectedBooks.filter { $0.status == .uncertain }.count
    |                                                                   `- error: cannot infer contextual base in reference to member 'uncertain'
415 | 
416 |             // Create scan result

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:418:26: error: cannot find 'ScanResult' in scope
416 |             // Create scan result
417 |             let processingTime = Date().timeIntervalSince(startTime)
418 |             scanResult = ScanResult(
    |                          `- error: cannot find 'ScanResult' in scope
419 |                 detectedBooks: detectedBooks,
420 |                 totalProcessingTime: processingTime,

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:428:30: error: cannot find type 'BookshelfAIError' in scope
426 |             scanState = .completed
427 | 
428 |         } catch let error as BookshelfAIError {
    |                              `- error: cannot find type 'BookshelfAIError' in scope
429 |             scanState = .error(error.localizedDescription)
430 |         } catch {
[55/65] Compiling BooksTrackerFeature BarcodeDetectionService.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AcknowledgementsView.swift:177:25: error: 'insetGrouped' is unavailable in macOS
175 |                 }
176 |             }
177 |             .listStyle(.insetGrouped)
    |                         `- error: 'insetGrouped' is unavailable in macOS
178 |             .navigationTitle("Acknowledgements")
179 |             .navigationBarTitleDisplayMode(.inline)

SwiftUI.ListStyle.insetGrouped:2:19: note: 'insetGrouped' has been explicitly marked unavailable here
1 | protocol ListStyle {
2 | public static var insetGrouped: InsetGroupedListStyle { get }}
  |                   `- note: 'insetGrouped' has been explicitly marked unavailable here
3 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AcknowledgementsView.swift:179:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
177 |             .listStyle(.insetGrouped)
178 |             .navigationTitle("Acknowledgements")
179 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
180 |             .toolbar {
181 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AcknowledgementsView.swift:181:41: error: 'navigationBarTrailing' is unavailable in macOS
179 |             .navigationBarTitleDisplayMode(.inline)
180 |             .toolbar {
181 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
182 |                     Button("Done") {
183 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:123:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
121 |             .background(themeStore.backgroundGradient)
122 |             .navigationTitle("Advanced Search")
123 |             .navigationBarTitleDisplayMode(.large)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
124 |             .toolbar {
125 |                 ToolbarItem(placement: .topBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:125:41: error: 'topBarLeading' is unavailable in macOS
123 |             .navigationBarTitleDisplayMode(.large)
124 |             .toolbar {
125 |                 ToolbarItem(placement: .topBarLeading) {
    |                                         `- error: 'topBarLeading' is unavailable in macOS
126 |                     Button("Cancel") {
127 |                         dismiss()

SwiftUI.ToolbarItemPlacement.topBarLeading:5:21: note: 'topBarLeading' has been explicitly marked unavailable here
3 |   @backDeployed(before: iOS 17.0, tvOS 17.0)
4 |   @available(macOS, unavailable)
5 |   public static var topBarLeading: ToolbarItemPlacement { get }}
  |                     `- note: 'topBarLeading' has been explicitly marked unavailable here
6 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:132:41: error: 'topBarTrailing' is unavailable in macOS
130 |                 }
131 | 
132 |                 ToolbarItem(placement: .topBarTrailing) {
    |                                         `- error: 'topBarTrailing' is unavailable in macOS
133 |                     Button("Clear") {
134 |                         clearAllFields()

SwiftUI.ToolbarItemPlacement.topBarTrailing:5:21: note: 'topBarTrailing' has been explicitly marked unavailable here
3 |   @backDeployed(before: iOS 17.0, tvOS 17.0)
4 |   @available(macOS, unavailable)
5 |   public static var topBarTrailing: ToolbarItemPlacement { get }}
  |                     `- note: 'topBarTrailing' has been explicitly marked unavailable here
6 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:209:28: error: extra argument 'keyboardType' in call
207 |             focused: $focusedField,
208 |             field: .isbn,
209 |             keyboardType: .numberPad
    |                            `- error: extra argument 'keyboardType' in call
210 |         )
211 |         .accessibilityLabel("ISBN field")

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:209:28: error: cannot infer contextual base in reference to member 'numberPad'
207 |             focused: $focusedField,
208 |             field: .isbn,
209 |             keyboardType: .numberPad
    |                            `- error: cannot infer contextual base in reference to member 'numberPad'
210 |         )
211 |         .accessibilityLabel("ISBN field")

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:372:25: error: cannot find 'UIImpactFeedbackGenerator' in scope
370 | 
371 |         // Haptic feedback
372 |         let generator = UIImpactFeedbackGenerator(style: .medium)
    |                         `- error: cannot find 'UIImpactFeedbackGenerator' in scope
373 |         generator.impactOccurred()
374 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:372:59: error: cannot infer contextual base in reference to member 'medium'
370 | 
371 |         // Haptic feedback
372 |         let generator = UIImpactFeedbackGenerator(style: .medium)
    |                                                           `- error: cannot infer contextual base in reference to member 'medium'
373 |         generator.impactOccurred()
374 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:389:25: error: cannot find 'UINotificationFeedbackGenerator' in scope
387 | 
388 |         // Haptic feedback
389 |         let generator = UINotificationFeedbackGenerator()
    |                         `- error: cannot find 'UINotificationFeedbackGenerator' in scope
390 |         generator.notificationOccurred(.success)
391 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:390:41: error: cannot infer contextual base in reference to member 'success'
388 |         // Haptic feedback
389 |         let generator = UINotificationFeedbackGenerator()
390 |         generator.notificationOccurred(.success)
    |                                         `- error: cannot infer contextual base in reference to member 'success'
391 |     }
392 | }

macro expansion @ObservationTracked:1:47: error: cannot find type 'ScanResult' in scope
`- /Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:367:32: note: expanded code originates here
365 |     var confirmedCount: Int = 0
366 |     var uncertainCount: Int = 0
367 |     var scanResult: ScanResult?
    +--- macro expansion @ObservationTracked ---------------------------
    |1 | @ObservationIgnored private  var _scanResult: ScanResult?
    |  |                                               `- error: cannot find type 'ScanResult' in scope
    +-------------------------------------------------------------------
368 | 
369 |     // Real-time progress tracking

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:367:21: error: cannot find type 'ScanResult' in scope
365 |     var confirmedCount: Int = 0
366 |     var uncertainCount: Int = 0
367 |     var scanResult: ScanResult?
    |                     `- error: cannot find type 'ScanResult' in scope
368 | 
369 |     // Real-time progress tracking

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:396:32: error: cannot find type 'UIImage' in scope
394 | 
395 |     /// Process captured image with WebSocket real-time progress tracking
396 |     func processImage(_ image: UIImage) async {
    |                                `- error: cannot find type 'UIImage' in scope
397 |         scanState = .processing
398 |         currentProgress = 0.0

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:77:17: error: cannot find 'ScanResultsView' in scope
 75 |             }
 76 |             .sheet(isPresented: $showingResults) {
 77 |                 ScanResultsView(
    |                 `- error: cannot find 'ScanResultsView' in scope
 78 |                     scanResult: scanModel.scanResult,
 79 |                     modelContext: modelContext,

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:29:47: error: cannot find type 'UIImage' in scope
 27 |     // MARK: - Initialization
 28 | 
 29 |     public init(onCaptureComplete: @escaping (UIImage) -> Void) {
    |                                               `- error: cannot find type 'UIImage' in scope
 30 |         self.onCaptureComplete = onCaptureComplete
 31 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:78:33: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfScanModel>'
 76 |             .sheet(isPresented: $showingResults) {
 77 |                 ScanResultsView(
 78 |                     scanResult: scanModel.scanResult,
    |                                 `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfScanModel>'
 79 |                     modelContext: modelContext,
 80 |                     onDismiss: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:89:31: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfScanModel>'
 87 |                 BookshelfCameraView { capturedImage in
 88 |                     Task {
 89 |                         await scanModel.processImage(capturedImage)
    |                               `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfScanModel>'
 90 |                         if scanModel.scanState == .completed {
 91 |                             showingResults = true

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:89:41: error: cannot call value of non-function type 'Binding<Subject>'
 87 |                 BookshelfCameraView { capturedImage in
 88 |                     Task {
 89 |                         await scanModel.processImage(capturedImage)
    |                                         `- error: cannot call value of non-function type 'Binding<Subject>'
 90 |                         if scanModel.scanState == .completed {
 91 |                             showingResults = true

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:186:36: error: cannot find 'UIImage' in scope
184 |                 Task {
185 |                     if let data = try? await photosPickerItem?.loadTransferable(type: Data.self),
186 |                        let image = UIImage(data: data) {
    |                                    `- error: cannot find 'UIImage' in scope
187 |                         await scanModel.processImage(image)
188 |                         if scanModel.scanState == .completed {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:404:58: error: cannot find 'BookshelfAIService' in scope
402 |         do {
403 |             // Use new WebSocket method for real-time progress updates
404 |             let (detectedBooks, suggestions) = try await BookshelfAIService.shared.processBookshelfImageWithWebSocket(image) { progress, stage in
    |                                                          `- error: cannot find 'BookshelfAIService' in scope
405 |                 // Progress handler runs on MainActor - safe for UI updates
406 |                 self.currentProgress = progress

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:413:13: error: the compiler is unable to type-check this expression in reasonable time; try breaking up the expression into distinct sub-expressions
411 |             // Calculate statistics
412 |             detectedCount = detectedBooks.count
413 |             confirmedCount = detectedBooks.filter { $0.status == .detected || $0.status == .confirmed }.count
    |             `- error: the compiler is unable to type-check this expression in reasonable time; try breaking up the expression into distinct sub-expressions
414 |             uncertainCount = detectedBooks.filter { $0.status == .uncertain }.count
415 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:414:67: error: cannot infer contextual base in reference to member 'uncertain'
412 |             detectedCount = detectedBooks.count
413 |             confirmedCount = detectedBooks.filter { $0.status == .detected || $0.status == .confirmed }.count
414 |             uncertainCount = detectedBooks.filter { $0.status == .uncertain }.count
    |                                                                   `- error: cannot infer contextual base in reference to member 'uncertain'
415 | 
416 |             // Create scan result

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:418:26: error: cannot find 'ScanResult' in scope
416 |             // Create scan result
417 |             let processingTime = Date().timeIntervalSince(startTime)
418 |             scanResult = ScanResult(
    |                          `- error: cannot find 'ScanResult' in scope
419 |                 detectedBooks: detectedBooks,
420 |                 totalProcessingTime: processingTime,

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:428:30: error: cannot find type 'BookshelfAIError' in scope
426 |             scanState = .completed
427 | 
428 |         } catch let error as BookshelfAIError {
    |                              `- error: cannot find type 'BookshelfAIError' in scope
429 |             scanState = .error(error.localizedDescription)
430 |         } catch {
[56/65] Compiling BooksTrackerFeature BookshelfScannerView.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AcknowledgementsView.swift:177:25: error: 'insetGrouped' is unavailable in macOS
175 |                 }
176 |             }
177 |             .listStyle(.insetGrouped)
    |                         `- error: 'insetGrouped' is unavailable in macOS
178 |             .navigationTitle("Acknowledgements")
179 |             .navigationBarTitleDisplayMode(.inline)

SwiftUI.ListStyle.insetGrouped:2:19: note: 'insetGrouped' has been explicitly marked unavailable here
1 | protocol ListStyle {
2 | public static var insetGrouped: InsetGroupedListStyle { get }}
  |                   `- note: 'insetGrouped' has been explicitly marked unavailable here
3 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AcknowledgementsView.swift:179:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
177 |             .listStyle(.insetGrouped)
178 |             .navigationTitle("Acknowledgements")
179 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
180 |             .toolbar {
181 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AcknowledgementsView.swift:181:41: error: 'navigationBarTrailing' is unavailable in macOS
179 |             .navigationBarTitleDisplayMode(.inline)
180 |             .toolbar {
181 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
182 |                     Button("Done") {
183 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:123:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
121 |             .background(themeStore.backgroundGradient)
122 |             .navigationTitle("Advanced Search")
123 |             .navigationBarTitleDisplayMode(.large)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
124 |             .toolbar {
125 |                 ToolbarItem(placement: .topBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:125:41: error: 'topBarLeading' is unavailable in macOS
123 |             .navigationBarTitleDisplayMode(.large)
124 |             .toolbar {
125 |                 ToolbarItem(placement: .topBarLeading) {
    |                                         `- error: 'topBarLeading' is unavailable in macOS
126 |                     Button("Cancel") {
127 |                         dismiss()

SwiftUI.ToolbarItemPlacement.topBarLeading:5:21: note: 'topBarLeading' has been explicitly marked unavailable here
3 |   @backDeployed(before: iOS 17.0, tvOS 17.0)
4 |   @available(macOS, unavailable)
5 |   public static var topBarLeading: ToolbarItemPlacement { get }}
  |                     `- note: 'topBarLeading' has been explicitly marked unavailable here
6 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:132:41: error: 'topBarTrailing' is unavailable in macOS
130 |                 }
131 | 
132 |                 ToolbarItem(placement: .topBarTrailing) {
    |                                         `- error: 'topBarTrailing' is unavailable in macOS
133 |                     Button("Clear") {
134 |                         clearAllFields()

SwiftUI.ToolbarItemPlacement.topBarTrailing:5:21: note: 'topBarTrailing' has been explicitly marked unavailable here
3 |   @backDeployed(before: iOS 17.0, tvOS 17.0)
4 |   @available(macOS, unavailable)
5 |   public static var topBarTrailing: ToolbarItemPlacement { get }}
  |                     `- note: 'topBarTrailing' has been explicitly marked unavailable here
6 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:209:28: error: extra argument 'keyboardType' in call
207 |             focused: $focusedField,
208 |             field: .isbn,
209 |             keyboardType: .numberPad
    |                            `- error: extra argument 'keyboardType' in call
210 |         )
211 |         .accessibilityLabel("ISBN field")

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:209:28: error: cannot infer contextual base in reference to member 'numberPad'
207 |             focused: $focusedField,
208 |             field: .isbn,
209 |             keyboardType: .numberPad
    |                            `- error: cannot infer contextual base in reference to member 'numberPad'
210 |         )
211 |         .accessibilityLabel("ISBN field")

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:372:25: error: cannot find 'UIImpactFeedbackGenerator' in scope
370 | 
371 |         // Haptic feedback
372 |         let generator = UIImpactFeedbackGenerator(style: .medium)
    |                         `- error: cannot find 'UIImpactFeedbackGenerator' in scope
373 |         generator.impactOccurred()
374 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:372:59: error: cannot infer contextual base in reference to member 'medium'
370 | 
371 |         // Haptic feedback
372 |         let generator = UIImpactFeedbackGenerator(style: .medium)
    |                                                           `- error: cannot infer contextual base in reference to member 'medium'
373 |         generator.impactOccurred()
374 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:389:25: error: cannot find 'UINotificationFeedbackGenerator' in scope
387 | 
388 |         // Haptic feedback
389 |         let generator = UINotificationFeedbackGenerator()
    |                         `- error: cannot find 'UINotificationFeedbackGenerator' in scope
390 |         generator.notificationOccurred(.success)
391 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:390:41: error: cannot infer contextual base in reference to member 'success'
388 |         // Haptic feedback
389 |         let generator = UINotificationFeedbackGenerator()
390 |         generator.notificationOccurred(.success)
    |                                         `- error: cannot infer contextual base in reference to member 'success'
391 |     }
392 | }

macro expansion @ObservationTracked:1:47: error: cannot find type 'ScanResult' in scope
`- /Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:367:32: note: expanded code originates here
365 |     var confirmedCount: Int = 0
366 |     var uncertainCount: Int = 0
367 |     var scanResult: ScanResult?
    +--- macro expansion @ObservationTracked ---------------------------
    |1 | @ObservationIgnored private  var _scanResult: ScanResult?
    |  |                                               `- error: cannot find type 'ScanResult' in scope
    +-------------------------------------------------------------------
368 | 
369 |     // Real-time progress tracking

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:367:21: error: cannot find type 'ScanResult' in scope
365 |     var confirmedCount: Int = 0
366 |     var uncertainCount: Int = 0
367 |     var scanResult: ScanResult?
    |                     `- error: cannot find type 'ScanResult' in scope
368 | 
369 |     // Real-time progress tracking

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:396:32: error: cannot find type 'UIImage' in scope
394 | 
395 |     /// Process captured image with WebSocket real-time progress tracking
396 |     func processImage(_ image: UIImage) async {
    |                                `- error: cannot find type 'UIImage' in scope
397 |         scanState = .processing
398 |         currentProgress = 0.0

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:77:17: error: cannot find 'ScanResultsView' in scope
 75 |             }
 76 |             .sheet(isPresented: $showingResults) {
 77 |                 ScanResultsView(
    |                 `- error: cannot find 'ScanResultsView' in scope
 78 |                     scanResult: scanModel.scanResult,
 79 |                     modelContext: modelContext,

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:29:47: error: cannot find type 'UIImage' in scope
 27 |     // MARK: - Initialization
 28 | 
 29 |     public init(onCaptureComplete: @escaping (UIImage) -> Void) {
    |                                               `- error: cannot find type 'UIImage' in scope
 30 |         self.onCaptureComplete = onCaptureComplete
 31 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:78:33: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfScanModel>'
 76 |             .sheet(isPresented: $showingResults) {
 77 |                 ScanResultsView(
 78 |                     scanResult: scanModel.scanResult,
    |                                 `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfScanModel>'
 79 |                     modelContext: modelContext,
 80 |                     onDismiss: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:89:31: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfScanModel>'
 87 |                 BookshelfCameraView { capturedImage in
 88 |                     Task {
 89 |                         await scanModel.processImage(capturedImage)
    |                               `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfScanModel>'
 90 |                         if scanModel.scanState == .completed {
 91 |                             showingResults = true

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:89:41: error: cannot call value of non-function type 'Binding<Subject>'
 87 |                 BookshelfCameraView { capturedImage in
 88 |                     Task {
 89 |                         await scanModel.processImage(capturedImage)
    |                                         `- error: cannot call value of non-function type 'Binding<Subject>'
 90 |                         if scanModel.scanState == .completed {
 91 |                             showingResults = true

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:186:36: error: cannot find 'UIImage' in scope
184 |                 Task {
185 |                     if let data = try? await photosPickerItem?.loadTransferable(type: Data.self),
186 |                        let image = UIImage(data: data) {
    |                                    `- error: cannot find 'UIImage' in scope
187 |                         await scanModel.processImage(image)
188 |                         if scanModel.scanState == .completed {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:404:58: error: cannot find 'BookshelfAIService' in scope
402 |         do {
403 |             // Use new WebSocket method for real-time progress updates
404 |             let (detectedBooks, suggestions) = try await BookshelfAIService.shared.processBookshelfImageWithWebSocket(image) { progress, stage in
    |                                                          `- error: cannot find 'BookshelfAIService' in scope
405 |                 // Progress handler runs on MainActor - safe for UI updates
406 |                 self.currentProgress = progress

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:413:13: error: the compiler is unable to type-check this expression in reasonable time; try breaking up the expression into distinct sub-expressions
411 |             // Calculate statistics
412 |             detectedCount = detectedBooks.count
413 |             confirmedCount = detectedBooks.filter { $0.status == .detected || $0.status == .confirmed }.count
    |             `- error: the compiler is unable to type-check this expression in reasonable time; try breaking up the expression into distinct sub-expressions
414 |             uncertainCount = detectedBooks.filter { $0.status == .uncertain }.count
415 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:414:67: error: cannot infer contextual base in reference to member 'uncertain'
412 |             detectedCount = detectedBooks.count
413 |             confirmedCount = detectedBooks.filter { $0.status == .detected || $0.status == .confirmed }.count
414 |             uncertainCount = detectedBooks.filter { $0.status == .uncertain }.count
    |                                                                   `- error: cannot infer contextual base in reference to member 'uncertain'
415 | 
416 |             // Create scan result

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:418:26: error: cannot find 'ScanResult' in scope
416 |             // Create scan result
417 |             let processingTime = Date().timeIntervalSince(startTime)
418 |             scanResult = ScanResult(
    |                          `- error: cannot find 'ScanResult' in scope
419 |                 detectedBooks: detectedBooks,
420 |                 totalProcessingTime: processingTime,

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:428:30: error: cannot find type 'BookshelfAIError' in scope
426 |             scanState = .completed
427 | 
428 |         } catch let error as BookshelfAIError {
    |                              `- error: cannot find type 'BookshelfAIError' in scope
429 |             scanState = .error(error.localizedDescription)
430 |         } catch {
[57/65] Compiling BooksTrackerFeature BookshelfCameraPreview.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AcknowledgementsView.swift:177:25: error: 'insetGrouped' is unavailable in macOS
175 |                 }
176 |             }
177 |             .listStyle(.insetGrouped)
    |                         `- error: 'insetGrouped' is unavailable in macOS
178 |             .navigationTitle("Acknowledgements")
179 |             .navigationBarTitleDisplayMode(.inline)

SwiftUI.ListStyle.insetGrouped:2:19: note: 'insetGrouped' has been explicitly marked unavailable here
1 | protocol ListStyle {
2 | public static var insetGrouped: InsetGroupedListStyle { get }}
  |                   `- note: 'insetGrouped' has been explicitly marked unavailable here
3 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AcknowledgementsView.swift:179:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
177 |             .listStyle(.insetGrouped)
178 |             .navigationTitle("Acknowledgements")
179 |             .navigationBarTitleDisplayMode(.inline)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
180 |             .toolbar {
181 |                 ToolbarItem(placement: .navigationBarTrailing) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AcknowledgementsView.swift:181:41: error: 'navigationBarTrailing' is unavailable in macOS
179 |             .navigationBarTitleDisplayMode(.inline)
180 |             .toolbar {
181 |                 ToolbarItem(placement: .navigationBarTrailing) {
    |                                         `- error: 'navigationBarTrailing' is unavailable in macOS
182 |                     Button("Done") {
183 |                         dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:123:14: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
121 |             .background(themeStore.backgroundGradient)
122 |             .navigationTitle("Advanced Search")
123 |             .navigationBarTitleDisplayMode(.large)
    |              `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
124 |             .toolbar {
125 |                 ToolbarItem(placement: .topBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:125:41: error: 'topBarLeading' is unavailable in macOS
123 |             .navigationBarTitleDisplayMode(.large)
124 |             .toolbar {
125 |                 ToolbarItem(placement: .topBarLeading) {
    |                                         `- error: 'topBarLeading' is unavailable in macOS
126 |                     Button("Cancel") {
127 |                         dismiss()

SwiftUI.ToolbarItemPlacement.topBarLeading:5:21: note: 'topBarLeading' has been explicitly marked unavailable here
3 |   @backDeployed(before: iOS 17.0, tvOS 17.0)
4 |   @available(macOS, unavailable)
5 |   public static var topBarLeading: ToolbarItemPlacement { get }}
  |                     `- note: 'topBarLeading' has been explicitly marked unavailable here
6 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:132:41: error: 'topBarTrailing' is unavailable in macOS
130 |                 }
131 | 
132 |                 ToolbarItem(placement: .topBarTrailing) {
    |                                         `- error: 'topBarTrailing' is unavailable in macOS
133 |                     Button("Clear") {
134 |                         clearAllFields()

SwiftUI.ToolbarItemPlacement.topBarTrailing:5:21: note: 'topBarTrailing' has been explicitly marked unavailable here
3 |   @backDeployed(before: iOS 17.0, tvOS 17.0)
4 |   @available(macOS, unavailable)
5 |   public static var topBarTrailing: ToolbarItemPlacement { get }}
  |                     `- note: 'topBarTrailing' has been explicitly marked unavailable here
6 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:209:28: error: extra argument 'keyboardType' in call
207 |             focused: $focusedField,
208 |             field: .isbn,
209 |             keyboardType: .numberPad
    |                            `- error: extra argument 'keyboardType' in call
210 |         )
211 |         .accessibilityLabel("ISBN field")

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:209:28: error: cannot infer contextual base in reference to member 'numberPad'
207 |             focused: $focusedField,
208 |             field: .isbn,
209 |             keyboardType: .numberPad
    |                            `- error: cannot infer contextual base in reference to member 'numberPad'
210 |         )
211 |         .accessibilityLabel("ISBN field")

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:372:25: error: cannot find 'UIImpactFeedbackGenerator' in scope
370 | 
371 |         // Haptic feedback
372 |         let generator = UIImpactFeedbackGenerator(style: .medium)
    |                         `- error: cannot find 'UIImpactFeedbackGenerator' in scope
373 |         generator.impactOccurred()
374 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:372:59: error: cannot infer contextual base in reference to member 'medium'
370 | 
371 |         // Haptic feedback
372 |         let generator = UIImpactFeedbackGenerator(style: .medium)
    |                                                           `- error: cannot infer contextual base in reference to member 'medium'
373 |         generator.impactOccurred()
374 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:389:25: error: cannot find 'UINotificationFeedbackGenerator' in scope
387 | 
388 |         // Haptic feedback
389 |         let generator = UINotificationFeedbackGenerator()
    |                         `- error: cannot find 'UINotificationFeedbackGenerator' in scope
390 |         generator.notificationOccurred(.success)
391 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/AdvancedSearchView.swift:390:41: error: cannot infer contextual base in reference to member 'success'
388 |         // Haptic feedback
389 |         let generator = UINotificationFeedbackGenerator()
390 |         generator.notificationOccurred(.success)
    |                                         `- error: cannot infer contextual base in reference to member 'success'
391 |     }
392 | }

macro expansion @ObservationTracked:1:47: error: cannot find type 'ScanResult' in scope
`- /Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:367:32: note: expanded code originates here
365 |     var confirmedCount: Int = 0
366 |     var uncertainCount: Int = 0
367 |     var scanResult: ScanResult?
    +--- macro expansion @ObservationTracked ---------------------------
    |1 | @ObservationIgnored private  var _scanResult: ScanResult?
    |  |                                               `- error: cannot find type 'ScanResult' in scope
    +-------------------------------------------------------------------
368 | 
369 |     // Real-time progress tracking

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:367:21: error: cannot find type 'ScanResult' in scope
365 |     var confirmedCount: Int = 0
366 |     var uncertainCount: Int = 0
367 |     var scanResult: ScanResult?
    |                     `- error: cannot find type 'ScanResult' in scope
368 | 
369 |     // Real-time progress tracking

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:396:32: error: cannot find type 'UIImage' in scope
394 | 
395 |     /// Process captured image with WebSocket real-time progress tracking
396 |     func processImage(_ image: UIImage) async {
    |                                `- error: cannot find type 'UIImage' in scope
397 |         scanState = .processing
398 |         currentProgress = 0.0

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:77:17: error: cannot find 'ScanResultsView' in scope
 75 |             }
 76 |             .sheet(isPresented: $showingResults) {
 77 |                 ScanResultsView(
    |                 `- error: cannot find 'ScanResultsView' in scope
 78 |                     scanResult: scanModel.scanResult,
 79 |                     modelContext: modelContext,

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/Camera/BookshelfCameraView.swift:29:47: error: cannot find type 'UIImage' in scope
 27 |     // MARK: - Initialization
 28 | 
 29 |     public init(onCaptureComplete: @escaping (UIImage) -> Void) {
    |                                               `- error: cannot find type 'UIImage' in scope
 30 |         self.onCaptureComplete = onCaptureComplete
 31 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:78:33: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfScanModel>'
 76 |             .sheet(isPresented: $showingResults) {
 77 |                 ScanResultsView(
 78 |                     scanResult: scanModel.scanResult,
    |                                 `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfScanModel>'
 79 |                     modelContext: modelContext,
 80 |                     onDismiss: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:89:31: error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfScanModel>'
 87 |                 BookshelfCameraView { capturedImage in
 88 |                     Task {
 89 |                         await scanModel.processImage(capturedImage)
    |                               `- error: referencing subscript 'subscript(dynamicMember:)' requires wrapper 'Binding<BookshelfScanModel>'
 90 |                         if scanModel.scanState == .completed {
 91 |                             showingResults = true

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:89:41: error: cannot call value of non-function type 'Binding<Subject>'
 87 |                 BookshelfCameraView { capturedImage in
 88 |                     Task {
 89 |                         await scanModel.processImage(capturedImage)
    |                                         `- error: cannot call value of non-function type 'Binding<Subject>'
 90 |                         if scanModel.scanState == .completed {
 91 |                             showingResults = true

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:186:36: error: cannot find 'UIImage' in scope
184 |                 Task {
185 |                     if let data = try? await photosPickerItem?.loadTransferable(type: Data.self),
186 |                        let image = UIImage(data: data) {
    |                                    `- error: cannot find 'UIImage' in scope
187 |                         await scanModel.processImage(image)
188 |                         if scanModel.scanState == .completed {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:404:58: error: cannot find 'BookshelfAIService' in scope
402 |         do {
403 |             // Use new WebSocket method for real-time progress updates
404 |             let (detectedBooks, suggestions) = try await BookshelfAIService.shared.processBookshelfImageWithWebSocket(image) { progress, stage in
    |                                                          `- error: cannot find 'BookshelfAIService' in scope
405 |                 // Progress handler runs on MainActor - safe for UI updates
406 |                 self.currentProgress = progress

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:413:13: error: the compiler is unable to type-check this expression in reasonable time; try breaking up the expression into distinct sub-expressions
411 |             // Calculate statistics
412 |             detectedCount = detectedBooks.count
413 |             confirmedCount = detectedBooks.filter { $0.status == .detected || $0.status == .confirmed }.count
    |             `- error: the compiler is unable to type-check this expression in reasonable time; try breaking up the expression into distinct sub-expressions
414 |             uncertainCount = detectedBooks.filter { $0.status == .uncertain }.count
415 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:414:67: error: cannot infer contextual base in reference to member 'uncertain'
412 |             detectedCount = detectedBooks.count
413 |             confirmedCount = detectedBooks.filter { $0.status == .detected || $0.status == .confirmed }.count
414 |             uncertainCount = detectedBooks.filter { $0.status == .uncertain }.count
    |                                                                   `- error: cannot infer contextual base in reference to member 'uncertain'
415 | 
416 |             // Create scan result

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:418:26: error: cannot find 'ScanResult' in scope
416 |             // Create scan result
417 |             let processingTime = Date().timeIntervalSince(startTime)
418 |             scanResult = ScanResult(
    |                          `- error: cannot find 'ScanResult' in scope
419 |                 detectedBooks: detectedBooks,
420 |                 totalProcessingTime: processingTime,

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/BookshelfScanning/BookshelfScannerView.swift:428:30: error: cannot find type 'BookshelfAIError' in scope
426 |             scanState = .completed
427 | 
428 |         } catch let error as BookshelfAIError {
    |                              `- error: cannot find type 'BookshelfAIError' in scope
429 |             scanState = .error(error.localizedDescription)
430 |         } catch {
[58/65] Compiling BooksTrackerFeature ProgressComponents.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:71:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 69 | 
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
    |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
 72 |     @State private var scrollPhase: ScrollPhase = .idle
 73 |     @State private var showBackToTop = false

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:71:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 69 | 
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
    |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
 72 |     @State private var scrollPhase: ScrollPhase = .idle
 73 |     @State private var showBackToTop = false

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:72:37: error: 'ScrollPhase' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
 72 |     @State private var scrollPhase: ScrollPhase = .idle
    |                                     `- error: 'ScrollPhase' is only available in macOS 15.0 or newer
 73 |     @State private var showBackToTop = false
 74 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:101:33: error: 'navigationBarDrawer' is unavailable in macOS
 99 |                 .searchable(
100 |                     text: $searchModel.searchText,
101 |                     placement: .navigationBarDrawer,
    |                                 `- error: 'navigationBarDrawer' is unavailable in macOS
102 |                     prompt: searchPrompt
103 |                 )

SwiftUI.SearchFieldPlacement.navigationBarDrawer:5:21: note: 'navigationBarDrawer' has been explicitly marked unavailable here
3 |   @available(macOS, unavailable)
4 |   @available(tvOS, unavailable)
5 |   public static let navigationBarDrawer: SearchFieldPlacement}
  |                     `- note: 'navigationBarDrawer' has been explicitly marked unavailable here
6 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:120:26: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
118 |                     WorkDiscoveryView(searchResult: book)
119 |                         .navigationTitle(book.displayTitle)
120 |                         .navigationBarTitleDisplayMode(.large)
    |                          `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
121 |                 }
122 |                 .navigationTitle("Search")

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:123:18: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
121 |                 }
122 |                 .navigationTitle("Search")
123 |                 .navigationBarTitleDisplayMode(.inline)
    |                  `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
124 |                 .toolbar {
125 |                     ToolbarItem(placement: .navigationBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:125:45: error: 'navigationBarLeading' is unavailable in macOS
123 |                 .navigationBarTitleDisplayMode(.inline)
124 |                 .toolbar {
125 |                     ToolbarItem(placement: .navigationBarLeading) {
    |                                             `- error: 'navigationBarLeading' is unavailable in macOS
126 |                         advancedSearchButton
127 |                     }

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:129:45: error: 'navigationBarTrailing' is unavailable in macOS
127 |                     }
128 | 
129 |                     ToolbarItem(placement: .navigationBarTrailing) {
    |                                             `- error: 'navigationBarTrailing' is unavailable in macOS
130 |                         barcodeButton
131 |                     }

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:343:10: error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
297 |     // HIG: Enhanced empty states with contextual guidance
298 | 
299 |     private var initialStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
300 |         ScrollView {
301 |             LazyVStack(spacing: 32) {
    :
341 |             .scrollTargetLayout()
342 |         }
343 |         .scrollPosition($scrollPosition)
    |          |- error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
    |          `- note: add 'if #available' version check
344 |         .scrollEdgeEffectStyle(.soft, for: .top)
345 |         .onScrollPhaseChange { _, newPhase in

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:344:10: error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
297 |     // HIG: Enhanced empty states with contextual guidance
298 | 
299 |     private var initialStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
300 |         ScrollView {
301 |             LazyVStack(spacing: 32) {
    :
342 |         }
343 |         .scrollPosition($scrollPosition)
344 |         .scrollEdgeEffectStyle(.soft, for: .top)
    |          |- error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
    |          `- note: add 'if #available' version check
345 |         .onScrollPhaseChange { _, newPhase in
346 |             withAnimation(.easeInOut(duration: 0.2)) {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:345:10: error: 'onScrollPhaseChange' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
297 |     // HIG: Enhanced empty states with contextual guidance
298 | 
299 |     private var initialStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
300 |         ScrollView {
301 |             LazyVStack(spacing: 32) {
    :
343 |         .scrollPosition($scrollPosition)
344 |         .scrollEdgeEffectStyle(.soft, for: .top)
345 |         .onScrollPhaseChange { _, newPhase in
    |          |- error: 'onScrollPhaseChange' is only available in macOS 15.0 or newer
    |          `- note: add 'if #available' version check
346 |             withAnimation(.easeInOut(duration: 0.2)) {
347 |                 scrollPhase = newPhase

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:350:10: error: 'onScrollGeometryChange(for:of:action:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
297 |     // HIG: Enhanced empty states with contextual guidance
298 | 
299 |     private var initialStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
300 |         ScrollView {
301 |             LazyVStack(spacing: 32) {
    :
348 |             }
349 |         }
350 |         .onScrollGeometryChange(for: CGFloat.self) { geometry in
    |          |- error: 'onScrollGeometryChange(for:of:action:)' is only available in macOS 15.0 or newer
    |          `- note: add 'if #available' version check
351 |             geometry.contentOffset.y
352 |         } action: { _, newValue in

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:584:14: error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
542 | 
543 |     // HIG: Results with pagination support
544 |     private var resultsStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
545 |         ZStack(alignment: .bottomTrailing) {
546 |             ScrollView {
    :
582 |                 .scrollTargetLayout()
583 |             }
584 |             .scrollPosition($scrollPosition)
    |              |- error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
    |              `- note: add 'if #available' version check
585 |             .scrollEdgeEffectStyle(.soft, for: [.top, .bottom])
586 |             .onScrollPhaseChange { _, newPhase in

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:585:14: error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
542 | 
543 |     // HIG: Results with pagination support
544 |     private var resultsStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
545 |         ZStack(alignment: .bottomTrailing) {
546 |             ScrollView {
    :
583 |             }
584 |             .scrollPosition($scrollPosition)
585 |             .scrollEdgeEffectStyle(.soft, for: [.top, .bottom])
    |              |- error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
    |              `- note: add 'if #available' version check
586 |             .onScrollPhaseChange { _, newPhase in
587 |                 withAnimation(.easeInOut(duration: 0.2)) {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:586:14: error: 'onScrollPhaseChange' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
542 | 
543 |     // HIG: Results with pagination support
544 |     private var resultsStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
545 |         ZStack(alignment: .bottomTrailing) {
546 |             ScrollView {
    :
584 |             .scrollPosition($scrollPosition)
585 |             .scrollEdgeEffectStyle(.soft, for: [.top, .bottom])
586 |             .onScrollPhaseChange { _, newPhase in
    |              |- error: 'onScrollPhaseChange' is only available in macOS 15.0 or newer
    |              `- note: add 'if #available' version check
587 |                 withAnimation(.easeInOut(duration: 0.2)) {
588 |                     scrollPhase = newPhase

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:591:14: error: 'onScrollGeometryChange(for:of:action:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
542 | 
543 |     // HIG: Results with pagination support
544 |     private var resultsStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
545 |         ZStack(alignment: .bottomTrailing) {
546 |             ScrollView {
    :
589 |                 }
590 |             }
591 |             .onScrollGeometryChange(for: CGFloat.self) { geometry in
    |              |- error: 'onScrollGeometryChange(for:of:action:)' is only available in macOS 15.0 or newer
    |              `- note: add 'if #available' version check
592 |                 geometry.contentOffset.y
593 |             } action: { _, newValue in

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:649:32: error: 'scrollTo(edge:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
644 |     }
645 | 
646 |     private var backToTopButton: some View {
    |                 `- note: add '@available' attribute to enclosing property
647 |         Button {
648 |             withAnimation(.easeInOut(duration: 0.5)) {
649 |                 scrollPosition.scrollTo(edge: .top)
    |                                |- error: 'scrollTo(edge:)' is only available in macOS 15.0 or newer
    |                                `- note: add 'if #available' version check
650 |             }
651 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:786:22: error: cannot find 'UIImpactFeedbackGenerator' in scope
784 | 
785 |         // HIG: Haptic feedback for user actions
786 |         let impact = UIImpactFeedbackGenerator(style: .light)
    |                      `- error: cannot find 'UIImpactFeedbackGenerator' in scope
787 |         impact.impactOccurred()
788 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:786:56: error: cannot infer contextual base in reference to member 'light'
784 | 
785 |         // HIG: Haptic feedback for user actions
786 |         let impact = UIImpactFeedbackGenerator(style: .light)
    |                                                        `- error: cannot infer contextual base in reference to member 'light'
787 |         impact.impactOccurred()
788 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:291:21: error: 'insetGrouped' is unavailable in macOS
289 |             }
290 |         }
291 |         .listStyle(.insetGrouped)
    |                     `- error: 'insetGrouped' is unavailable in macOS
292 |         .navigationTitle("Settings")
293 |         .navigationBarTitleDisplayMode(.large)

SwiftUI.ListStyle.insetGrouped:2:19: note: 'insetGrouped' has been explicitly marked unavailable here
1 | protocol ListStyle {
2 | public static var insetGrouped: InsetGroupedListStyle { get }}
  |                   `- note: 'insetGrouped' has been explicitly marked unavailable here
3 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:293:10: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
291 |         .listStyle(.insetGrouped)
292 |         .navigationTitle("Settings")
293 |         .navigationBarTitleDisplayMode(.large)
    |          `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
294 |         .background(backgroundView.ignoresSafeArea())
295 |         .sheet(isPresented: $showingCSVImporter) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:366:29: error: cannot find 'UINotificationFeedbackGenerator' in scope
364 | 
365 |             // Haptic feedback
366 |             let generator = UINotificationFeedbackGenerator()
    |                             `- error: cannot find 'UINotificationFeedbackGenerator' in scope
367 |             generator.notificationOccurred(.success)
368 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:367:45: error: cannot infer contextual base in reference to member 'success'
365 |             // Haptic feedback
366 |             let generator = UINotificationFeedbackGenerator()
367 |             generator.notificationOccurred(.success)
    |                                             `- error: cannot infer contextual base in reference to member 'success'
368 | 
369 |         } catch {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:373:29: error: cannot find 'UINotificationFeedbackGenerator' in scope
371 | 
372 |             // Error haptic
373 |             let generator = UINotificationFeedbackGenerator()
    |                             `- error: cannot find 'UINotificationFeedbackGenerator' in scope
374 |             generator.notificationOccurred(.error)
375 |         }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:374:45: error: cannot infer contextual base in reference to member 'error'
372 |             // Error haptic
373 |             let generator = UINotificationFeedbackGenerator()
374 |             generator.notificationOccurred(.error)
    |                                             `- error: cannot infer contextual base in reference to member 'error'
375 |         }
376 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:418:33: error: cannot find 'UINotificationFeedbackGenerator' in scope
416 | 
417 |                 // Haptic feedback
418 |                 let generator = UINotificationFeedbackGenerator()
    |                                 `- error: cannot find 'UINotificationFeedbackGenerator' in scope
419 |                 generator.notificationOccurred(.success)
420 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:427:33: error: cannot find 'UINotificationFeedbackGenerator' in scope
425 | 
426 |                 // Error haptic
427 |                 let generator = UINotificationFeedbackGenerator()
    |                                 `- error: cannot find 'UINotificationFeedbackGenerator' in scope
428 |                 generator.notificationOccurred(.error)
429 |             }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ThemeSelectionView.swift:113:37: error: 'navigationBarTrailing' is unavailable in macOS
111 |         .background(backgroundView.ignoresSafeArea())
112 |         .toolbar {
113 |             ToolbarItem(placement: .navigationBarTrailing) {
    |                                     `- error: 'navigationBarTrailing' is unavailable in macOS
114 |                 Button("Done") {
115 |                     dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 
[59/65] Compiling BooksTrackerFeature SearchModel.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:71:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 69 | 
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
    |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
 72 |     @State private var scrollPhase: ScrollPhase = .idle
 73 |     @State private var showBackToTop = false

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:71:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 69 | 
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
    |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
 72 |     @State private var scrollPhase: ScrollPhase = .idle
 73 |     @State private var showBackToTop = false

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:72:37: error: 'ScrollPhase' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
 72 |     @State private var scrollPhase: ScrollPhase = .idle
    |                                     `- error: 'ScrollPhase' is only available in macOS 15.0 or newer
 73 |     @State private var showBackToTop = false
 74 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:101:33: error: 'navigationBarDrawer' is unavailable in macOS
 99 |                 .searchable(
100 |                     text: $searchModel.searchText,
101 |                     placement: .navigationBarDrawer,
    |                                 `- error: 'navigationBarDrawer' is unavailable in macOS
102 |                     prompt: searchPrompt
103 |                 )

SwiftUI.SearchFieldPlacement.navigationBarDrawer:5:21: note: 'navigationBarDrawer' has been explicitly marked unavailable here
3 |   @available(macOS, unavailable)
4 |   @available(tvOS, unavailable)
5 |   public static let navigationBarDrawer: SearchFieldPlacement}
  |                     `- note: 'navigationBarDrawer' has been explicitly marked unavailable here
6 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:120:26: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
118 |                     WorkDiscoveryView(searchResult: book)
119 |                         .navigationTitle(book.displayTitle)
120 |                         .navigationBarTitleDisplayMode(.large)
    |                          `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
121 |                 }
122 |                 .navigationTitle("Search")

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:123:18: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
121 |                 }
122 |                 .navigationTitle("Search")
123 |                 .navigationBarTitleDisplayMode(.inline)
    |                  `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
124 |                 .toolbar {
125 |                     ToolbarItem(placement: .navigationBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:125:45: error: 'navigationBarLeading' is unavailable in macOS
123 |                 .navigationBarTitleDisplayMode(.inline)
124 |                 .toolbar {
125 |                     ToolbarItem(placement: .navigationBarLeading) {
    |                                             `- error: 'navigationBarLeading' is unavailable in macOS
126 |                         advancedSearchButton
127 |                     }

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:129:45: error: 'navigationBarTrailing' is unavailable in macOS
127 |                     }
128 | 
129 |                     ToolbarItem(placement: .navigationBarTrailing) {
    |                                             `- error: 'navigationBarTrailing' is unavailable in macOS
130 |                         barcodeButton
131 |                     }

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:343:10: error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
297 |     // HIG: Enhanced empty states with contextual guidance
298 | 
299 |     private var initialStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
300 |         ScrollView {
301 |             LazyVStack(spacing: 32) {
    :
341 |             .scrollTargetLayout()
342 |         }
343 |         .scrollPosition($scrollPosition)
    |          |- error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
    |          `- note: add 'if #available' version check
344 |         .scrollEdgeEffectStyle(.soft, for: .top)
345 |         .onScrollPhaseChange { _, newPhase in

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:344:10: error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
297 |     // HIG: Enhanced empty states with contextual guidance
298 | 
299 |     private var initialStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
300 |         ScrollView {
301 |             LazyVStack(spacing: 32) {
    :
342 |         }
343 |         .scrollPosition($scrollPosition)
344 |         .scrollEdgeEffectStyle(.soft, for: .top)
    |          |- error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
    |          `- note: add 'if #available' version check
345 |         .onScrollPhaseChange { _, newPhase in
346 |             withAnimation(.easeInOut(duration: 0.2)) {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:345:10: error: 'onScrollPhaseChange' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
297 |     // HIG: Enhanced empty states with contextual guidance
298 | 
299 |     private var initialStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
300 |         ScrollView {
301 |             LazyVStack(spacing: 32) {
    :
343 |         .scrollPosition($scrollPosition)
344 |         .scrollEdgeEffectStyle(.soft, for: .top)
345 |         .onScrollPhaseChange { _, newPhase in
    |          |- error: 'onScrollPhaseChange' is only available in macOS 15.0 or newer
    |          `- note: add 'if #available' version check
346 |             withAnimation(.easeInOut(duration: 0.2)) {
347 |                 scrollPhase = newPhase

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:350:10: error: 'onScrollGeometryChange(for:of:action:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
297 |     // HIG: Enhanced empty states with contextual guidance
298 | 
299 |     private var initialStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
300 |         ScrollView {
301 |             LazyVStack(spacing: 32) {
    :
348 |             }
349 |         }
350 |         .onScrollGeometryChange(for: CGFloat.self) { geometry in
    |          |- error: 'onScrollGeometryChange(for:of:action:)' is only available in macOS 15.0 or newer
    |          `- note: add 'if #available' version check
351 |             geometry.contentOffset.y
352 |         } action: { _, newValue in

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:584:14: error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
542 | 
543 |     // HIG: Results with pagination support
544 |     private var resultsStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
545 |         ZStack(alignment: .bottomTrailing) {
546 |             ScrollView {
    :
582 |                 .scrollTargetLayout()
583 |             }
584 |             .scrollPosition($scrollPosition)
    |              |- error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
    |              `- note: add 'if #available' version check
585 |             .scrollEdgeEffectStyle(.soft, for: [.top, .bottom])
586 |             .onScrollPhaseChange { _, newPhase in

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:585:14: error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
542 | 
543 |     // HIG: Results with pagination support
544 |     private var resultsStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
545 |         ZStack(alignment: .bottomTrailing) {
546 |             ScrollView {
    :
583 |             }
584 |             .scrollPosition($scrollPosition)
585 |             .scrollEdgeEffectStyle(.soft, for: [.top, .bottom])
    |              |- error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
    |              `- note: add 'if #available' version check
586 |             .onScrollPhaseChange { _, newPhase in
587 |                 withAnimation(.easeInOut(duration: 0.2)) {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:586:14: error: 'onScrollPhaseChange' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
542 | 
543 |     // HIG: Results with pagination support
544 |     private var resultsStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
545 |         ZStack(alignment: .bottomTrailing) {
546 |             ScrollView {
    :
584 |             .scrollPosition($scrollPosition)
585 |             .scrollEdgeEffectStyle(.soft, for: [.top, .bottom])
586 |             .onScrollPhaseChange { _, newPhase in
    |              |- error: 'onScrollPhaseChange' is only available in macOS 15.0 or newer
    |              `- note: add 'if #available' version check
587 |                 withAnimation(.easeInOut(duration: 0.2)) {
588 |                     scrollPhase = newPhase

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:591:14: error: 'onScrollGeometryChange(for:of:action:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
542 | 
543 |     // HIG: Results with pagination support
544 |     private var resultsStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
545 |         ZStack(alignment: .bottomTrailing) {
546 |             ScrollView {
    :
589 |                 }
590 |             }
591 |             .onScrollGeometryChange(for: CGFloat.self) { geometry in
    |              |- error: 'onScrollGeometryChange(for:of:action:)' is only available in macOS 15.0 or newer
    |              `- note: add 'if #available' version check
592 |                 geometry.contentOffset.y
593 |             } action: { _, newValue in

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:649:32: error: 'scrollTo(edge:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
644 |     }
645 | 
646 |     private var backToTopButton: some View {
    |                 `- note: add '@available' attribute to enclosing property
647 |         Button {
648 |             withAnimation(.easeInOut(duration: 0.5)) {
649 |                 scrollPosition.scrollTo(edge: .top)
    |                                |- error: 'scrollTo(edge:)' is only available in macOS 15.0 or newer
    |                                `- note: add 'if #available' version check
650 |             }
651 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:786:22: error: cannot find 'UIImpactFeedbackGenerator' in scope
784 | 
785 |         // HIG: Haptic feedback for user actions
786 |         let impact = UIImpactFeedbackGenerator(style: .light)
    |                      `- error: cannot find 'UIImpactFeedbackGenerator' in scope
787 |         impact.impactOccurred()
788 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:786:56: error: cannot infer contextual base in reference to member 'light'
784 | 
785 |         // HIG: Haptic feedback for user actions
786 |         let impact = UIImpactFeedbackGenerator(style: .light)
    |                                                        `- error: cannot infer contextual base in reference to member 'light'
787 |         impact.impactOccurred()
788 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:291:21: error: 'insetGrouped' is unavailable in macOS
289 |             }
290 |         }
291 |         .listStyle(.insetGrouped)
    |                     `- error: 'insetGrouped' is unavailable in macOS
292 |         .navigationTitle("Settings")
293 |         .navigationBarTitleDisplayMode(.large)

SwiftUI.ListStyle.insetGrouped:2:19: note: 'insetGrouped' has been explicitly marked unavailable here
1 | protocol ListStyle {
2 | public static var insetGrouped: InsetGroupedListStyle { get }}
  |                   `- note: 'insetGrouped' has been explicitly marked unavailable here
3 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:293:10: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
291 |         .listStyle(.insetGrouped)
292 |         .navigationTitle("Settings")
293 |         .navigationBarTitleDisplayMode(.large)
    |          `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
294 |         .background(backgroundView.ignoresSafeArea())
295 |         .sheet(isPresented: $showingCSVImporter) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:366:29: error: cannot find 'UINotificationFeedbackGenerator' in scope
364 | 
365 |             // Haptic feedback
366 |             let generator = UINotificationFeedbackGenerator()
    |                             `- error: cannot find 'UINotificationFeedbackGenerator' in scope
367 |             generator.notificationOccurred(.success)
368 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:367:45: error: cannot infer contextual base in reference to member 'success'
365 |             // Haptic feedback
366 |             let generator = UINotificationFeedbackGenerator()
367 |             generator.notificationOccurred(.success)
    |                                             `- error: cannot infer contextual base in reference to member 'success'
368 | 
369 |         } catch {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:373:29: error: cannot find 'UINotificationFeedbackGenerator' in scope
371 | 
372 |             // Error haptic
373 |             let generator = UINotificationFeedbackGenerator()
    |                             `- error: cannot find 'UINotificationFeedbackGenerator' in scope
374 |             generator.notificationOccurred(.error)
375 |         }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:374:45: error: cannot infer contextual base in reference to member 'error'
372 |             // Error haptic
373 |             let generator = UINotificationFeedbackGenerator()
374 |             generator.notificationOccurred(.error)
    |                                             `- error: cannot infer contextual base in reference to member 'error'
375 |         }
376 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:418:33: error: cannot find 'UINotificationFeedbackGenerator' in scope
416 | 
417 |                 // Haptic feedback
418 |                 let generator = UINotificationFeedbackGenerator()
    |                                 `- error: cannot find 'UINotificationFeedbackGenerator' in scope
419 |                 generator.notificationOccurred(.success)
420 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:427:33: error: cannot find 'UINotificationFeedbackGenerator' in scope
425 | 
426 |                 // Error haptic
427 |                 let generator = UINotificationFeedbackGenerator()
    |                                 `- error: cannot find 'UINotificationFeedbackGenerator' in scope
428 |                 generator.notificationOccurred(.error)
429 |             }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ThemeSelectionView.swift:113:37: error: 'navigationBarTrailing' is unavailable in macOS
111 |         .background(backgroundView.ignoresSafeArea())
112 |         .toolbar {
113 |             ToolbarItem(placement: .navigationBarTrailing) {
    |                                     `- error: 'navigationBarTrailing' is unavailable in macOS
114 |                 Button("Done") {
115 |                     dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 
[60/65] Compiling BooksTrackerFeature SearchView.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:71:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 69 | 
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
    |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
 72 |     @State private var scrollPhase: ScrollPhase = .idle
 73 |     @State private var showBackToTop = false

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:71:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 69 | 
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
    |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
 72 |     @State private var scrollPhase: ScrollPhase = .idle
 73 |     @State private var showBackToTop = false

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:72:37: error: 'ScrollPhase' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
 72 |     @State private var scrollPhase: ScrollPhase = .idle
    |                                     `- error: 'ScrollPhase' is only available in macOS 15.0 or newer
 73 |     @State private var showBackToTop = false
 74 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:101:33: error: 'navigationBarDrawer' is unavailable in macOS
 99 |                 .searchable(
100 |                     text: $searchModel.searchText,
101 |                     placement: .navigationBarDrawer,
    |                                 `- error: 'navigationBarDrawer' is unavailable in macOS
102 |                     prompt: searchPrompt
103 |                 )

SwiftUI.SearchFieldPlacement.navigationBarDrawer:5:21: note: 'navigationBarDrawer' has been explicitly marked unavailable here
3 |   @available(macOS, unavailable)
4 |   @available(tvOS, unavailable)
5 |   public static let navigationBarDrawer: SearchFieldPlacement}
  |                     `- note: 'navigationBarDrawer' has been explicitly marked unavailable here
6 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:120:26: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
118 |                     WorkDiscoveryView(searchResult: book)
119 |                         .navigationTitle(book.displayTitle)
120 |                         .navigationBarTitleDisplayMode(.large)
    |                          `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
121 |                 }
122 |                 .navigationTitle("Search")

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:123:18: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
121 |                 }
122 |                 .navigationTitle("Search")
123 |                 .navigationBarTitleDisplayMode(.inline)
    |                  `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
124 |                 .toolbar {
125 |                     ToolbarItem(placement: .navigationBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:125:45: error: 'navigationBarLeading' is unavailable in macOS
123 |                 .navigationBarTitleDisplayMode(.inline)
124 |                 .toolbar {
125 |                     ToolbarItem(placement: .navigationBarLeading) {
    |                                             `- error: 'navigationBarLeading' is unavailable in macOS
126 |                         advancedSearchButton
127 |                     }

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:129:45: error: 'navigationBarTrailing' is unavailable in macOS
127 |                     }
128 | 
129 |                     ToolbarItem(placement: .navigationBarTrailing) {
    |                                             `- error: 'navigationBarTrailing' is unavailable in macOS
130 |                         barcodeButton
131 |                     }

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:343:10: error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
297 |     // HIG: Enhanced empty states with contextual guidance
298 | 
299 |     private var initialStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
300 |         ScrollView {
301 |             LazyVStack(spacing: 32) {
    :
341 |             .scrollTargetLayout()
342 |         }
343 |         .scrollPosition($scrollPosition)
    |          |- error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
    |          `- note: add 'if #available' version check
344 |         .scrollEdgeEffectStyle(.soft, for: .top)
345 |         .onScrollPhaseChange { _, newPhase in

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:344:10: error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
297 |     // HIG: Enhanced empty states with contextual guidance
298 | 
299 |     private var initialStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
300 |         ScrollView {
301 |             LazyVStack(spacing: 32) {
    :
342 |         }
343 |         .scrollPosition($scrollPosition)
344 |         .scrollEdgeEffectStyle(.soft, for: .top)
    |          |- error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
    |          `- note: add 'if #available' version check
345 |         .onScrollPhaseChange { _, newPhase in
346 |             withAnimation(.easeInOut(duration: 0.2)) {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:345:10: error: 'onScrollPhaseChange' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
297 |     // HIG: Enhanced empty states with contextual guidance
298 | 
299 |     private var initialStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
300 |         ScrollView {
301 |             LazyVStack(spacing: 32) {
    :
343 |         .scrollPosition($scrollPosition)
344 |         .scrollEdgeEffectStyle(.soft, for: .top)
345 |         .onScrollPhaseChange { _, newPhase in
    |          |- error: 'onScrollPhaseChange' is only available in macOS 15.0 or newer
    |          `- note: add 'if #available' version check
346 |             withAnimation(.easeInOut(duration: 0.2)) {
347 |                 scrollPhase = newPhase

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:350:10: error: 'onScrollGeometryChange(for:of:action:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
297 |     // HIG: Enhanced empty states with contextual guidance
298 | 
299 |     private var initialStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
300 |         ScrollView {
301 |             LazyVStack(spacing: 32) {
    :
348 |             }
349 |         }
350 |         .onScrollGeometryChange(for: CGFloat.self) { geometry in
    |          |- error: 'onScrollGeometryChange(for:of:action:)' is only available in macOS 15.0 or newer
    |          `- note: add 'if #available' version check
351 |             geometry.contentOffset.y
352 |         } action: { _, newValue in

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:584:14: error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
542 | 
543 |     // HIG: Results with pagination support
544 |     private var resultsStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
545 |         ZStack(alignment: .bottomTrailing) {
546 |             ScrollView {
    :
582 |                 .scrollTargetLayout()
583 |             }
584 |             .scrollPosition($scrollPosition)
    |              |- error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
    |              `- note: add 'if #available' version check
585 |             .scrollEdgeEffectStyle(.soft, for: [.top, .bottom])
586 |             .onScrollPhaseChange { _, newPhase in

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:585:14: error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
542 | 
543 |     // HIG: Results with pagination support
544 |     private var resultsStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
545 |         ZStack(alignment: .bottomTrailing) {
546 |             ScrollView {
    :
583 |             }
584 |             .scrollPosition($scrollPosition)
585 |             .scrollEdgeEffectStyle(.soft, for: [.top, .bottom])
    |              |- error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
    |              `- note: add 'if #available' version check
586 |             .onScrollPhaseChange { _, newPhase in
587 |                 withAnimation(.easeInOut(duration: 0.2)) {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:586:14: error: 'onScrollPhaseChange' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
542 | 
543 |     // HIG: Results with pagination support
544 |     private var resultsStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
545 |         ZStack(alignment: .bottomTrailing) {
546 |             ScrollView {
    :
584 |             .scrollPosition($scrollPosition)
585 |             .scrollEdgeEffectStyle(.soft, for: [.top, .bottom])
586 |             .onScrollPhaseChange { _, newPhase in
    |              |- error: 'onScrollPhaseChange' is only available in macOS 15.0 or newer
    |              `- note: add 'if #available' version check
587 |                 withAnimation(.easeInOut(duration: 0.2)) {
588 |                     scrollPhase = newPhase

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:591:14: error: 'onScrollGeometryChange(for:of:action:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
542 | 
543 |     // HIG: Results with pagination support
544 |     private var resultsStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
545 |         ZStack(alignment: .bottomTrailing) {
546 |             ScrollView {
    :
589 |                 }
590 |             }
591 |             .onScrollGeometryChange(for: CGFloat.self) { geometry in
    |              |- error: 'onScrollGeometryChange(for:of:action:)' is only available in macOS 15.0 or newer
    |              `- note: add 'if #available' version check
592 |                 geometry.contentOffset.y
593 |             } action: { _, newValue in

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:649:32: error: 'scrollTo(edge:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
644 |     }
645 | 
646 |     private var backToTopButton: some View {
    |                 `- note: add '@available' attribute to enclosing property
647 |         Button {
648 |             withAnimation(.easeInOut(duration: 0.5)) {
649 |                 scrollPosition.scrollTo(edge: .top)
    |                                |- error: 'scrollTo(edge:)' is only available in macOS 15.0 or newer
    |                                `- note: add 'if #available' version check
650 |             }
651 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:786:22: error: cannot find 'UIImpactFeedbackGenerator' in scope
784 | 
785 |         // HIG: Haptic feedback for user actions
786 |         let impact = UIImpactFeedbackGenerator(style: .light)
    |                      `- error: cannot find 'UIImpactFeedbackGenerator' in scope
787 |         impact.impactOccurred()
788 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:786:56: error: cannot infer contextual base in reference to member 'light'
784 | 
785 |         // HIG: Haptic feedback for user actions
786 |         let impact = UIImpactFeedbackGenerator(style: .light)
    |                                                        `- error: cannot infer contextual base in reference to member 'light'
787 |         impact.impactOccurred()
788 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:291:21: error: 'insetGrouped' is unavailable in macOS
289 |             }
290 |         }
291 |         .listStyle(.insetGrouped)
    |                     `- error: 'insetGrouped' is unavailable in macOS
292 |         .navigationTitle("Settings")
293 |         .navigationBarTitleDisplayMode(.large)

SwiftUI.ListStyle.insetGrouped:2:19: note: 'insetGrouped' has been explicitly marked unavailable here
1 | protocol ListStyle {
2 | public static var insetGrouped: InsetGroupedListStyle { get }}
  |                   `- note: 'insetGrouped' has been explicitly marked unavailable here
3 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:293:10: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
291 |         .listStyle(.insetGrouped)
292 |         .navigationTitle("Settings")
293 |         .navigationBarTitleDisplayMode(.large)
    |          `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
294 |         .background(backgroundView.ignoresSafeArea())
295 |         .sheet(isPresented: $showingCSVImporter) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:366:29: error: cannot find 'UINotificationFeedbackGenerator' in scope
364 | 
365 |             // Haptic feedback
366 |             let generator = UINotificationFeedbackGenerator()
    |                             `- error: cannot find 'UINotificationFeedbackGenerator' in scope
367 |             generator.notificationOccurred(.success)
368 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:367:45: error: cannot infer contextual base in reference to member 'success'
365 |             // Haptic feedback
366 |             let generator = UINotificationFeedbackGenerator()
367 |             generator.notificationOccurred(.success)
    |                                             `- error: cannot infer contextual base in reference to member 'success'
368 | 
369 |         } catch {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:373:29: error: cannot find 'UINotificationFeedbackGenerator' in scope
371 | 
372 |             // Error haptic
373 |             let generator = UINotificationFeedbackGenerator()
    |                             `- error: cannot find 'UINotificationFeedbackGenerator' in scope
374 |             generator.notificationOccurred(.error)
375 |         }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:374:45: error: cannot infer contextual base in reference to member 'error'
372 |             // Error haptic
373 |             let generator = UINotificationFeedbackGenerator()
374 |             generator.notificationOccurred(.error)
    |                                             `- error: cannot infer contextual base in reference to member 'error'
375 |         }
376 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:418:33: error: cannot find 'UINotificationFeedbackGenerator' in scope
416 | 
417 |                 // Haptic feedback
418 |                 let generator = UINotificationFeedbackGenerator()
    |                                 `- error: cannot find 'UINotificationFeedbackGenerator' in scope
419 |                 generator.notificationOccurred(.success)
420 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:427:33: error: cannot find 'UINotificationFeedbackGenerator' in scope
425 | 
426 |                 // Error haptic
427 |                 let generator = UINotificationFeedbackGenerator()
    |                                 `- error: cannot find 'UINotificationFeedbackGenerator' in scope
428 |                 generator.notificationOccurred(.error)
429 |             }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ThemeSelectionView.swift:113:37: error: 'navigationBarTrailing' is unavailable in macOS
111 |         .background(backgroundView.ignoresSafeArea())
112 |         .toolbar {
113 |             ToolbarItem(placement: .navigationBarTrailing) {
    |                                     `- error: 'navigationBarTrailing' is unavailable in macOS
114 |                 Button("Done") {
115 |                     dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 
[61/65] Compiling BooksTrackerFeature SearchViewState.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:71:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 69 | 
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
    |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
 72 |     @State private var scrollPhase: ScrollPhase = .idle
 73 |     @State private var showBackToTop = false

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:71:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 69 | 
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
    |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
 72 |     @State private var scrollPhase: ScrollPhase = .idle
 73 |     @State private var showBackToTop = false

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:72:37: error: 'ScrollPhase' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
 72 |     @State private var scrollPhase: ScrollPhase = .idle
    |                                     `- error: 'ScrollPhase' is only available in macOS 15.0 or newer
 73 |     @State private var showBackToTop = false
 74 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:101:33: error: 'navigationBarDrawer' is unavailable in macOS
 99 |                 .searchable(
100 |                     text: $searchModel.searchText,
101 |                     placement: .navigationBarDrawer,
    |                                 `- error: 'navigationBarDrawer' is unavailable in macOS
102 |                     prompt: searchPrompt
103 |                 )

SwiftUI.SearchFieldPlacement.navigationBarDrawer:5:21: note: 'navigationBarDrawer' has been explicitly marked unavailable here
3 |   @available(macOS, unavailable)
4 |   @available(tvOS, unavailable)
5 |   public static let navigationBarDrawer: SearchFieldPlacement}
  |                     `- note: 'navigationBarDrawer' has been explicitly marked unavailable here
6 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:120:26: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
118 |                     WorkDiscoveryView(searchResult: book)
119 |                         .navigationTitle(book.displayTitle)
120 |                         .navigationBarTitleDisplayMode(.large)
    |                          `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
121 |                 }
122 |                 .navigationTitle("Search")

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:123:18: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
121 |                 }
122 |                 .navigationTitle("Search")
123 |                 .navigationBarTitleDisplayMode(.inline)
    |                  `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
124 |                 .toolbar {
125 |                     ToolbarItem(placement: .navigationBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:125:45: error: 'navigationBarLeading' is unavailable in macOS
123 |                 .navigationBarTitleDisplayMode(.inline)
124 |                 .toolbar {
125 |                     ToolbarItem(placement: .navigationBarLeading) {
    |                                             `- error: 'navigationBarLeading' is unavailable in macOS
126 |                         advancedSearchButton
127 |                     }

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:129:45: error: 'navigationBarTrailing' is unavailable in macOS
127 |                     }
128 | 
129 |                     ToolbarItem(placement: .navigationBarTrailing) {
    |                                             `- error: 'navigationBarTrailing' is unavailable in macOS
130 |                         barcodeButton
131 |                     }

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:343:10: error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
297 |     // HIG: Enhanced empty states with contextual guidance
298 | 
299 |     private var initialStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
300 |         ScrollView {
301 |             LazyVStack(spacing: 32) {
    :
341 |             .scrollTargetLayout()
342 |         }
343 |         .scrollPosition($scrollPosition)
    |          |- error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
    |          `- note: add 'if #available' version check
344 |         .scrollEdgeEffectStyle(.soft, for: .top)
345 |         .onScrollPhaseChange { _, newPhase in

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:344:10: error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
297 |     // HIG: Enhanced empty states with contextual guidance
298 | 
299 |     private var initialStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
300 |         ScrollView {
301 |             LazyVStack(spacing: 32) {
    :
342 |         }
343 |         .scrollPosition($scrollPosition)
344 |         .scrollEdgeEffectStyle(.soft, for: .top)
    |          |- error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
    |          `- note: add 'if #available' version check
345 |         .onScrollPhaseChange { _, newPhase in
346 |             withAnimation(.easeInOut(duration: 0.2)) {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:345:10: error: 'onScrollPhaseChange' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
297 |     // HIG: Enhanced empty states with contextual guidance
298 | 
299 |     private var initialStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
300 |         ScrollView {
301 |             LazyVStack(spacing: 32) {
    :
343 |         .scrollPosition($scrollPosition)
344 |         .scrollEdgeEffectStyle(.soft, for: .top)
345 |         .onScrollPhaseChange { _, newPhase in
    |          |- error: 'onScrollPhaseChange' is only available in macOS 15.0 or newer
    |          `- note: add 'if #available' version check
346 |             withAnimation(.easeInOut(duration: 0.2)) {
347 |                 scrollPhase = newPhase

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:350:10: error: 'onScrollGeometryChange(for:of:action:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
297 |     // HIG: Enhanced empty states with contextual guidance
298 | 
299 |     private var initialStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
300 |         ScrollView {
301 |             LazyVStack(spacing: 32) {
    :
348 |             }
349 |         }
350 |         .onScrollGeometryChange(for: CGFloat.self) { geometry in
    |          |- error: 'onScrollGeometryChange(for:of:action:)' is only available in macOS 15.0 or newer
    |          `- note: add 'if #available' version check
351 |             geometry.contentOffset.y
352 |         } action: { _, newValue in

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:584:14: error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
542 | 
543 |     // HIG: Results with pagination support
544 |     private var resultsStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
545 |         ZStack(alignment: .bottomTrailing) {
546 |             ScrollView {
    :
582 |                 .scrollTargetLayout()
583 |             }
584 |             .scrollPosition($scrollPosition)
    |              |- error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
    |              `- note: add 'if #available' version check
585 |             .scrollEdgeEffectStyle(.soft, for: [.top, .bottom])
586 |             .onScrollPhaseChange { _, newPhase in

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:585:14: error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
542 | 
543 |     // HIG: Results with pagination support
544 |     private var resultsStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
545 |         ZStack(alignment: .bottomTrailing) {
546 |             ScrollView {
    :
583 |             }
584 |             .scrollPosition($scrollPosition)
585 |             .scrollEdgeEffectStyle(.soft, for: [.top, .bottom])
    |              |- error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
    |              `- note: add 'if #available' version check
586 |             .onScrollPhaseChange { _, newPhase in
587 |                 withAnimation(.easeInOut(duration: 0.2)) {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:586:14: error: 'onScrollPhaseChange' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
542 | 
543 |     // HIG: Results with pagination support
544 |     private var resultsStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
545 |         ZStack(alignment: .bottomTrailing) {
546 |             ScrollView {
    :
584 |             .scrollPosition($scrollPosition)
585 |             .scrollEdgeEffectStyle(.soft, for: [.top, .bottom])
586 |             .onScrollPhaseChange { _, newPhase in
    |              |- error: 'onScrollPhaseChange' is only available in macOS 15.0 or newer
    |              `- note: add 'if #available' version check
587 |                 withAnimation(.easeInOut(duration: 0.2)) {
588 |                     scrollPhase = newPhase

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:591:14: error: 'onScrollGeometryChange(for:of:action:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
542 | 
543 |     // HIG: Results with pagination support
544 |     private var resultsStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
545 |         ZStack(alignment: .bottomTrailing) {
546 |             ScrollView {
    :
589 |                 }
590 |             }
591 |             .onScrollGeometryChange(for: CGFloat.self) { geometry in
    |              |- error: 'onScrollGeometryChange(for:of:action:)' is only available in macOS 15.0 or newer
    |              `- note: add 'if #available' version check
592 |                 geometry.contentOffset.y
593 |             } action: { _, newValue in

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:649:32: error: 'scrollTo(edge:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
644 |     }
645 | 
646 |     private var backToTopButton: some View {
    |                 `- note: add '@available' attribute to enclosing property
647 |         Button {
648 |             withAnimation(.easeInOut(duration: 0.5)) {
649 |                 scrollPosition.scrollTo(edge: .top)
    |                                |- error: 'scrollTo(edge:)' is only available in macOS 15.0 or newer
    |                                `- note: add 'if #available' version check
650 |             }
651 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:786:22: error: cannot find 'UIImpactFeedbackGenerator' in scope
784 | 
785 |         // HIG: Haptic feedback for user actions
786 |         let impact = UIImpactFeedbackGenerator(style: .light)
    |                      `- error: cannot find 'UIImpactFeedbackGenerator' in scope
787 |         impact.impactOccurred()
788 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:786:56: error: cannot infer contextual base in reference to member 'light'
784 | 
785 |         // HIG: Haptic feedback for user actions
786 |         let impact = UIImpactFeedbackGenerator(style: .light)
    |                                                        `- error: cannot infer contextual base in reference to member 'light'
787 |         impact.impactOccurred()
788 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:291:21: error: 'insetGrouped' is unavailable in macOS
289 |             }
290 |         }
291 |         .listStyle(.insetGrouped)
    |                     `- error: 'insetGrouped' is unavailable in macOS
292 |         .navigationTitle("Settings")
293 |         .navigationBarTitleDisplayMode(.large)

SwiftUI.ListStyle.insetGrouped:2:19: note: 'insetGrouped' has been explicitly marked unavailable here
1 | protocol ListStyle {
2 | public static var insetGrouped: InsetGroupedListStyle { get }}
  |                   `- note: 'insetGrouped' has been explicitly marked unavailable here
3 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:293:10: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
291 |         .listStyle(.insetGrouped)
292 |         .navigationTitle("Settings")
293 |         .navigationBarTitleDisplayMode(.large)
    |          `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
294 |         .background(backgroundView.ignoresSafeArea())
295 |         .sheet(isPresented: $showingCSVImporter) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:366:29: error: cannot find 'UINotificationFeedbackGenerator' in scope
364 | 
365 |             // Haptic feedback
366 |             let generator = UINotificationFeedbackGenerator()
    |                             `- error: cannot find 'UINotificationFeedbackGenerator' in scope
367 |             generator.notificationOccurred(.success)
368 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:367:45: error: cannot infer contextual base in reference to member 'success'
365 |             // Haptic feedback
366 |             let generator = UINotificationFeedbackGenerator()
367 |             generator.notificationOccurred(.success)
    |                                             `- error: cannot infer contextual base in reference to member 'success'
368 | 
369 |         } catch {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:373:29: error: cannot find 'UINotificationFeedbackGenerator' in scope
371 | 
372 |             // Error haptic
373 |             let generator = UINotificationFeedbackGenerator()
    |                             `- error: cannot find 'UINotificationFeedbackGenerator' in scope
374 |             generator.notificationOccurred(.error)
375 |         }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:374:45: error: cannot infer contextual base in reference to member 'error'
372 |             // Error haptic
373 |             let generator = UINotificationFeedbackGenerator()
374 |             generator.notificationOccurred(.error)
    |                                             `- error: cannot infer contextual base in reference to member 'error'
375 |         }
376 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:418:33: error: cannot find 'UINotificationFeedbackGenerator' in scope
416 | 
417 |                 // Haptic feedback
418 |                 let generator = UINotificationFeedbackGenerator()
    |                                 `- error: cannot find 'UINotificationFeedbackGenerator' in scope
419 |                 generator.notificationOccurred(.success)
420 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:427:33: error: cannot find 'UINotificationFeedbackGenerator' in scope
425 | 
426 |                 // Error haptic
427 |                 let generator = UINotificationFeedbackGenerator()
    |                                 `- error: cannot find 'UINotificationFeedbackGenerator' in scope
428 |                 generator.notificationOccurred(.error)
429 |             }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ThemeSelectionView.swift:113:37: error: 'navigationBarTrailing' is unavailable in macOS
111 |         .background(backgroundView.ignoresSafeArea())
112 |         .toolbar {
113 |             ToolbarItem(placement: .navigationBarTrailing) {
    |                                     `- error: 'navigationBarTrailing' is unavailable in macOS
114 |                 Button("Done") {
115 |                     dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 
[62/65] Compiling BooksTrackerFeature SettingsView.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:71:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 69 | 
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
    |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
 72 |     @State private var scrollPhase: ScrollPhase = .idle
 73 |     @State private var showBackToTop = false

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:71:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 69 | 
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
    |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
 72 |     @State private var scrollPhase: ScrollPhase = .idle
 73 |     @State private var showBackToTop = false

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:72:37: error: 'ScrollPhase' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
 72 |     @State private var scrollPhase: ScrollPhase = .idle
    |                                     `- error: 'ScrollPhase' is only available in macOS 15.0 or newer
 73 |     @State private var showBackToTop = false
 74 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:101:33: error: 'navigationBarDrawer' is unavailable in macOS
 99 |                 .searchable(
100 |                     text: $searchModel.searchText,
101 |                     placement: .navigationBarDrawer,
    |                                 `- error: 'navigationBarDrawer' is unavailable in macOS
102 |                     prompt: searchPrompt
103 |                 )

SwiftUI.SearchFieldPlacement.navigationBarDrawer:5:21: note: 'navigationBarDrawer' has been explicitly marked unavailable here
3 |   @available(macOS, unavailable)
4 |   @available(tvOS, unavailable)
5 |   public static let navigationBarDrawer: SearchFieldPlacement}
  |                     `- note: 'navigationBarDrawer' has been explicitly marked unavailable here
6 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:120:26: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
118 |                     WorkDiscoveryView(searchResult: book)
119 |                         .navigationTitle(book.displayTitle)
120 |                         .navigationBarTitleDisplayMode(.large)
    |                          `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
121 |                 }
122 |                 .navigationTitle("Search")

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:123:18: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
121 |                 }
122 |                 .navigationTitle("Search")
123 |                 .navigationBarTitleDisplayMode(.inline)
    |                  `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
124 |                 .toolbar {
125 |                     ToolbarItem(placement: .navigationBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:125:45: error: 'navigationBarLeading' is unavailable in macOS
123 |                 .navigationBarTitleDisplayMode(.inline)
124 |                 .toolbar {
125 |                     ToolbarItem(placement: .navigationBarLeading) {
    |                                             `- error: 'navigationBarLeading' is unavailable in macOS
126 |                         advancedSearchButton
127 |                     }

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:129:45: error: 'navigationBarTrailing' is unavailable in macOS
127 |                     }
128 | 
129 |                     ToolbarItem(placement: .navigationBarTrailing) {
    |                                             `- error: 'navigationBarTrailing' is unavailable in macOS
130 |                         barcodeButton
131 |                     }

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:343:10: error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
297 |     // HIG: Enhanced empty states with contextual guidance
298 | 
299 |     private var initialStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
300 |         ScrollView {
301 |             LazyVStack(spacing: 32) {
    :
341 |             .scrollTargetLayout()
342 |         }
343 |         .scrollPosition($scrollPosition)
    |          |- error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
    |          `- note: add 'if #available' version check
344 |         .scrollEdgeEffectStyle(.soft, for: .top)
345 |         .onScrollPhaseChange { _, newPhase in

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:344:10: error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
297 |     // HIG: Enhanced empty states with contextual guidance
298 | 
299 |     private var initialStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
300 |         ScrollView {
301 |             LazyVStack(spacing: 32) {
    :
342 |         }
343 |         .scrollPosition($scrollPosition)
344 |         .scrollEdgeEffectStyle(.soft, for: .top)
    |          |- error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
    |          `- note: add 'if #available' version check
345 |         .onScrollPhaseChange { _, newPhase in
346 |             withAnimation(.easeInOut(duration: 0.2)) {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:345:10: error: 'onScrollPhaseChange' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
297 |     // HIG: Enhanced empty states with contextual guidance
298 | 
299 |     private var initialStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
300 |         ScrollView {
301 |             LazyVStack(spacing: 32) {
    :
343 |         .scrollPosition($scrollPosition)
344 |         .scrollEdgeEffectStyle(.soft, for: .top)
345 |         .onScrollPhaseChange { _, newPhase in
    |          |- error: 'onScrollPhaseChange' is only available in macOS 15.0 or newer
    |          `- note: add 'if #available' version check
346 |             withAnimation(.easeInOut(duration: 0.2)) {
347 |                 scrollPhase = newPhase

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:350:10: error: 'onScrollGeometryChange(for:of:action:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
297 |     // HIG: Enhanced empty states with contextual guidance
298 | 
299 |     private var initialStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
300 |         ScrollView {
301 |             LazyVStack(spacing: 32) {
    :
348 |             }
349 |         }
350 |         .onScrollGeometryChange(for: CGFloat.self) { geometry in
    |          |- error: 'onScrollGeometryChange(for:of:action:)' is only available in macOS 15.0 or newer
    |          `- note: add 'if #available' version check
351 |             geometry.contentOffset.y
352 |         } action: { _, newValue in

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:584:14: error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
542 | 
543 |     // HIG: Results with pagination support
544 |     private var resultsStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
545 |         ZStack(alignment: .bottomTrailing) {
546 |             ScrollView {
    :
582 |                 .scrollTargetLayout()
583 |             }
584 |             .scrollPosition($scrollPosition)
    |              |- error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
    |              `- note: add 'if #available' version check
585 |             .scrollEdgeEffectStyle(.soft, for: [.top, .bottom])
586 |             .onScrollPhaseChange { _, newPhase in

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:585:14: error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
542 | 
543 |     // HIG: Results with pagination support
544 |     private var resultsStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
545 |         ZStack(alignment: .bottomTrailing) {
546 |             ScrollView {
    :
583 |             }
584 |             .scrollPosition($scrollPosition)
585 |             .scrollEdgeEffectStyle(.soft, for: [.top, .bottom])
    |              |- error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
    |              `- note: add 'if #available' version check
586 |             .onScrollPhaseChange { _, newPhase in
587 |                 withAnimation(.easeInOut(duration: 0.2)) {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:586:14: error: 'onScrollPhaseChange' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
542 | 
543 |     // HIG: Results with pagination support
544 |     private var resultsStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
545 |         ZStack(alignment: .bottomTrailing) {
546 |             ScrollView {
    :
584 |             .scrollPosition($scrollPosition)
585 |             .scrollEdgeEffectStyle(.soft, for: [.top, .bottom])
586 |             .onScrollPhaseChange { _, newPhase in
    |              |- error: 'onScrollPhaseChange' is only available in macOS 15.0 or newer
    |              `- note: add 'if #available' version check
587 |                 withAnimation(.easeInOut(duration: 0.2)) {
588 |                     scrollPhase = newPhase

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:591:14: error: 'onScrollGeometryChange(for:of:action:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
542 | 
543 |     // HIG: Results with pagination support
544 |     private var resultsStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
545 |         ZStack(alignment: .bottomTrailing) {
546 |             ScrollView {
    :
589 |                 }
590 |             }
591 |             .onScrollGeometryChange(for: CGFloat.self) { geometry in
    |              |- error: 'onScrollGeometryChange(for:of:action:)' is only available in macOS 15.0 or newer
    |              `- note: add 'if #available' version check
592 |                 geometry.contentOffset.y
593 |             } action: { _, newValue in

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:649:32: error: 'scrollTo(edge:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
644 |     }
645 | 
646 |     private var backToTopButton: some View {
    |                 `- note: add '@available' attribute to enclosing property
647 |         Button {
648 |             withAnimation(.easeInOut(duration: 0.5)) {
649 |                 scrollPosition.scrollTo(edge: .top)
    |                                |- error: 'scrollTo(edge:)' is only available in macOS 15.0 or newer
    |                                `- note: add 'if #available' version check
650 |             }
651 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:786:22: error: cannot find 'UIImpactFeedbackGenerator' in scope
784 | 
785 |         // HIG: Haptic feedback for user actions
786 |         let impact = UIImpactFeedbackGenerator(style: .light)
    |                      `- error: cannot find 'UIImpactFeedbackGenerator' in scope
787 |         impact.impactOccurred()
788 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:786:56: error: cannot infer contextual base in reference to member 'light'
784 | 
785 |         // HIG: Haptic feedback for user actions
786 |         let impact = UIImpactFeedbackGenerator(style: .light)
    |                                                        `- error: cannot infer contextual base in reference to member 'light'
787 |         impact.impactOccurred()
788 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:291:21: error: 'insetGrouped' is unavailable in macOS
289 |             }
290 |         }
291 |         .listStyle(.insetGrouped)
    |                     `- error: 'insetGrouped' is unavailable in macOS
292 |         .navigationTitle("Settings")
293 |         .navigationBarTitleDisplayMode(.large)

SwiftUI.ListStyle.insetGrouped:2:19: note: 'insetGrouped' has been explicitly marked unavailable here
1 | protocol ListStyle {
2 | public static var insetGrouped: InsetGroupedListStyle { get }}
  |                   `- note: 'insetGrouped' has been explicitly marked unavailable here
3 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:293:10: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
291 |         .listStyle(.insetGrouped)
292 |         .navigationTitle("Settings")
293 |         .navigationBarTitleDisplayMode(.large)
    |          `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
294 |         .background(backgroundView.ignoresSafeArea())
295 |         .sheet(isPresented: $showingCSVImporter) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:366:29: error: cannot find 'UINotificationFeedbackGenerator' in scope
364 | 
365 |             // Haptic feedback
366 |             let generator = UINotificationFeedbackGenerator()
    |                             `- error: cannot find 'UINotificationFeedbackGenerator' in scope
367 |             generator.notificationOccurred(.success)
368 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:367:45: error: cannot infer contextual base in reference to member 'success'
365 |             // Haptic feedback
366 |             let generator = UINotificationFeedbackGenerator()
367 |             generator.notificationOccurred(.success)
    |                                             `- error: cannot infer contextual base in reference to member 'success'
368 | 
369 |         } catch {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:373:29: error: cannot find 'UINotificationFeedbackGenerator' in scope
371 | 
372 |             // Error haptic
373 |             let generator = UINotificationFeedbackGenerator()
    |                             `- error: cannot find 'UINotificationFeedbackGenerator' in scope
374 |             generator.notificationOccurred(.error)
375 |         }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:374:45: error: cannot infer contextual base in reference to member 'error'
372 |             // Error haptic
373 |             let generator = UINotificationFeedbackGenerator()
374 |             generator.notificationOccurred(.error)
    |                                             `- error: cannot infer contextual base in reference to member 'error'
375 |         }
376 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:418:33: error: cannot find 'UINotificationFeedbackGenerator' in scope
416 | 
417 |                 // Haptic feedback
418 |                 let generator = UINotificationFeedbackGenerator()
    |                                 `- error: cannot find 'UINotificationFeedbackGenerator' in scope
419 |                 generator.notificationOccurred(.success)
420 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:427:33: error: cannot find 'UINotificationFeedbackGenerator' in scope
425 | 
426 |                 // Error haptic
427 |                 let generator = UINotificationFeedbackGenerator()
    |                                 `- error: cannot find 'UINotificationFeedbackGenerator' in scope
428 |                 generator.notificationOccurred(.error)
429 |             }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ThemeSelectionView.swift:113:37: error: 'navigationBarTrailing' is unavailable in macOS
111 |         .background(backgroundView.ignoresSafeArea())
112 |         .toolbar {
113 |             ToolbarItem(placement: .navigationBarTrailing) {
    |                                     `- error: 'navigationBarTrailing' is unavailable in macOS
114 |                 Button("Done") {
115 |                     dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 
[63/65] Compiling BooksTrackerFeature ThemeSelectionView.swift
/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:71:41: error: 'ScrollPosition' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 69 | 
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
    |                                         `- error: 'ScrollPosition' is only available in macOS 15.0 or newer
 72 |     @State private var scrollPhase: ScrollPhase = .idle
 73 |     @State private var showBackToTop = false

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:71:41: error: 'init(idType:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 69 | 
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
    |                                         `- error: 'init(idType:)' is only available in macOS 15.0 or newer
 72 |     @State private var scrollPhase: ScrollPhase = .idle
 73 |     @State private var showBackToTop = false

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:72:37: error: 'ScrollPhase' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
 70 |     // iOS 26 Scrolling Enhancements
 71 |     @State private var scrollPosition = ScrollPosition()
 72 |     @State private var scrollPhase: ScrollPhase = .idle
    |                                     `- error: 'ScrollPhase' is only available in macOS 15.0 or newer
 73 |     @State private var showBackToTop = false
 74 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:101:33: error: 'navigationBarDrawer' is unavailable in macOS
 99 |                 .searchable(
100 |                     text: $searchModel.searchText,
101 |                     placement: .navigationBarDrawer,
    |                                 `- error: 'navigationBarDrawer' is unavailable in macOS
102 |                     prompt: searchPrompt
103 |                 )

SwiftUI.SearchFieldPlacement.navigationBarDrawer:5:21: note: 'navigationBarDrawer' has been explicitly marked unavailable here
3 |   @available(macOS, unavailable)
4 |   @available(tvOS, unavailable)
5 |   public static let navigationBarDrawer: SearchFieldPlacement}
  |                     `- note: 'navigationBarDrawer' has been explicitly marked unavailable here
6 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:120:26: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
118 |                     WorkDiscoveryView(searchResult: book)
119 |                         .navigationTitle(book.displayTitle)
120 |                         .navigationBarTitleDisplayMode(.large)
    |                          `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
121 |                 }
122 |                 .navigationTitle("Search")

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:123:18: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
121 |                 }
122 |                 .navigationTitle("Search")
123 |                 .navigationBarTitleDisplayMode(.inline)
    |                  `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
124 |                 .toolbar {
125 |                     ToolbarItem(placement: .navigationBarLeading) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:125:45: error: 'navigationBarLeading' is unavailable in macOS
123 |                 .navigationBarTitleDisplayMode(.inline)
124 |                 .toolbar {
125 |                     ToolbarItem(placement: .navigationBarLeading) {
    |                                             `- error: 'navigationBarLeading' is unavailable in macOS
126 |                         advancedSearchButton
127 |                     }

SwiftUI.ToolbarItemPlacement.navigationBarLeading:7:21: note: 'navigationBarLeading' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarLeading instead")
7 |   public static let navigationBarLeading: ToolbarItemPlacement}
  |                     `- note: 'navigationBarLeading' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:129:45: error: 'navigationBarTrailing' is unavailable in macOS
127 |                     }
128 | 
129 |                     ToolbarItem(placement: .navigationBarTrailing) {
    |                                             `- error: 'navigationBarTrailing' is unavailable in macOS
130 |                         barcodeButton
131 |                     }

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:343:10: error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
297 |     // HIG: Enhanced empty states with contextual guidance
298 | 
299 |     private var initialStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
300 |         ScrollView {
301 |             LazyVStack(spacing: 32) {
    :
341 |             .scrollTargetLayout()
342 |         }
343 |         .scrollPosition($scrollPosition)
    |          |- error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
    |          `- note: add 'if #available' version check
344 |         .scrollEdgeEffectStyle(.soft, for: .top)
345 |         .onScrollPhaseChange { _, newPhase in

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:344:10: error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
297 |     // HIG: Enhanced empty states with contextual guidance
298 | 
299 |     private var initialStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
300 |         ScrollView {
301 |             LazyVStack(spacing: 32) {
    :
342 |         }
343 |         .scrollPosition($scrollPosition)
344 |         .scrollEdgeEffectStyle(.soft, for: .top)
    |          |- error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
    |          `- note: add 'if #available' version check
345 |         .onScrollPhaseChange { _, newPhase in
346 |             withAnimation(.easeInOut(duration: 0.2)) {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:345:10: error: 'onScrollPhaseChange' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
297 |     // HIG: Enhanced empty states with contextual guidance
298 | 
299 |     private var initialStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
300 |         ScrollView {
301 |             LazyVStack(spacing: 32) {
    :
343 |         .scrollPosition($scrollPosition)
344 |         .scrollEdgeEffectStyle(.soft, for: .top)
345 |         .onScrollPhaseChange { _, newPhase in
    |          |- error: 'onScrollPhaseChange' is only available in macOS 15.0 or newer
    |          `- note: add 'if #available' version check
346 |             withAnimation(.easeInOut(duration: 0.2)) {
347 |                 scrollPhase = newPhase

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:350:10: error: 'onScrollGeometryChange(for:of:action:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
297 |     // HIG: Enhanced empty states with contextual guidance
298 | 
299 |     private var initialStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
300 |         ScrollView {
301 |             LazyVStack(spacing: 32) {
    :
348 |             }
349 |         }
350 |         .onScrollGeometryChange(for: CGFloat.self) { geometry in
    |          |- error: 'onScrollGeometryChange(for:of:action:)' is only available in macOS 15.0 or newer
    |          `- note: add 'if #available' version check
351 |             geometry.contentOffset.y
352 |         } action: { _, newValue in

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:584:14: error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
542 | 
543 |     // HIG: Results with pagination support
544 |     private var resultsStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
545 |         ZStack(alignment: .bottomTrailing) {
546 |             ScrollView {
    :
582 |                 .scrollTargetLayout()
583 |             }
584 |             .scrollPosition($scrollPosition)
    |              |- error: 'scrollPosition(_:anchor:)' is only available in macOS 15.0 or newer
    |              `- note: add 'if #available' version check
585 |             .scrollEdgeEffectStyle(.soft, for: [.top, .bottom])
586 |             .onScrollPhaseChange { _, newPhase in

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:585:14: error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
542 | 
543 |     // HIG: Results with pagination support
544 |     private var resultsStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
545 |         ZStack(alignment: .bottomTrailing) {
546 |             ScrollView {
    :
583 |             }
584 |             .scrollPosition($scrollPosition)
585 |             .scrollEdgeEffectStyle(.soft, for: [.top, .bottom])
    |              |- error: 'scrollEdgeEffectStyle(_:for:)' is only available in macOS 26.0 or newer
    |              `- note: add 'if #available' version check
586 |             .onScrollPhaseChange { _, newPhase in
587 |                 withAnimation(.easeInOut(duration: 0.2)) {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:586:14: error: 'onScrollPhaseChange' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
542 | 
543 |     // HIG: Results with pagination support
544 |     private var resultsStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
545 |         ZStack(alignment: .bottomTrailing) {
546 |             ScrollView {
    :
584 |             .scrollPosition($scrollPosition)
585 |             .scrollEdgeEffectStyle(.soft, for: [.top, .bottom])
586 |             .onScrollPhaseChange { _, newPhase in
    |              |- error: 'onScrollPhaseChange' is only available in macOS 15.0 or newer
    |              `- note: add 'if #available' version check
587 |                 withAnimation(.easeInOut(duration: 0.2)) {
588 |                     scrollPhase = newPhase

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:591:14: error: 'onScrollGeometryChange(for:of:action:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
542 | 
543 |     // HIG: Results with pagination support
544 |     private var resultsStateView: some View {
    |                 `- note: add '@available' attribute to enclosing property
545 |         ZStack(alignment: .bottomTrailing) {
546 |             ScrollView {
    :
589 |                 }
590 |             }
591 |             .onScrollGeometryChange(for: CGFloat.self) { geometry in
    |              |- error: 'onScrollGeometryChange(for:of:action:)' is only available in macOS 15.0 or newer
    |              `- note: add 'if #available' version check
592 |                 geometry.contentOffset.y
593 |             } action: { _, newValue in

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:649:32: error: 'scrollTo(edge:)' is only available in macOS 15.0 or newer
 55 | // MARK: - Main Search View
 56 | 
 57 | public struct SearchView: View {
    |               `- note: add '@available' attribute to enclosing struct
 58 |     @Environment(\.iOS26ThemeStore) private var themeStore
 59 |     @Environment(\.modelContext) private var modelContext
    :
644 |     }
645 | 
646 |     private var backToTopButton: some View {
    |                 `- note: add '@available' attribute to enclosing property
647 |         Button {
648 |             withAnimation(.easeInOut(duration: 0.5)) {
649 |                 scrollPosition.scrollTo(edge: .top)
    |                                |- error: 'scrollTo(edge:)' is only available in macOS 15.0 or newer
    |                                `- note: add 'if #available' version check
650 |             }
651 |         } label: {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:786:22: error: cannot find 'UIImpactFeedbackGenerator' in scope
784 | 
785 |         // HIG: Haptic feedback for user actions
786 |         let impact = UIImpactFeedbackGenerator(style: .light)
    |                      `- error: cannot find 'UIImpactFeedbackGenerator' in scope
787 |         impact.impactOccurred()
788 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SearchView.swift:786:56: error: cannot infer contextual base in reference to member 'light'
784 | 
785 |         // HIG: Haptic feedback for user actions
786 |         let impact = UIImpactFeedbackGenerator(style: .light)
    |                                                        `- error: cannot infer contextual base in reference to member 'light'
787 |         impact.impactOccurred()
788 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:291:21: error: 'insetGrouped' is unavailable in macOS
289 |             }
290 |         }
291 |         .listStyle(.insetGrouped)
    |                     `- error: 'insetGrouped' is unavailable in macOS
292 |         .navigationTitle("Settings")
293 |         .navigationBarTitleDisplayMode(.large)

SwiftUI.ListStyle.insetGrouped:2:19: note: 'insetGrouped' has been explicitly marked unavailable here
1 | protocol ListStyle {
2 | public static var insetGrouped: InsetGroupedListStyle { get }}
  |                   `- note: 'insetGrouped' has been explicitly marked unavailable here
3 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:293:10: error: 'navigationBarTitleDisplayMode' is unavailable in macOS
291 |         .listStyle(.insetGrouped)
292 |         .navigationTitle("Settings")
293 |         .navigationBarTitleDisplayMode(.large)
    |          `- error: 'navigationBarTitleDisplayMode' is unavailable in macOS
294 |         .background(backgroundView.ignoresSafeArea())
295 |         .sheet(isPresented: $showingCSVImporter) {

SwiftUI.View.navigationBarTitleDisplayMode:2:25: note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
1 | protocol View {
2 | nonisolated public func navigationBarTitleDisplayMode(_ displayMode: NavigationBarItem.TitleDisplayMode) -> some View
  |                         `- note: 'navigationBarTitleDisplayMode' has been explicitly marked unavailable here
3 |   }
4 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:366:29: error: cannot find 'UINotificationFeedbackGenerator' in scope
364 | 
365 |             // Haptic feedback
366 |             let generator = UINotificationFeedbackGenerator()
    |                             `- error: cannot find 'UINotificationFeedbackGenerator' in scope
367 |             generator.notificationOccurred(.success)
368 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:367:45: error: cannot infer contextual base in reference to member 'success'
365 |             // Haptic feedback
366 |             let generator = UINotificationFeedbackGenerator()
367 |             generator.notificationOccurred(.success)
    |                                             `- error: cannot infer contextual base in reference to member 'success'
368 | 
369 |         } catch {

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:373:29: error: cannot find 'UINotificationFeedbackGenerator' in scope
371 | 
372 |             // Error haptic
373 |             let generator = UINotificationFeedbackGenerator()
    |                             `- error: cannot find 'UINotificationFeedbackGenerator' in scope
374 |             generator.notificationOccurred(.error)
375 |         }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:374:45: error: cannot infer contextual base in reference to member 'error'
372 |             // Error haptic
373 |             let generator = UINotificationFeedbackGenerator()
374 |             generator.notificationOccurred(.error)
    |                                             `- error: cannot infer contextual base in reference to member 'error'
375 |         }
376 |     }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:418:33: error: cannot find 'UINotificationFeedbackGenerator' in scope
416 | 
417 |                 // Haptic feedback
418 |                 let generator = UINotificationFeedbackGenerator()
    |                                 `- error: cannot find 'UINotificationFeedbackGenerator' in scope
419 |                 generator.notificationOccurred(.success)
420 | 

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/SettingsView.swift:427:33: error: cannot find 'UINotificationFeedbackGenerator' in scope
425 | 
426 |                 // Error haptic
427 |                 let generator = UINotificationFeedbackGenerator()
    |                                 `- error: cannot find 'UINotificationFeedbackGenerator' in scope
428 |                 generator.notificationOccurred(.error)
429 |             }

/Users/justingardner/Downloads/xcode/books-tracker-v1/BooksTrackerPackage/Sources/BooksTrackerFeature/ThemeSelectionView.swift:113:37: error: 'navigationBarTrailing' is unavailable in macOS
111 |         .background(backgroundView.ignoresSafeArea())
112 |         .toolbar {
113 |             ToolbarItem(placement: .navigationBarTrailing) {
    |                                     `- error: 'navigationBarTrailing' is unavailable in macOS
114 |                 Button("Done") {
115 |                     dismiss()

SwiftUI.ToolbarItemPlacement.navigationBarTrailing:7:21: note: 'navigationBarTrailing' has been explicitly marked unavailable here
5 |   @available(watchOS, unavailable)
6 |   @available(visionOS, introduced: 1.0, deprecated: 100000.0, message: "use topBarTrailing instead")
7 |   public static let navigationBarTrailing: ToolbarItemPlacement}
  |                     `- note: 'navigationBarTrailing' has been explicitly marked unavailable here
8 | 
error: fatalError
