# Books API Proxy Configuration
name = "books-api-proxy"
main = "src/index.js"
compatibility_date = "2024-09-17"
compatibility_flags = ["nodejs_compat"]

# PAID TIER OPTIMIZATION: Maximum performance configuration
[limits]
cpu_ms = 30000         # Maximum CPU allocation
memory_mb = 256        # Doubled memory for caching operations
keep_vars = true

# Smart placement for optimal global performance
[placement]
mode = "smart"

# Advanced observability and logging
[observability]
enabled = true
# Logpush configuration for structured logging to R2
logpush = true

# Analytics Engine for performance metrics
[[analytics_engine_datasets]]
binding = "PERFORMANCE_ANALYTICS"
dataset = "books_api_performance"

[[analytics_engine_datasets]]
binding = "CACHE_ANALYTICS"
dataset = "books_api_cache_metrics"

[[analytics_engine_datasets]]
binding = "PROVIDER_ANALYTICS"
dataset = "books_api_provider_performance"

# Secrets management using secrets store - CORRECT STRUCTURE
[[secrets_store_secrets]]
binding = "GOOGLE_BOOKS_API_KEY"
store_id = "b0562ac16fde468c8af12717a6c88400"
secret_name = "Google_books_hardoooe"

[[secrets_store_secrets]]
binding = "GOOGLE_BOOKS_IOSKEY"
store_id = "b0562ac16fde468c8af12717a6c88400"
secret_name = "Google_books_ioskey"

[[secrets_store_secrets]]
binding = "ISBNDB_API_KEY"
store_id = "b0562ac16fde468c8af12717a6c88400"
secret_name = "ISBNDB_API_KEY"

[[secrets_store_secrets]]
binding = "ISBN_SEARCH_KEY"
store_id = "b0562ac16fde468c8af12717a6c88400"
secret_name = "ISBN_search_key"

# Service bindings for worker-to-worker RPC communication
[[services]]
binding = "ISBNDB_WORKER"
service = "isbndb-biography-worker-production"
entrypoint = "ISBNdbWorker" # Correctly point to the RPC class

[[services]]
binding = "OPENLIBRARY_WORKER"
service = "openlibrary-search-worker-production"
entrypoint = "OpenLibraryWorker" # Correctly point to the RPC class

[[services]]
binding = "GOOGLE_BOOKS_WORKER"
service = "google-books-worker-production"
entrypoint = "GoogleBooksWorker" # Correctly point to the RPC class

# KV Cache for API responses - primary cache layer
[[kv_namespaces]]
binding = "CACHE"
id = "b9cade63b6db48fd80c109a013f38fdb"

# R2 Storage for large response caching (cold storage layer)
[[r2_buckets]]
binding = "API_CACHE_COLD"
bucket_name = "personal-library-data"

# R2 Storage unified with cache-warmer for consistency
[[r2_buckets]]
binding = "LIBRARY_DATA"
bucket_name = "personal-library-data"

# Environment variables for configuration
# PAID TIER OPTIMIZED CONFIGURATION
[vars]
CACHE_HOT_TTL = "7200"         # KV cache TTL: 2 hours (increased)
CACHE_COLD_TTL = "1209600"     # R2 cache TTL: 14 days (doubled)
MAX_RESULTS_DEFAULT = "40"     # Default max results
RATE_LIMIT_MS = "50"           # Aggressive rate limiting (50% faster)
CONCURRENCY_LIMIT = "10"       # Concurrent request processing
AGGRESSIVE_CACHING = "true"    # Enable aggressive caching strategies
ENABLE_PERFORMANCE_LOGGING = "true"  # Detailed performance metrics
ENABLE_CACHE_ANALYTICS = "true"      # Cache hit/miss tracking
ENABLE_PROVIDER_METRICS = "true"     # Provider performance tracking
LOG_LEVEL = "INFO"                   # Logging verbosity
STRUCTURED_LOGGING = "true"          # JSON structured logs