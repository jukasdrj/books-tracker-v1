# OPTIMIZED CloudFlare Workers $5/mo Configuration
# Enhanced Cache Warmer - Maximum Performance & Reliability
name = "personal-library-cache-warmer"
main = "src/index.js"
compatibility_date = "2024-09-17"
compatibility_flags = ["nodejs_compat", "streams_enable_constructors"]

# CPU and Memory Optimization for Paid Plan
limits = { cpu_ms = 30000 }  # 30s CPU limit (paid plan benefit)
keep_vars = true

# Enhanced Observability for Paid Plan
[observability]
enabled = true
head_sampling_rate = 0.1  # Sample 10% for detailed analytics

# Advanced Logging with Logpush (Paid Feature)
logpush = true
[logpush]
enabled = true
# Custom destination for structured logs
destination = "https://logs.your-analytics-service.com/cf-workers"
# Enhanced log fields for performance analysis
fields = ["timestamp", "rayId", "outcome", "cpuTime", "wallTime", "event"]
filter = '{"outcome": ["ok", "exception", "exceededMemory", "exceededCpu"]}'

# Analytics Engine for Performance Tracking
[[analytics_engine_datasets]]
binding = "PERFORMANCE_ANALYTICS"
dataset = "cache_warming_metrics"

[[analytics_engine_datasets]]
binding = "USAGE_ANALYTICS"
dataset = "api_usage_tracking"

# Enhanced Service Bindings with Retry Logic
[[services]]
binding = "BOOKS_API_PROXY"
service = "books-api-proxy"
# Paid plan: Enhanced service binding reliability
entrypoint = "default"

[[services]]
binding = "ISBNDB_WORKER"
service = "isbndb-biography-worker-production"
entrypoint = "default"

# Optimized KV Configuration for Paid Plan
[[kv_namespaces]]
binding = "WARMING_CACHE"
id = "69949ba5a5b44214b7a2e40c1b687c35"
# Paid plan: Enhanced read/write performance
preview_id = "test_cache_namespace_id"

# Additional KV for bulk operations (paid plan benefit)
[[kv_namespaces]]
binding = "BULK_OPERATIONS_CACHE"
id = "new_bulk_operations_namespace_id"

# Enhanced R2 Configuration with Intelligent Tiering
[[r2_buckets]]
binding = "LIBRARY_DATA"
bucket_name = "personal-library-data"
preview_bucket_name = "personal-library-data-preview"

# Secondary R2 for backup and analytics (paid plan)
[[r2_buckets]]
binding = "ANALYTICS_STORAGE"
bucket_name = "cache-warming-analytics"

# Enhanced Secrets Management
secrets_store_secrets = [
  { binding = "ISBNDB_API_KEY", store_id = "b0562ac16fde468c8af12717a6c88400", secret_name = "ISBNDB_API_KEY" },
  { binding = "GOOGLE_BOOKS_HARDOOOE", store_id = "b0562ac16fde468c8af12717a6c88400", secret_name = "Google_books_hardoooe" },
  { binding = "GOOGLE_BOOKS_IOSKEY", store_id = "b0562ac16fde468c8af12717a6c88400", secret_name = "Google_books_ioskey" },
  { binding = "ISBN_SEARCH_KEY", store_id = "b0562ac16fde468c8af12717a6c88400", secret_name = "ISBN_search_key" }
]

# Optimized Cron Triggers for Paid Plan Performance
[triggers]
crons = [
  "0 6 * * 1",   # Weekly: 6 AM UTC Monday - Full library re-warming (30s execution)
  "0 12 * * *",  # Daily: 12 PM UTC - New additions check (10s execution)
  "0 18 * * *",  # Daily: 6 PM UTC - Cache optimization and cleanup (15s execution)
  "0 0 1 * *"    # Monthly: First of month - Analytics export and archival (30s execution)
]

# Multi-Environment Configuration for Testing
[env.development]
name = "cache-warmer-dev"

[[env.development.kv_namespaces]]
binding = "WARMING_CACHE"
id = "dev_cache_namespace_id"

[env.staging]
name = "cache-warmer-staging"

[[env.staging.kv_namespaces]]
binding = "WARMING_CACHE"
id = "staging_cache_namespace_id"

[env.production]
name = "cache-warmer-prod"
# Production uses default bindings above