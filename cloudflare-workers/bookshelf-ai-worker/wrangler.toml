# Bookshelf AI Worker Configuration
name = "bookshelf-ai-worker"
main = "src/index.js"
compatibility_date = "2024-09-17"
compatibility_flags = ["nodejs_compat"]

# Performance optimization
[limits]
cpu_ms = 30000         # Maximum CPU for AI processing
memory_mb = 256        # Sufficient for image handling

# Smart placement for optimal performance
[placement]
mode = "smart"

# Observability
[observability]
enabled = true

# Analytics for AI worker performance
[[analytics_engine_datasets]]
binding = "AI_ANALYTICS"
dataset = "bookshelf_ai_performance"

# Gemini API Key from Google AI Studio (Secrets Store)
[[secrets_store_secrets]]
binding = "GEMINI_API_KEY"
store_id = "b0562ac16fde468c8af12717a6c88400"
secret_name = "google_aistudio_key"

# AI Provider Configuration
# AI_PROVIDER: Which AI vision provider to use
#   - "gemini": Google Gemini 2.5 Flash (requires GEMINI_API_KEY secret)
#   - "cloudflare": Cloudflare Workers AI (requires [ai] binding below)
[vars]
AI_PROVIDER = "gemini"  # Change to "cloudflare" to use Workers AI
MAX_IMAGE_SIZE_MB = "10"
REQUEST_TIMEOUT_MS = "50000"  # Increased to 50s for large image processing
LOG_LEVEL = "DEBUG"  # Maximum AI processing visibility
CONFIDENCE_THRESHOLD = "0.7"  # Minimum confidence score for enrichment

# KV namespace for scan job tracking
[[kv_namespaces]]
binding = "SCAN_JOBS"
id = "5d4b89403bbb4be1949b1ee30df5353e"

# Service binding to books-api-proxy for metadata enrichment (RPC)
[[services]]
binding = "BOOKS_API_PROXY"
service = "books-api-proxy"
entrypoint = "BooksAPIProxyWorker"

# Workers AI Binding (required for AI_PROVIDER="cloudflare")
[ai]
binding = "AI"
